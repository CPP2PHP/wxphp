/*
 * @author Mário Soares
 * @contributors Jefferson González
 * 
 * @license 
 * This file is part of wxPHP check the LICENSE file for information.
 * 
 * @note
 * This file was auto-generated by the wxPHP source maker
*/

#ifndef WXPHP_CMNDLG_H_GUARD
#define WXPHP_CMNDLG_H_GUARD

#include "references.h"
#include "object_types.h"

ZEND_BEGIN_ARG_INFO_EX(wxphp_cmndlg_get_args, 0, 0, 1)
	ZEND_ARG_INFO(0, name)
ZEND_END_ARG_INFO()

extern zend_class_entry* php_wxAboutDialogInfo_entry;
void php_wxAboutDialogInfo_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxAboutDialogInfo_php: public wxAboutDialogInfo{
	public:
	
	wxAboutDialogInfo_php():wxAboutDialogInfo(){}
		
	
	
	void ***tsrm_ls;
	zval* phpObj;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxAboutDialogInfo 
{
    zend_object zo;
    wxAboutDialogInfo_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxAboutDialogInfo_free(void *object TSRMLS_DC);
zend_object_value php_wxAboutDialogInfo_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxAboutDialogInfo_functions[] = {
	PHP_ME(php_wxAboutDialogInfo, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_ME(php_wxAboutDialogInfo, SetWebSite, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAboutDialogInfo, SetVersion, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAboutDialogInfo, AddDeveloper, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAboutDialogInfo, AddDocWriter, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAboutDialogInfo, AddTranslator, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAboutDialogInfo, GetCopyright, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAboutDialogInfo, GetDescription, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAboutDialogInfo, HasCopyright, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAboutDialogInfo, HasDescription, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAboutDialogInfo, SetArtists, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAboutDialogInfo, SetCopyright, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAboutDialogInfo, SetDescription, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAboutDialogInfo, SetDevelopers, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAboutDialogInfo, SetDocWriters, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAboutDialogInfo, SetIcon, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAboutDialogInfo, SetLicence, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAboutDialogInfo, SetLicense, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAboutDialogInfo, SetName, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAboutDialogInfo, SetTranslators, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAboutDialogInfo, AddArtist, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAboutDialogInfo, GetName, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxBusyInfo_entry;
void php_wxBusyInfo_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxBusyInfo_php: public wxBusyInfo{
	public:
	
	wxBusyInfo_php(const wxString& msg, wxWindow* parent=NULL):wxBusyInfo(msg, parent){}
		
	
	
	void ***tsrm_ls;
	zval* phpObj;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxBusyInfo 
{
    zend_object zo;
    wxBusyInfo_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxBusyInfo_free(void *object TSRMLS_DC);
zend_object_value php_wxBusyInfo_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxBusyInfo_functions[] = {
	PHP_ME(php_wxBusyInfo, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxSingleChoiceDialog_entry;
void php_wxSingleChoiceDialog_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxSingleChoiceDialog_php: public wxSingleChoiceDialog{
	public:
	
	wxSingleChoiceDialog_php(wxWindow* parent, const wxString& message, const wxString& caption, int n, const wxString* choices, void** clientData=NULL, long style=wxCHOICEDLG_STYLE, const wxPoint& pos=wxDefaultPosition):wxSingleChoiceDialog(parent, message, caption, n, choices, clientData, style, pos){}
	wxSingleChoiceDialog_php(wxWindow* parent, const wxString& message, const wxString& caption, const wxArrayString& choices, void** clientData=NULL, long style=wxCHOICEDLG_STYLE, const wxPoint& pos=wxDefaultPosition):wxSingleChoiceDialog(parent, message, caption, choices, clientData, style, pos){}
		
	
	
	void ***tsrm_ls;
	zval* phpObj;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxSingleChoiceDialog 
{
    zend_object zo;
    wxSingleChoiceDialog_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxSingleChoiceDialog_free(void *object TSRMLS_DC);
zend_object_value php_wxSingleChoiceDialog_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxSingleChoiceDialog_functions[] = {
	PHP_ME(php_wxSingleChoiceDialog, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSingleChoiceDialog, GetStringSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSingleChoiceDialog, SetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSingleChoiceDialog, ShowModal, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSingleChoiceDialog, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_ME(php_wxSingleChoiceDialog, GetSelectionData, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxPrintDialogData_entry;
void php_wxPrintDialogData_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxPrintDialogData_php: public wxPrintDialogData{
	public:
	
	wxPrintDialogData_php():wxPrintDialogData(){}
	wxPrintDialogData_php(const wxPrintData& printData):wxPrintDialogData(printData){}
		
	
	
	void ***tsrm_ls;
	zval* phpObj;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxPrintDialogData 
{
    zend_object zo;
    wxPrintDialogData_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxPrintDialogData_free(void *object TSRMLS_DC);
zend_object_value php_wxPrintDialogData_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxPrintDialogData_functions[] = {
	PHP_ME(php_wxPrintDialogData, EnableHelp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPrintDialogData, EnablePageNumbers, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPrintDialogData, EnablePrintToFile, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPrintDialogData, EnableSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPrintDialogData, GetAllPages, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPrintDialogData, GetCollate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPrintDialogData, GetFromPage, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPrintDialogData, GetMaxPage, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPrintDialogData, GetMinPage, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPrintDialogData, GetNoCopies, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPrintDialogData, GetPrintData, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPrintDialogData, GetPrintToFile, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPrintDialogData, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPrintDialogData, GetToPage, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPrintDialogData, IsOk, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPrintDialogData, SetCollate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPrintDialogData, SetFromPage, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPrintDialogData, SetMaxPage, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPrintDialogData, SetMinPage, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPrintDialogData, SetNoCopies, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPrintDialogData, SetPrintData, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPrintDialogData, SetPrintToFile, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPrintDialogData, SetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPrintDialogData, SetToPage, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPrintDialogData, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxColourDialog_entry;
void php_wxColourDialog_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxColourDialog_php: public wxColourDialog{
	public:
	
	wxColourDialog_php(wxWindow* parent, wxColourData* data=NULL):wxColourDialog(parent, data){}
		
	
	
	void ***tsrm_ls;
	zval* phpObj;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxColourDialog 
{
    zend_object zo;
    wxColourDialog_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxColourDialog_free(void *object TSRMLS_DC);
zend_object_value php_wxColourDialog_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxColourDialog_functions[] = {
	PHP_ME(php_wxColourDialog, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_ME(php_wxColourDialog, ShowModal, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxColourDialog, GetColourData, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxColourDialog, Create, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxColourData_entry;
void php_wxColourData_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxColourData_php: public wxColourData{
	public:
	
	wxColourData_php():wxColourData(){}
		
	
	
	void ***tsrm_ls;
	zval* phpObj;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxColourData 
{
    zend_object zo;
    wxColourData_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxColourData_free(void *object TSRMLS_DC);
zend_object_value php_wxColourData_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxColourData_functions[] = {
	PHP_ME(php_wxColourData, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_ME(php_wxColourData, ToString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxColourData, SetCustomColour, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxColourData, SetColour, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxColourData, SetChooseFull, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxColourData, GetCustomColour, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxColourData, GetColour, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxColourData, GetChooseFull, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxColourData, FromString, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxDialog_entry;
void php_wxDialog_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxDialog_php: public wxDialog{
	public:
	
	wxDialog_php(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos=wxDefaultPosition, const wxSize& size=wxDefaultSize, long style=wxDEFAULT_DIALOG_STYLE, const wxString& name=wxDialogNameStr):wxDialog(parent, id, title, pos, size, style, name){}
	wxDialog_php():wxDialog(){}
		
	
	
	void ***tsrm_ls;
	zval* phpObj;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxDialog 
{
    zend_object zo;
    wxDialog_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxDialog_free(void *object TSRMLS_DC);
zend_object_value php_wxDialog_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDialog_functions[] = {
	PHP_ME(php_wxDialog, AddMainButtonId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDialog, Centre, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDialog, Create, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDialog, CreateButtonSizer, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDialog, CreateSeparatedButtonSizer, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDialog, CreateSeparatedSizer, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDialog, CreateStdDialogButtonSizer, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDialog, EndModal, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDialog, GetAffirmativeId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDialog, GetContentWindow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDialog, GetEscapeId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDialog, GetReturnCode, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDialog, Iconize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDialog, IsIconized, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDialog, IsModal, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDialog, SetAffirmativeId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDialog, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_ME(php_wxDialog, ShowWindowModal, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDialog, ShowModal, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDialog, Show, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDialog, SetReturnCode, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDialog, SetLayoutAdaptationMode, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDialog, SetLayoutAdaptationLevel, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDialog, SetIcons, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDialog, SetIcon, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDialog, SetEscapeId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDialog, SetLayoutAdaptationDone, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDialog, GetLayoutAdaptationDone, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDialog, GetLayoutAdaptationLevel, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDialog, EnableLayoutAdaptation, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDialog, DoLayoutAdaptation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDialog, CanDoLayoutAdaptation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDialog, IsLayoutAdaptationEnabled, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxDirDialog_entry;
void php_wxDirDialog_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxDirDialog_php: public wxDirDialog{
	public:
	
	wxDirDialog_php(wxWindow* parent, const wxString& message=wxDirSelectorPromptStr, const wxString& defaultPath=wxEmptyString, long style=wxDD_DEFAULT_STYLE, const wxPoint& pos=wxDefaultPosition, const wxSize& size=wxDefaultSize, const wxString& name=wxDirDialogNameStr):wxDirDialog(parent, message, defaultPath, style, pos, size, name){}
		
	
	
	void ***tsrm_ls;
	zval* phpObj;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxDirDialog 
{
    zend_object zo;
    wxDirDialog_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxDirDialog_free(void *object TSRMLS_DC);
zend_object_value php_wxDirDialog_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDirDialog_functions[] = {
	PHP_ME(php_wxDirDialog, GetMessage, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDirDialog, GetPath, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDirDialog, SetMessage, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDirDialog, SetPath, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDirDialog, ShowModal, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDirDialog, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxFindReplaceData_entry;
void php_wxFindReplaceData_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxFindReplaceData_php: public wxFindReplaceData{
	public:
	
	wxFindReplaceData_php(wxUint32 flags=0):wxFindReplaceData(flags){}
		
	
	
	void ***tsrm_ls;
	zval* phpObj;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxFindReplaceData 
{
    zend_object zo;
    wxFindReplaceData_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxFindReplaceData_free(void *object TSRMLS_DC);
zend_object_value php_wxFindReplaceData_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxFindReplaceData_functions[] = {
	PHP_ME(php_wxFindReplaceData, GetFindString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFindReplaceData, GetReplaceString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFindReplaceData, GetFlags, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFindReplaceData, SetFindString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFindReplaceData, SetFlags, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFindReplaceData, SetReplaceString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFindReplaceData, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxFindReplaceDialog_entry;
void php_wxFindReplaceDialog_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxFindReplaceDialog_php: public wxFindReplaceDialog{
	public:
	
	wxFindReplaceDialog_php(wxWindow* parent, wxFindReplaceData* data, const wxString& title, int style=0):wxFindReplaceDialog(parent, data, title, style){}
	wxFindReplaceDialog_php():wxFindReplaceDialog(){}
		
	
	
	void ***tsrm_ls;
	zval* phpObj;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxFindReplaceDialog 
{
    zend_object zo;
    wxFindReplaceDialog_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxFindReplaceDialog_free(void *object TSRMLS_DC);
zend_object_value php_wxFindReplaceDialog_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxFindReplaceDialog_functions[] = {
	PHP_ME(php_wxFindReplaceDialog, Create, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFindReplaceDialog, GetData, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFindReplaceDialog, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxFileDialog_entry;
void php_wxFileDialog_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxFileDialog_php: public wxFileDialog{
	public:
	
	wxFileDialog_php(wxWindow* parent, const wxString& message=wxFileSelectorPromptStr, const wxString& defaultDir=wxEmptyString, const wxString& defaultFile=wxEmptyString, const wxString& wildcard=wxFileSelectorDefaultWildcardStr, long style=wxFD_DEFAULT_STYLE, const wxPoint& pos=wxDefaultPosition, const wxSize& size=wxDefaultSize, const wxString& name=wxFileDialogNameStr):wxFileDialog(parent, message, defaultDir, defaultFile, wildcard, style, pos, size, name){}
		
	
	
	void ***tsrm_ls;
	zval* phpObj;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxFileDialog 
{
    zend_object zo;
    wxFileDialog_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxFileDialog_free(void *object TSRMLS_DC);
zend_object_value php_wxFileDialog_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxFileDialog_functions[] = {
	PHP_ME(php_wxFileDialog, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_ME(php_wxFileDialog, ShowModal, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFileDialog, SetWildcard, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFileDialog, SetPath, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFileDialog, SetMessage, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFileDialog, SetFilterIndex, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFileDialog, SetFilename, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFileDialog, SetDirectory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFileDialog, GetWildcard, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFileDialog, GetPaths, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFileDialog, GetMessage, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFileDialog, GetPath, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFileDialog, GetFilterIndex, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFileDialog, GetFilenames, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFileDialog, GetFilename, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFileDialog, GetExtraControl, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFileDialog, GetDirectory, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxFontData_entry;
void php_wxFontData_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxFontData_php: public wxFontData{
	public:
	
	wxFontData_php():wxFontData(){}
		
	
	
	void ***tsrm_ls;
	zval* phpObj;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxFontData 
{
    zend_object zo;
    wxFontData_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxFontData_free(void *object TSRMLS_DC);
zend_object_value php_wxFontData_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxFontData_functions[] = {
	PHP_ME(php_wxFontData, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_ME(php_wxFontData, SetShowHelp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFontData, SetRange, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFontData, SetInitialFont, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFontData, SetColour, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFontData, SetChosenFont, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFontData, SetAllowSymbols, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFontData, GetShowHelp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFontData, GetInitialFont, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFontData, GetEnableEffects, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFontData, GetColour, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFontData, GetChosenFont, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFontData, GetAllowSymbols, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFontData, EnableEffects, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxFontDialog_entry;
void php_wxFontDialog_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxFontDialog_php: public wxFontDialog{
	public:
	
	wxFontDialog_php():wxFontDialog(){}
	wxFontDialog_php(wxWindow* parent):wxFontDialog(parent){}
	wxFontDialog_php(wxWindow* parent, const wxFontData& data):wxFontDialog(parent, data){}
		
	
	
	void ***tsrm_ls;
	zval* phpObj;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxFontDialog 
{
    zend_object zo;
    wxFontDialog_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxFontDialog_free(void *object TSRMLS_DC);
zend_object_value php_wxFontDialog_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxFontDialog_functions[] = {
	PHP_ME(php_wxFontDialog, Create, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFontDialog, GetFontData, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFontDialog, ShowModal, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFontDialog, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxMessageDialog_entry;
void php_wxMessageDialog_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxMessageDialog_php: public wxMessageDialog{
	public:
	
	wxMessageDialog_php(wxWindow* parent, const wxString& message, const wxString& caption=wxMessageBoxCaptionStr, long style=wxOK|wxCENTRE, const wxPoint& pos=wxDefaultPosition):wxMessageDialog(parent, message, caption, style, pos){}
		
	
	
	void ***tsrm_ls;
	zval* phpObj;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxMessageDialog 
{
    zend_object zo;
    wxMessageDialog_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxMessageDialog_free(void *object TSRMLS_DC);
zend_object_value php_wxMessageDialog_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxMessageDialog_functions[] = {
	PHP_ME(php_wxMessageDialog, GetCancelLabel, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMessageDialog, GetCaption, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMessageDialog, GetEffectiveIcon, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMessageDialog, GetExtendedMessage, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMessageDialog, GetHelpLabel, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMessageDialog, GetMessage, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMessageDialog, GetMessageDialogStyle, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMessageDialog, GetNoLabel, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMessageDialog, GetOKLabel, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMessageDialog, GetYesLabel, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMessageDialog, HasCustomLabels, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMessageDialog, SetExtendedMessage, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMessageDialog, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_ME(php_wxMessageDialog, ShowModal, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMessageDialog, SetYesNoLabels, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMessageDialog, SetYesNoCancelLabels, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMessageDialog, SetOKLabel, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMessageDialog, SetOKCancelLabels, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMessageDialog, SetMessage, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMessageDialog, SetHelpLabel, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxGenericProgressDialog_entry;
void php_wxGenericProgressDialog_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxGenericProgressDialog_php: public wxGenericProgressDialog{
	public:
	
	wxGenericProgressDialog_php(const wxString& title, const wxString& message, int maximum=100, wxWindow* parent=NULL, int style=wxPD_AUTO_HIDE|wxPD_APP_MODAL):wxGenericProgressDialog(title, message, maximum, parent, style){}
		
	
	
	void ***tsrm_ls;
	zval* phpObj;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxGenericProgressDialog 
{
    zend_object zo;
    wxGenericProgressDialog_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxGenericProgressDialog_free(void *object TSRMLS_DC);
zend_object_value php_wxGenericProgressDialog_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGenericProgressDialog_functions[] = {
	PHP_ME(php_wxGenericProgressDialog, GetMessage, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGenericProgressDialog, GetRange, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGenericProgressDialog, GetValue, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGenericProgressDialog, Resume, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGenericProgressDialog, Pulse, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGenericProgressDialog, SetRange, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGenericProgressDialog, Update, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGenericProgressDialog, WasCancelled, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGenericProgressDialog, WasSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGenericProgressDialog, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxRearrangeDialog_entry;
void php_wxRearrangeDialog_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxRearrangeDialog_php: public wxRearrangeDialog{
	public:
	
	wxRearrangeDialog_php():wxRearrangeDialog(){}
		
	
	
	void ***tsrm_ls;
	zval* phpObj;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxRearrangeDialog 
{
    zend_object zo;
    wxRearrangeDialog_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxRearrangeDialog_free(void *object TSRMLS_DC);
zend_object_value php_wxRearrangeDialog_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxRearrangeDialog_functions[] = {
	PHP_ME(php_wxRearrangeDialog, AddExtraControls, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxRearrangeDialog, GetList, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxRearrangeDialog, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxSymbolPickerDialog_entry;
void php_wxSymbolPickerDialog_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxSymbolPickerDialog_php: public wxSymbolPickerDialog{
	public:
	
	wxSymbolPickerDialog_php():wxSymbolPickerDialog(){}
	wxSymbolPickerDialog_php(const wxString& symbol, const wxString& initialFont, const wxString& normalTextFont, wxWindow* parent, wxWindowID id=wxID_ANY, const wxString& title=_("Symbols"), const wxPoint& pos=wxDefaultPosition, const wxSize& size=wxDefaultSize, long style=wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxCLOSE_BOX):wxSymbolPickerDialog(symbol, initialFont, normalTextFont, parent, id, title, pos, size, style){}
		
	
	
	void ***tsrm_ls;
	zval* phpObj;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxSymbolPickerDialog 
{
    zend_object zo;
    wxSymbolPickerDialog_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxSymbolPickerDialog_free(void *object TSRMLS_DC);
zend_object_value php_wxSymbolPickerDialog_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxSymbolPickerDialog_functions[] = {
	PHP_ME(php_wxSymbolPickerDialog, Create, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSymbolPickerDialog, GetFontName, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSymbolPickerDialog, GetFromUnicode, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSymbolPickerDialog, GetNormalTextFontName, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSymbolPickerDialog, GetSymbol, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSymbolPickerDialog, GetSymbolChar, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSymbolPickerDialog, HasSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSymbolPickerDialog, SetFontName, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSymbolPickerDialog, SetFromUnicode, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSymbolPickerDialog, SetNormalTextFontName, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSymbolPickerDialog, SetSymbol, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSymbolPickerDialog, SetUnicodeMode, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSymbolPickerDialog, UseNormalFont, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSymbolPickerDialog, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxPasswordEntryDialog_entry;
void php_wxPasswordEntryDialog_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxPasswordEntryDialog_php: public wxPasswordEntryDialog{
	public:
	
	wxPasswordEntryDialog_php(wxWindow* parent, const wxString& message, const wxString& caption=wxGetPasswordFromUserPromptStr, const wxString& defaultValue=wxEmptyString, long style=wxTextEntryDialogStyle, const wxPoint& pos=wxDefaultPosition):wxPasswordEntryDialog(parent, message, caption, defaultValue, style, pos){}
		
	
	
	void ***tsrm_ls;
	zval* phpObj;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxPasswordEntryDialog 
{
    zend_object zo;
    wxPasswordEntryDialog_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxPasswordEntryDialog_free(void *object TSRMLS_DC);
zend_object_value php_wxPasswordEntryDialog_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxPasswordEntryDialog_functions[] = {
	PHP_ME(php_wxPasswordEntryDialog, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxTextEntryDialog_entry;
void php_wxTextEntryDialog_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxTextEntryDialog_php: public wxTextEntryDialog{
	public:
	
	wxTextEntryDialog_php(wxWindow* parent, const wxString& message, const wxString& caption=wxGetTextFromUserPromptStr, const wxString& value=wxEmptyString, long style=wxTextEntryDialogStyle, const wxPoint& pos=wxDefaultPosition):wxTextEntryDialog(parent, message, caption, value, style, pos){}
		
	
	
	void ***tsrm_ls;
	zval* phpObj;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxTextEntryDialog 
{
    zend_object zo;
    wxTextEntryDialog_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxTextEntryDialog_free(void *object TSRMLS_DC);
zend_object_value php_wxTextEntryDialog_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxTextEntryDialog_functions[] = {
	PHP_ME(php_wxTextEntryDialog, GetValue, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxTextEntryDialog, SetValue, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxTextEntryDialog, ShowModal, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxTextEntryDialog, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxWizard_entry;
void php_wxWizard_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxWizard_php: public wxWizard{
	public:
	
	wxWizard_php():wxWizard(){}
	wxWizard_php(wxWindow* parent, int id=wxID_ANY, const wxString& title=wxEmptyString, const wxBitmap& bitmap=wxNullBitmap, const wxPoint& pos=wxDefaultPosition, long style=wxDEFAULT_DIALOG_STYLE):wxWizard(parent, id, title, bitmap, pos, style){}
		
	
	
	void ***tsrm_ls;
	zval* phpObj;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxWizard 
{
    zend_object zo;
    wxWizard_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxWizard_free(void *object TSRMLS_DC);
zend_object_value php_wxWizard_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxWizard_functions[] = {
	PHP_ME(php_wxWizard, Create, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxWizard, FitToPage, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxWizard, GetBitmap, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxWizard, GetBitmapBackgroundColour, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxWizard, GetBitmapPlacement, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxWizard, GetCurrentPage, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxWizard, GetMinimumBitmapWidth, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxWizard, GetPageSize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxWizard, HasNextPage, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxWizard, HasPrevPage, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxWizard, RunWizard, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxWizard, SetBitmap, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxWizard, SetBitmapBackgroundColour, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxWizard, SetBitmapPlacement, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxWizard, SetBorder, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxWizard, SetMinimumBitmapWidth, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxWizard, SetPageSize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxWizard, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_ME(php_wxWizard, GetPageAreaSizer, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

#endif //WXPHP_CMNDLG_H_GUARD
