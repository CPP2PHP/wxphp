/*
 * @author Mário Soares
 * @contributors Jefferson González
 * 
 * @license 
 * This file is part of wxPHP check the LICENSE file for information.
 * 
 * @note
 * This file was auto-generated by the wxPHP source maker
*/

#include "php_wxwidgets.h"
#include "appmanagement.h"
#include "cfg.h"
#include "bookctrl.h"
#include "dnd.h"
#include "cmndlg.h"
#include "containers.h"
#include "ctrl.h"
#include "data.h"
#include "dc.h"
#include "docview.h"
#include "events.h"
#include "file.h"
#include "gdi.h"
#include "grid.h"
#include "html.h"
#include "help.h"
#include "logging.h"
#include "managedwnd.h"
#include "menus.h"
#include "misc.h"
#include "miscwnd.h"
#include "media.h"
#include "pickers.h"
#include "printing.h"
#include "ribbon.h"
#include "richtext.h"
#include "rtti.h"
#include "stc.h"
#include "streams.h"
#include "threading.h"
#include "validator.h"
#include "vfs.h"
#include "aui.h"
#include "winlayout.h"
#include "xml.h"
#include "xrc.h"
#include "dvc.h"
#include "others.h"


void php_wxBannerWindow_destruction_handler(zend_rsrc_list_entry *rsrc TSRMLS_DC) 
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Calling php_wxBannerWindow_destruction_handler on %s at line %i\n", zend_get_executed_filename(TSRMLS_C), zend_get_executed_lineno(TSRMLS_C));
	php_printf("===========================================\n");
	#endif
	
	
	wxBannerWindow_php* object = (wxBannerWindow_php*)rsrc->ptr;
	
	if(rsrc->ptr != NULL)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Pointer not null\n");
		php_printf("Pointer address %x\n", rsrc->ptr);
		#endif
		
		if(object->references.IsUserInitialized())
		{	
	
			#ifdef USE_WXPHP_DEBUG
			php_printf("Deleting object by calling destroy\n");
			#endif
			
			object->Destroy();
			
			rsrc->ptr = NULL;
		}
		
		#ifdef USE_WXPHP_DEBUG
		php_printf("Deletion of wxBannerWindow done\n");
		php_printf("===========================================\n\n");
		#endif
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Not user space initialized\n");
		#endif
	}
}
PHP_METHOD(php_wxBannerWindow, __construct)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxBannerWindow::__construct\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	
	//Parameters for overload 0
	bool overload0_called = false;
	//Parameters for overload 1
	zval* parent1 = 0;
	void* object_pointer1_0 = 0;
	long dir1;
	bool overload1_called = false;
	//Parameters for overload 2
	zval* parent2 = 0;
	void* object_pointer2_0 = 0;
	long winid2;
	long dir2;
	zval* pos2 = 0;
	void* object_pointer2_3 = 0;
	zval* size2 = 0;
	void* object_pointer2_4 = 0;
	long style2;
	char* name2;
	long name_len2;
	bool overload2_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

	//Overload 1
	overload1:
	if(!already_called && arguments_received >= 1  && arguments_received <= 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'z|l' (&parent1, &dir1)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "z|l", &parent1, &dir1 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(parent1) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(parent1), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer1_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer1_0 || (rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow))
					{
						goto overload2;
					}
				}
				else if(Z_TYPE_P(parent1) == IS_LONG)
				{
					object_pointer1_0 = Z_LVAL_P(parent1);
				}
				else if(Z_TYPE_P(parent1) != IS_NULL)
				{
						goto overload2;
				}
			}

			overload1_called = true;
			already_called = true;
		}
	}

	//Overload 2
	overload2:
	if(!already_called && arguments_received >= 2  && arguments_received <= 7)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'zl|lOOls' (&parent2, &winid2, &dir2, &pos2, php_wxPoint_entry, &size2, php_wxSize_entry, &style2, &name2, &name_len2)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "zl|lOOls", &parent2, &winid2, &dir2, &pos2, php_wxPoint_entry, &size2, php_wxSize_entry, &style2, &name2, &name_len2 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(parent2) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(parent2), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer2_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer2_0 || (rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(parent2) == IS_LONG)
				{
					object_pointer2_0 = Z_LVAL_P(parent2);
				}
				else if(Z_TYPE_P(parent2) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 4){
				if(Z_TYPE_P(pos2) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(pos2), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer2_3 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer2_3 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(pos2) == IS_LONG)
				{
					object_pointer2_3 = Z_LVAL_P(pos2);
				}
				else if(Z_TYPE_P(pos2) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 5){
				if(Z_TYPE_P(size2) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(size2), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer2_4 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer2_4 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(size2) == IS_LONG)
				{
					object_pointer2_4 = Z_LVAL_P(size2);
				}
				else if(Z_TYPE_P(size2) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload2_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct()\n");
				#endif
				_this = new wxBannerWindow_php();

				((wxBannerWindow_php*) _this)->references.Initialize();
				break;
			}
		}
	}

	
	if(overload1_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer1_0)\n");
				#endif
				_this = new wxBannerWindow_php((wxWindow*) object_pointer1_0);

				((wxBannerWindow_php*) _this)->references.Initialize();
				((wxBannerWindow_php*) _this)->references.AddReference(parent1);
				break;
			}
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer1_0, (wxDirection) dir1)\n");
				#endif
				_this = new wxBannerWindow_php((wxWindow*) object_pointer1_0, (wxDirection) dir1);

				((wxBannerWindow_php*) _this)->references.Initialize();
				((wxBannerWindow_php*) _this)->references.AddReference(parent1);
				break;
			}
		}
	}

	
	if(overload2_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer2_0, (wxWindowID) winid2)\n");
				#endif
				_this = new wxBannerWindow_php((wxWindow*) object_pointer2_0, (wxWindowID) winid2);

				((wxBannerWindow_php*) _this)->references.Initialize();
				((wxBannerWindow_php*) _this)->references.AddReference(parent2);
				break;
			}
			case 3:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer2_0, (wxWindowID) winid2, (wxDirection) dir2)\n");
				#endif
				_this = new wxBannerWindow_php((wxWindow*) object_pointer2_0, (wxWindowID) winid2, (wxDirection) dir2);

				((wxBannerWindow_php*) _this)->references.Initialize();
				((wxBannerWindow_php*) _this)->references.AddReference(parent2);
				break;
			}
			case 4:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer2_0, (wxWindowID) winid2, (wxDirection) dir2, *(wxPoint*) object_pointer2_3)\n");
				#endif
				_this = new wxBannerWindow_php((wxWindow*) object_pointer2_0, (wxWindowID) winid2, (wxDirection) dir2, *(wxPoint*) object_pointer2_3);

				((wxBannerWindow_php*) _this)->references.Initialize();
				((wxBannerWindow_php*) _this)->references.AddReference(parent2);
				((wxBannerWindow_php*) _this)->references.AddReference(pos2);
				break;
			}
			case 5:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer2_0, (wxWindowID) winid2, (wxDirection) dir2, *(wxPoint*) object_pointer2_3, *(wxSize*) object_pointer2_4)\n");
				#endif
				_this = new wxBannerWindow_php((wxWindow*) object_pointer2_0, (wxWindowID) winid2, (wxDirection) dir2, *(wxPoint*) object_pointer2_3, *(wxSize*) object_pointer2_4);

				((wxBannerWindow_php*) _this)->references.Initialize();
				((wxBannerWindow_php*) _this)->references.AddReference(parent2);
				((wxBannerWindow_php*) _this)->references.AddReference(pos2);
				((wxBannerWindow_php*) _this)->references.AddReference(size2);
				break;
			}
			case 6:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer2_0, (wxWindowID) winid2, (wxDirection) dir2, *(wxPoint*) object_pointer2_3, *(wxSize*) object_pointer2_4, (long) style2)\n");
				#endif
				_this = new wxBannerWindow_php((wxWindow*) object_pointer2_0, (wxWindowID) winid2, (wxDirection) dir2, *(wxPoint*) object_pointer2_3, *(wxSize*) object_pointer2_4, (long) style2);

				((wxBannerWindow_php*) _this)->references.Initialize();
				((wxBannerWindow_php*) _this)->references.AddReference(parent2);
				((wxBannerWindow_php*) _this)->references.AddReference(pos2);
				((wxBannerWindow_php*) _this)->references.AddReference(size2);
				break;
			}
			case 7:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer2_0, (wxWindowID) winid2, (wxDirection) dir2, *(wxPoint*) object_pointer2_3, *(wxSize*) object_pointer2_4, (long) style2, wxString(name2, wxConvUTF8))\n");
				#endif
				_this = new wxBannerWindow_php((wxWindow*) object_pointer2_0, (wxWindowID) winid2, (wxDirection) dir2, *(wxPoint*) object_pointer2_3, *(wxSize*) object_pointer2_4, (long) style2, wxString(name2, wxConvUTF8));

				((wxBannerWindow_php*) _this)->references.Initialize();
				((wxBannerWindow_php*) _this)->references.AddReference(parent2);
				((wxBannerWindow_php*) _this)->references.AddReference(pos2);
				((wxBannerWindow_php*) _this)->references.AddReference(size2);
				break;
			}
		}
	}

		
	if(already_called)
	{
		long id_to_find = zend_list_insert(_this, le_wxBannerWindow);
		
		add_property_resource(getThis(), _wxResource, id_to_find);
		
		MAKE_STD_ZVAL(((wxBannerWindow_php*) _this)->evnArray);
		
		array_init(((wxBannerWindow_php*) _this)->evnArray);
		
		((wxBannerWindow_php*) _this)->phpObj = getThis();
		
		((wxBannerWindow_php*) _this)->InitProperties();
		
		#ifdef ZTS 
		((wxBannerWindow_php*) _this)->TSRMLS_C = TSRMLS_C;
		#endif
	}
	else
	{
		zend_error(E_ERROR, "Abstract type: failed to call a proper constructor");
	}
	
	#ifdef USE_WXPHP_DEBUG
		php_printf("===========================================\n\n");
	#endif
}
PHP_METHOD(php_wxBannerWindow, SetText)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxBannerWindow::SetText\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxBannerWindow::SetText\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	char* title0;
	long title_len0;
	char* message0;
	long message_len0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'ss' (&title0, &title_len0, &message0, &message_len0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "ss", &title0, &title_len0, &message0, &message_len0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxBannerWindow::SetText(wxString(title0, wxConvUTF8), wxString(message0, wxConvUTF8))\n\n");
				#endif
				((wxBannerWindow_php*)_this)->SetText(wxString(title0, wxConvUTF8), wxString(message0, wxConvUTF8));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxBannerWindow, SetGradient)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxBannerWindow::SetGradient\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxBannerWindow::SetGradient\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* start0 = 0;
	void* object_pointer0_0 = 0;
	zval* end0 = 0;
	void* object_pointer0_1 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'OO' (&start0, php_wxColour_entry, &end0, php_wxColour_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "OO", &start0, php_wxColour_entry, &end0, php_wxColour_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(start0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(start0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(start0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(start0);
				}
				else if(Z_TYPE_P(start0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 2){
				if(Z_TYPE_P(end0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(end0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_1 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_1 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(end0) == IS_LONG)
				{
					object_pointer0_1 = Z_LVAL_P(end0);
				}
				else if(Z_TYPE_P(end0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxBannerWindow::SetGradient(*(wxColour*) object_pointer0_0, *(wxColour*) object_pointer0_1)\n\n");
				#endif
				((wxBannerWindow_php*)_this)->SetGradient(*(wxColour*) object_pointer0_0, *(wxColour*) object_pointer0_1);

				references->AddReference(start0);
				references->AddReference(end0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxBannerWindow, SetBitmap)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxBannerWindow::SetBitmap\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxBannerWindow::SetBitmap\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* bmp0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&bmp0, php_wxBitmap_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &bmp0, php_wxBitmap_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(bmp0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(bmp0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(bmp0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(bmp0);
				}
				else if(Z_TYPE_P(bmp0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxBannerWindow::SetBitmap(*(wxBitmap*) object_pointer0_0)\n\n");
				#endif
				((wxBannerWindow_php*)_this)->SetBitmap(*(wxBitmap*) object_pointer0_0);

				references->AddReference(bmp0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxBannerWindow, Create)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxBannerWindow::Create\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxBannerWindow::Create\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* parent0 = 0;
	void* object_pointer0_0 = 0;
	long winid0;
	long dir0;
	zval* pos0 = 0;
	void* object_pointer0_3 = 0;
	zval* size0 = 0;
	void* object_pointer0_4 = 0;
	long style0;
	char* name0;
	long name_len0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 2  && arguments_received <= 7)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'zl|lOOls' (&parent0, &winid0, &dir0, &pos0, php_wxPoint_entry, &size0, php_wxSize_entry, &style0, &name0, &name_len0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "zl|lOOls", &parent0, &winid0, &dir0, &pos0, php_wxPoint_entry, &size0, php_wxSize_entry, &style0, &name0, &name_len0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(parent0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(parent0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 || (rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(parent0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(parent0);
				}
				else if(Z_TYPE_P(parent0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 4){
				if(Z_TYPE_P(pos0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(pos0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_3 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_3 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(pos0) == IS_LONG)
				{
					object_pointer0_3 = Z_LVAL_P(pos0);
				}
				else if(Z_TYPE_P(pos0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 5){
				if(Z_TYPE_P(size0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(size0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_4 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_4 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(size0) == IS_LONG)
				{
					object_pointer0_4 = Z_LVAL_P(size0);
				}
				else if(Z_TYPE_P(size0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxBannerWindow::Create((wxWindow*) object_pointer0_0, (wxWindowID) winid0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxBannerWindow_php*)_this)->Create((wxWindow*) object_pointer0_0, (wxWindowID) winid0));

				references->AddReference(parent0);

				return;
				break;
			}
			case 3:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxBannerWindow::Create((wxWindow*) object_pointer0_0, (wxWindowID) winid0, (wxDirection) dir0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxBannerWindow_php*)_this)->Create((wxWindow*) object_pointer0_0, (wxWindowID) winid0, (wxDirection) dir0));

				references->AddReference(parent0);

				return;
				break;
			}
			case 4:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxBannerWindow::Create((wxWindow*) object_pointer0_0, (wxWindowID) winid0, (wxDirection) dir0, *(wxPoint*) object_pointer0_3))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxBannerWindow_php*)_this)->Create((wxWindow*) object_pointer0_0, (wxWindowID) winid0, (wxDirection) dir0, *(wxPoint*) object_pointer0_3));

				references->AddReference(parent0);
				references->AddReference(pos0);

				return;
				break;
			}
			case 5:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxBannerWindow::Create((wxWindow*) object_pointer0_0, (wxWindowID) winid0, (wxDirection) dir0, *(wxPoint*) object_pointer0_3, *(wxSize*) object_pointer0_4))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxBannerWindow_php*)_this)->Create((wxWindow*) object_pointer0_0, (wxWindowID) winid0, (wxDirection) dir0, *(wxPoint*) object_pointer0_3, *(wxSize*) object_pointer0_4));

				references->AddReference(parent0);
				references->AddReference(pos0);
				references->AddReference(size0);

				return;
				break;
			}
			case 6:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxBannerWindow::Create((wxWindow*) object_pointer0_0, (wxWindowID) winid0, (wxDirection) dir0, *(wxPoint*) object_pointer0_3, *(wxSize*) object_pointer0_4, (long) style0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxBannerWindow_php*)_this)->Create((wxWindow*) object_pointer0_0, (wxWindowID) winid0, (wxDirection) dir0, *(wxPoint*) object_pointer0_3, *(wxSize*) object_pointer0_4, (long) style0));

				references->AddReference(parent0);
				references->AddReference(pos0);
				references->AddReference(size0);

				return;
				break;
			}
			case 7:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxBannerWindow::Create((wxWindow*) object_pointer0_0, (wxWindowID) winid0, (wxDirection) dir0, *(wxPoint*) object_pointer0_3, *(wxSize*) object_pointer0_4, (long) style0, wxString(name0, wxConvUTF8)))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxBannerWindow_php*)_this)->Create((wxWindow*) object_pointer0_0, (wxWindowID) winid0, (wxDirection) dir0, *(wxPoint*) object_pointer0_3, *(wxSize*) object_pointer0_4, (long) style0, wxString(name0, wxConvUTF8)));

				references->AddReference(parent0);
				references->AddReference(pos0);
				references->AddReference(size0);

				return;
				break;
			}
		}
	}

		
}
void php_wxInfoBar_destruction_handler(zend_rsrc_list_entry *rsrc TSRMLS_DC) 
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Obviate php_wxInfoBar_destruction_handler call on %s at line %i\n", zend_get_executed_filename(TSRMLS_C), zend_get_executed_lineno(TSRMLS_C));
	php_printf("===========================================\n\n");
	#endif
}
PHP_METHOD(php_wxInfoBar, __construct)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxInfoBar::__construct\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	
	//Parameters for overload 0
	bool overload0_called = false;
	//Parameters for overload 1
	zval* parent1 = 0;
	void* object_pointer1_0 = 0;
	long winid1;
	bool overload1_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

	//Overload 1
	overload1:
	if(!already_called && arguments_received >= 1  && arguments_received <= 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'z|l' (&parent1, &winid1)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "z|l", &parent1, &winid1 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(parent1) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(parent1), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer1_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer1_0 || (rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(parent1) == IS_LONG)
				{
					object_pointer1_0 = Z_LVAL_P(parent1);
				}
				else if(Z_TYPE_P(parent1) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload1_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct()\n");
				#endif
				_this = new wxInfoBar_php();

				((wxInfoBar_php*) _this)->references.Initialize();
				break;
			}
		}
	}

	
	if(overload1_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer1_0)\n");
				#endif
				_this = new wxInfoBar_php((wxWindow*) object_pointer1_0);

				((wxInfoBar_php*) _this)->references.Initialize();
				((wxInfoBar_php*) _this)->references.AddReference(parent1);
				break;
			}
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer1_0, (wxWindowID) winid1)\n");
				#endif
				_this = new wxInfoBar_php((wxWindow*) object_pointer1_0, (wxWindowID) winid1);

				((wxInfoBar_php*) _this)->references.Initialize();
				((wxInfoBar_php*) _this)->references.AddReference(parent1);
				break;
			}
		}
	}

		
	if(already_called)
	{
		long id_to_find = zend_list_insert(_this, le_wxInfoBar);
		
		add_property_resource(getThis(), _wxResource, id_to_find);
		
		MAKE_STD_ZVAL(((wxInfoBar_php*) _this)->evnArray);
		
		array_init(((wxInfoBar_php*) _this)->evnArray);
		
		((wxInfoBar_php*) _this)->phpObj = getThis();
		
		((wxInfoBar_php*) _this)->InitProperties();
		
		#ifdef ZTS 
		((wxInfoBar_php*) _this)->TSRMLS_C = TSRMLS_C;
		#endif
	}
	else
	{
		zend_error(E_ERROR, "Abstract type: failed to call a proper constructor");
	}
	
	#ifdef USE_WXPHP_DEBUG
		php_printf("===========================================\n\n");
	#endif
}
PHP_METHOD(php_wxInfoBar, ShowMessage)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxInfoBar::ShowMessage\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxInfoBar::ShowMessage\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	char* msg0;
	long msg_len0;
	long flags0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 1  && arguments_received <= 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 's|l' (&msg0, &msg_len0, &flags0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "s|l", &msg0, &msg_len0, &flags0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxInfoBar::ShowMessage(wxString(msg0, wxConvUTF8))\n\n");
				#endif
				((wxInfoBar_php*)_this)->ShowMessage(wxString(msg0, wxConvUTF8));


				return;
				break;
			}
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxInfoBar::ShowMessage(wxString(msg0, wxConvUTF8), (int) flags0)\n\n");
				#endif
				((wxInfoBar_php*)_this)->ShowMessage(wxString(msg0, wxConvUTF8), (int) flags0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxInfoBar, SetFont)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxInfoBar::SetFont\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxInfoBar::SetFont\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* font0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&font0, php_wxFont_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &font0, php_wxFont_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(font0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(font0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(font0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(font0);
				}
				else if(Z_TYPE_P(font0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxInfoBar::SetFont(*(wxFont*) object_pointer0_0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxInfoBar_php*)_this)->SetFont(*(wxFont*) object_pointer0_0));

				references->AddReference(font0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxInfoBar, SetEffectDuration)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxInfoBar::SetEffectDuration\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxInfoBar::SetEffectDuration\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long duration0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&duration0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &duration0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxInfoBar::SetEffectDuration((int) duration0)\n\n");
				#endif
				((wxInfoBar_php*)_this)->SetEffectDuration((int) duration0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxInfoBar, RemoveButton)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxInfoBar::RemoveButton\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxInfoBar::RemoveButton\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long btnid0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&btnid0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &btnid0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxInfoBar::RemoveButton((wxWindowID) btnid0)\n\n");
				#endif
				((wxInfoBar_php*)_this)->RemoveButton((wxWindowID) btnid0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxInfoBar, GetShowEffect)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxInfoBar::GetShowEffect\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxInfoBar::GetShowEffect\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxInfoBar::GetShowEffect())\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxInfoBar_php*)_this)->GetShowEffect());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxInfoBar, GetHideEffect)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxInfoBar::GetHideEffect\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxInfoBar::GetHideEffect\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxInfoBar::GetHideEffect())\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxInfoBar_php*)_this)->GetHideEffect());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxInfoBar, GetEffectDuration)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxInfoBar::GetEffectDuration\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxInfoBar::GetEffectDuration\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxInfoBar::GetEffectDuration())\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxInfoBar_php*)_this)->GetEffectDuration());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxInfoBar, Dismiss)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxInfoBar::Dismiss\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxInfoBar::Dismiss\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxInfoBar::Dismiss()\n\n");
				#endif
				((wxInfoBar_php*)_this)->Dismiss();


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxInfoBar, Create)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxInfoBar::Create\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxInfoBar::Create\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* parent0 = 0;
	void* object_pointer0_0 = 0;
	long winid0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 1  && arguments_received <= 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'z|l' (&parent0, &winid0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "z|l", &parent0, &winid0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(parent0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(parent0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 || (rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(parent0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(parent0);
				}
				else if(Z_TYPE_P(parent0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxInfoBar::Create((wxWindow*) object_pointer0_0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxInfoBar_php*)_this)->Create((wxWindow*) object_pointer0_0));

				references->AddReference(parent0);

				return;
				break;
			}
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxInfoBar::Create((wxWindow*) object_pointer0_0, (wxWindowID) winid0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxInfoBar_php*)_this)->Create((wxWindow*) object_pointer0_0, (wxWindowID) winid0));

				references->AddReference(parent0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxInfoBar, AddButton)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxInfoBar::AddButton\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxInfoBar::AddButton\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long btnid0;
	char* label0;
	long label_len0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 1  && arguments_received <= 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l|s' (&btnid0, &label0, &label_len0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l|s", &btnid0, &label0, &label_len0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxInfoBar::AddButton((wxWindowID) btnid0)\n\n");
				#endif
				((wxInfoBar_php*)_this)->AddButton((wxWindowID) btnid0);


				return;
				break;
			}
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxInfoBar::AddButton((wxWindowID) btnid0, wxString(label0, wxConvUTF8))\n\n");
				#endif
				((wxInfoBar_php*)_this)->AddButton((wxWindowID) btnid0, wxString(label0, wxConvUTF8));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxInfoBar, SetShowHideEffects)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxInfoBar::SetShowHideEffects\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxInfoBar::SetShowHideEffects\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long showEffect0;
	long hideEffect0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'll' (&showEffect0, &hideEffect0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "ll", &showEffect0, &hideEffect0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxInfoBar::SetShowHideEffects((wxShowEffect) showEffect0, (wxShowEffect) hideEffect0)\n\n");
				#endif
				((wxInfoBar_php*)_this)->SetShowHideEffects((wxShowEffect) showEffect0, (wxShowEffect) hideEffect0);


				return;
				break;
			}
		}
	}

		
}
void php_wxRichToolTip_destruction_handler(zend_rsrc_list_entry *rsrc TSRMLS_DC) 
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Calling php_wxRichToolTip_destruction_handler on %s at line %i\n", zend_get_executed_filename(TSRMLS_C), zend_get_executed_lineno(TSRMLS_C));
	php_printf("===========================================\n");
	#endif
	
	
	wxRichToolTip_php* object = (wxRichToolTip_php*)rsrc->ptr;
	
	if(rsrc->ptr != NULL)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Pointer not null\n");
		php_printf("Pointer address %x\n", rsrc->ptr);
		#endif
		
		if(object->references.IsUserInitialized())
		{	
			#ifdef USE_WXPHP_DEBUG
			php_printf("Deleting pointer with delete\n");
			#endif
			
			delete object;
			
			rsrc->ptr = NULL;
		}
		
		#ifdef USE_WXPHP_DEBUG
		php_printf("Deletion of wxRichToolTip done\n");
		php_printf("===========================================\n\n");
		#endif
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Not user space initialized\n");
		#endif
	}
}
PHP_METHOD(php_wxRichToolTip, SetBackgroundColour)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxRichToolTip::SetBackgroundColour\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxRichToolTip::SetBackgroundColour\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxRichToolTip)
				references = &((wxRichToolTip_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* col0 = 0;
	void* object_pointer0_0 = 0;
	zval* colEnd0 = 0;
	void* object_pointer0_1 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 1  && arguments_received <= 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O|O' (&col0, php_wxColour_entry, &colEnd0, php_wxColour_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O|O", &col0, php_wxColour_entry, &colEnd0, php_wxColour_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(col0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(col0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(col0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(col0);
				}
				else if(Z_TYPE_P(col0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 2){
				if(Z_TYPE_P(colEnd0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(colEnd0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_1 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_1 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(colEnd0) == IS_LONG)
				{
					object_pointer0_1 = Z_LVAL_P(colEnd0);
				}
				else if(Z_TYPE_P(colEnd0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxRichToolTip::SetBackgroundColour(*(wxColour*) object_pointer0_0)\n\n");
				#endif
				((wxRichToolTip_php*)_this)->SetBackgroundColour(*(wxColour*) object_pointer0_0);

				references->AddReference(col0);

				return;
				break;
			}
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxRichToolTip::SetBackgroundColour(*(wxColour*) object_pointer0_0, *(wxColour*) object_pointer0_1)\n\n");
				#endif
				((wxRichToolTip_php*)_this)->SetBackgroundColour(*(wxColour*) object_pointer0_0, *(wxColour*) object_pointer0_1);

				references->AddReference(col0);
				references->AddReference(colEnd0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxRichToolTip, SetIcon)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxRichToolTip::SetIcon\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxRichToolTip::SetIcon\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxRichToolTip)
				references = &((wxRichToolTip_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long icon0;
	bool overload0_called = false;
	//Parameters for overload 1
	zval* icon1 = 0;
	void* object_pointer1_0 = 0;
	bool overload1_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 0  && arguments_received <= 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '|l' (&icon0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "|l", &icon0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

	//Overload 1
	overload1:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&icon1, php_wxIcon_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &icon1, php_wxIcon_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(icon1) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(icon1), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer1_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer1_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(icon1) == IS_LONG)
				{
					object_pointer1_0 = Z_LVAL_P(icon1);
				}
				else if(Z_TYPE_P(icon1) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload1_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxRichToolTip::SetIcon()\n\n");
				#endif
				((wxRichToolTip_php*)_this)->SetIcon();


				return;
				break;
			}
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxRichToolTip::SetIcon((int) icon0)\n\n");
				#endif
				((wxRichToolTip_php*)_this)->SetIcon((int) icon0);


				return;
				break;
			}
		}
	}

	
	if(overload1_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxRichToolTip::SetIcon(*(wxIcon*) object_pointer1_0)\n\n");
				#endif
				((wxRichToolTip_php*)_this)->SetIcon(*(wxIcon*) object_pointer1_0);

				references->AddReference(icon1);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxRichToolTip, SetTimeout)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxRichToolTip::SetTimeout\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxRichToolTip::SetTimeout\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxRichToolTip)
				references = &((wxRichToolTip_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long milliseconds0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&milliseconds0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &milliseconds0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxRichToolTip::SetTimeout((unsigned) milliseconds0)\n\n");
				#endif
				((wxRichToolTip_php*)_this)->SetTimeout((unsigned) milliseconds0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxRichToolTip, SetTipKind)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxRichToolTip::SetTipKind\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxRichToolTip::SetTipKind\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxRichToolTip)
				references = &((wxRichToolTip_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long tipKind0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&tipKind0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &tipKind0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxRichToolTip::SetTipKind((wxTipKind) tipKind0)\n\n");
				#endif
				((wxRichToolTip_php*)_this)->SetTipKind((wxTipKind) tipKind0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxRichToolTip, SetTitleFont)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxRichToolTip::SetTitleFont\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxRichToolTip::SetTitleFont\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxRichToolTip)
				references = &((wxRichToolTip_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* font0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&font0, php_wxFont_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &font0, php_wxFont_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(font0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(font0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(font0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(font0);
				}
				else if(Z_TYPE_P(font0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxRichToolTip::SetTitleFont(*(wxFont*) object_pointer0_0)\n\n");
				#endif
				((wxRichToolTip_php*)_this)->SetTitleFont(*(wxFont*) object_pointer0_0);

				references->AddReference(font0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxRichToolTip, ShowFor)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxRichToolTip::ShowFor\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxRichToolTip::ShowFor\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxRichToolTip)
				references = &((wxRichToolTip_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* win0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'z' (&win0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "z", &win0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(win0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(win0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 || (rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(win0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(win0);
				}
				else if(Z_TYPE_P(win0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxRichToolTip::ShowFor((wxWindow*) object_pointer0_0)\n\n");
				#endif
				((wxRichToolTip_php*)_this)->ShowFor((wxWindow*) object_pointer0_0);

				references->AddReference(win0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxRichToolTip, __construct)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxRichToolTip::__construct\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	
	//Parameters for overload 0
	char* title0;
	long title_len0;
	char* message0;
	long message_len0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'ss' (&title0, &title_len0, &message0, &message_len0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "ss", &title0, &title_len0, &message0, &message_len0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct(wxString(title0, wxConvUTF8), wxString(message0, wxConvUTF8))\n");
				#endif
				_this = new wxRichToolTip_php(wxString(title0, wxConvUTF8), wxString(message0, wxConvUTF8));

				((wxRichToolTip_php*) _this)->references.Initialize();
				break;
			}
		}
	}

		
	if(already_called)
	{
		long id_to_find = zend_list_insert(_this, le_wxRichToolTip);
		
		add_property_resource(getThis(), _wxResource, id_to_find);
		
		MAKE_STD_ZVAL(((wxRichToolTip_php*) _this)->evnArray);
		
		array_init(((wxRichToolTip_php*) _this)->evnArray);
		
		((wxRichToolTip_php*) _this)->phpObj = getThis();
		
		((wxRichToolTip_php*) _this)->InitProperties();
		
		#ifdef ZTS 
		((wxRichToolTip_php*) _this)->TSRMLS_C = TSRMLS_C;
		#endif
	}
	else
	{
		zend_error(E_ERROR, "Abstract type: failed to call a proper constructor");
	}
	
	#ifdef USE_WXPHP_DEBUG
		php_printf("===========================================\n\n");
	#endif
}
void php_wxSashLayoutWindow_destruction_handler(zend_rsrc_list_entry *rsrc TSRMLS_DC) 
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Calling php_wxSashLayoutWindow_destruction_handler on %s at line %i\n", zend_get_executed_filename(TSRMLS_C), zend_get_executed_lineno(TSRMLS_C));
	php_printf("===========================================\n");
	#endif
	
	
	wxSashLayoutWindow_php* object = (wxSashLayoutWindow_php*)rsrc->ptr;
	
	if(rsrc->ptr != NULL)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Pointer not null\n");
		php_printf("Pointer address %x\n", rsrc->ptr);
		#endif
		
		if(object->references.IsUserInitialized())
		{	
	
			#ifdef USE_WXPHP_DEBUG
			php_printf("Deleting object by calling destroy\n");
			#endif
			
			object->Destroy();
			
			rsrc->ptr = NULL;
		}
		
		#ifdef USE_WXPHP_DEBUG
		php_printf("Deletion of wxSashLayoutWindow done\n");
		php_printf("===========================================\n\n");
		#endif
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Not user space initialized\n");
		#endif
	}
}
PHP_METHOD(php_wxSashLayoutWindow, Create)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSashLayoutWindow::Create\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxSashLayoutWindow::Create\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* parent0 = 0;
	void* object_pointer0_0 = 0;
	long id0;
	zval* pos0 = 0;
	void* object_pointer0_2 = 0;
	zval* size0 = 0;
	void* object_pointer0_3 = 0;
	long style0;
	char* name0;
	long name_len0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 1  && arguments_received <= 6)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'z|lOOls' (&parent0, &id0, &pos0, php_wxPoint_entry, &size0, php_wxSize_entry, &style0, &name0, &name_len0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "z|lOOls", &parent0, &id0, &pos0, php_wxPoint_entry, &size0, php_wxSize_entry, &style0, &name0, &name_len0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(parent0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(parent0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 || (rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(parent0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(parent0);
				}
				else if(Z_TYPE_P(parent0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 3){
				if(Z_TYPE_P(pos0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(pos0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_2 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_2 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(pos0) == IS_LONG)
				{
					object_pointer0_2 = Z_LVAL_P(pos0);
				}
				else if(Z_TYPE_P(pos0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 4){
				if(Z_TYPE_P(size0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(size0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_3 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_3 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(size0) == IS_LONG)
				{
					object_pointer0_3 = Z_LVAL_P(size0);
				}
				else if(Z_TYPE_P(size0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxSashLayoutWindow::Create((wxWindow*) object_pointer0_0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxSashLayoutWindow_php*)_this)->Create((wxWindow*) object_pointer0_0));

				references->AddReference(parent0);

				return;
				break;
			}
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxSashLayoutWindow::Create((wxWindow*) object_pointer0_0, (wxWindowID) id0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxSashLayoutWindow_php*)_this)->Create((wxWindow*) object_pointer0_0, (wxWindowID) id0));

				references->AddReference(parent0);

				return;
				break;
			}
			case 3:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxSashLayoutWindow::Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxSashLayoutWindow_php*)_this)->Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2));

				references->AddReference(parent0);
				references->AddReference(pos0);

				return;
				break;
			}
			case 4:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxSashLayoutWindow::Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2, *(wxSize*) object_pointer0_3))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxSashLayoutWindow_php*)_this)->Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2, *(wxSize*) object_pointer0_3));

				references->AddReference(parent0);
				references->AddReference(pos0);
				references->AddReference(size0);

				return;
				break;
			}
			case 5:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxSashLayoutWindow::Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2, *(wxSize*) object_pointer0_3, (long) style0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxSashLayoutWindow_php*)_this)->Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2, *(wxSize*) object_pointer0_3, (long) style0));

				references->AddReference(parent0);
				references->AddReference(pos0);
				references->AddReference(size0);

				return;
				break;
			}
			case 6:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxSashLayoutWindow::Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2, *(wxSize*) object_pointer0_3, (long) style0, wxString(name0, wxConvUTF8)))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxSashLayoutWindow_php*)_this)->Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2, *(wxSize*) object_pointer0_3, (long) style0, wxString(name0, wxConvUTF8)));

				references->AddReference(parent0);
				references->AddReference(pos0);
				references->AddReference(size0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxSashLayoutWindow, GetAlignment)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSashLayoutWindow::GetAlignment\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxSashLayoutWindow::GetAlignment\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxSashLayoutWindow::GetAlignment())\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxSashLayoutWindow_php*)_this)->GetAlignment());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxSashLayoutWindow, GetOrientation)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSashLayoutWindow::GetOrientation\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxSashLayoutWindow::GetOrientation\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxSashLayoutWindow::GetOrientation())\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxSashLayoutWindow_php*)_this)->GetOrientation());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxSashLayoutWindow, SetAlignment)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSashLayoutWindow::SetAlignment\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxSashLayoutWindow::SetAlignment\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long alignment0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&alignment0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &alignment0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxSashLayoutWindow::SetAlignment((wxLayoutAlignment) alignment0)\n\n");
				#endif
				((wxSashLayoutWindow_php*)_this)->SetAlignment((wxLayoutAlignment) alignment0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxSashLayoutWindow, SetDefaultSize)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSashLayoutWindow::SetDefaultSize\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxSashLayoutWindow::SetDefaultSize\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* size0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&size0, php_wxSize_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &size0, php_wxSize_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(size0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(size0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(size0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(size0);
				}
				else if(Z_TYPE_P(size0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxSashLayoutWindow::SetDefaultSize(*(wxSize*) object_pointer0_0)\n\n");
				#endif
				((wxSashLayoutWindow_php*)_this)->SetDefaultSize(*(wxSize*) object_pointer0_0);

				references->AddReference(size0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxSashLayoutWindow, SetOrientation)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSashLayoutWindow::SetOrientation\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxSashLayoutWindow::SetOrientation\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long orientation0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&orientation0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &orientation0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxSashLayoutWindow::SetOrientation((wxLayoutOrientation) orientation0)\n\n");
				#endif
				((wxSashLayoutWindow_php*)_this)->SetOrientation((wxLayoutOrientation) orientation0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxSashLayoutWindow, __construct)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSashLayoutWindow::__construct\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	
	//Parameters for overload 0
	bool overload0_called = false;
	//Parameters for overload 1
	zval* parent1 = 0;
	void* object_pointer1_0 = 0;
	long id1;
	zval* pos1 = 0;
	void* object_pointer1_2 = 0;
	zval* size1 = 0;
	void* object_pointer1_3 = 0;
	long style1;
	char* name1;
	long name_len1;
	bool overload1_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

	//Overload 1
	overload1:
	if(!already_called && arguments_received >= 2  && arguments_received <= 6)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'zl|OOls' (&parent1, &id1, &pos1, php_wxPoint_entry, &size1, php_wxSize_entry, &style1, &name1, &name_len1)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "zl|OOls", &parent1, &id1, &pos1, php_wxPoint_entry, &size1, php_wxSize_entry, &style1, &name1, &name_len1 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(parent1) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(parent1), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer1_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer1_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(parent1) == IS_LONG)
				{
					object_pointer1_0 = Z_LVAL_P(parent1);
				}
				else if(Z_TYPE_P(parent1) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 3){
				if(Z_TYPE_P(pos1) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(pos1), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer1_2 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer1_2 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(pos1) == IS_LONG)
				{
					object_pointer1_2 = Z_LVAL_P(pos1);
				}
				else if(Z_TYPE_P(pos1) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 4){
				if(Z_TYPE_P(size1) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(size1), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer1_3 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer1_3 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(size1) == IS_LONG)
				{
					object_pointer1_3 = Z_LVAL_P(size1);
				}
				else if(Z_TYPE_P(size1) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload1_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct()\n");
				#endif
				_this = new wxSashLayoutWindow_php();

				((wxSashLayoutWindow_php*) _this)->references.Initialize();
				break;
			}
		}
	}

	
	if(overload1_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxSashLayoutWindow*) object_pointer1_0, (wxWindowID) id1)\n");
				#endif
				_this = new wxSashLayoutWindow_php((wxSashLayoutWindow*) object_pointer1_0, (wxWindowID) id1);

				((wxSashLayoutWindow_php*) _this)->references.Initialize();
				((wxSashLayoutWindow_php*) _this)->references.AddReference(parent1);
				break;
			}
			case 3:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxSashLayoutWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2)\n");
				#endif
				_this = new wxSashLayoutWindow_php((wxSashLayoutWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2);

				((wxSashLayoutWindow_php*) _this)->references.Initialize();
				((wxSashLayoutWindow_php*) _this)->references.AddReference(parent1);
				((wxSashLayoutWindow_php*) _this)->references.AddReference(pos1);
				break;
			}
			case 4:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxSashLayoutWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2, *(wxSize*) object_pointer1_3)\n");
				#endif
				_this = new wxSashLayoutWindow_php((wxSashLayoutWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2, *(wxSize*) object_pointer1_3);

				((wxSashLayoutWindow_php*) _this)->references.Initialize();
				((wxSashLayoutWindow_php*) _this)->references.AddReference(parent1);
				((wxSashLayoutWindow_php*) _this)->references.AddReference(pos1);
				((wxSashLayoutWindow_php*) _this)->references.AddReference(size1);
				break;
			}
			case 5:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxSashLayoutWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2, *(wxSize*) object_pointer1_3, (long) style1)\n");
				#endif
				_this = new wxSashLayoutWindow_php((wxSashLayoutWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2, *(wxSize*) object_pointer1_3, (long) style1);

				((wxSashLayoutWindow_php*) _this)->references.Initialize();
				((wxSashLayoutWindow_php*) _this)->references.AddReference(parent1);
				((wxSashLayoutWindow_php*) _this)->references.AddReference(pos1);
				((wxSashLayoutWindow_php*) _this)->references.AddReference(size1);
				break;
			}
			case 6:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxSashLayoutWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2, *(wxSize*) object_pointer1_3, (long) style1, wxString(name1, wxConvUTF8))\n");
				#endif
				_this = new wxSashLayoutWindow_php((wxSashLayoutWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2, *(wxSize*) object_pointer1_3, (long) style1, wxString(name1, wxConvUTF8));

				((wxSashLayoutWindow_php*) _this)->references.Initialize();
				((wxSashLayoutWindow_php*) _this)->references.AddReference(parent1);
				((wxSashLayoutWindow_php*) _this)->references.AddReference(pos1);
				((wxSashLayoutWindow_php*) _this)->references.AddReference(size1);
				break;
			}
		}
	}

		
	if(already_called)
	{
		long id_to_find = zend_list_insert(_this, le_wxSashLayoutWindow);
		
		add_property_resource(getThis(), _wxResource, id_to_find);
		
		MAKE_STD_ZVAL(((wxSashLayoutWindow_php*) _this)->evnArray);
		
		array_init(((wxSashLayoutWindow_php*) _this)->evnArray);
		
		((wxSashLayoutWindow_php*) _this)->phpObj = getThis();
		
		((wxSashLayoutWindow_php*) _this)->InitProperties();
		
		#ifdef ZTS 
		((wxSashLayoutWindow_php*) _this)->TSRMLS_C = TSRMLS_C;
		#endif
	}
	else
	{
		zend_error(E_ERROR, "Abstract type: failed to call a proper constructor");
	}
	
	#ifdef USE_WXPHP_DEBUG
		php_printf("===========================================\n\n");
	#endif
}
void php_wxPanel_destruction_handler(zend_rsrc_list_entry *rsrc TSRMLS_DC) 
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Obviate php_wxPanel_destruction_handler call on %s at line %i\n", zend_get_executed_filename(TSRMLS_C), zend_get_executed_lineno(TSRMLS_C));
	php_printf("===========================================\n\n");
	#endif
}
PHP_METHOD(php_wxPanel, AcceptsFocus)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxPanel::AcceptsFocus\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxPanel::AcceptsFocus\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxPanel::AcceptsFocus())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxPanel_php*)_this)->AcceptsFocus());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxPanel, Create)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxPanel::Create\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxPanel::Create\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* parent0 = 0;
	void* object_pointer0_0 = 0;
	long id0;
	zval* pos0 = 0;
	void* object_pointer0_2 = 0;
	zval* size0 = 0;
	void* object_pointer0_3 = 0;
	long style0;
	char* name0;
	long name_len0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 1  && arguments_received <= 6)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'z|lOOls' (&parent0, &id0, &pos0, php_wxPoint_entry, &size0, php_wxSize_entry, &style0, &name0, &name_len0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "z|lOOls", &parent0, &id0, &pos0, php_wxPoint_entry, &size0, php_wxSize_entry, &style0, &name0, &name_len0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(parent0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(parent0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 || (rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(parent0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(parent0);
				}
				else if(Z_TYPE_P(parent0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 3){
				if(Z_TYPE_P(pos0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(pos0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_2 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_2 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(pos0) == IS_LONG)
				{
					object_pointer0_2 = Z_LVAL_P(pos0);
				}
				else if(Z_TYPE_P(pos0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 4){
				if(Z_TYPE_P(size0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(size0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_3 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_3 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(size0) == IS_LONG)
				{
					object_pointer0_3 = Z_LVAL_P(size0);
				}
				else if(Z_TYPE_P(size0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxPanel::Create((wxWindow*) object_pointer0_0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxPanel_php*)_this)->Create((wxWindow*) object_pointer0_0));

				references->AddReference(parent0);

				return;
				break;
			}
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxPanel::Create((wxWindow*) object_pointer0_0, (wxWindowID) id0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxPanel_php*)_this)->Create((wxWindow*) object_pointer0_0, (wxWindowID) id0));

				references->AddReference(parent0);

				return;
				break;
			}
			case 3:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxPanel::Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxPanel_php*)_this)->Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2));

				references->AddReference(parent0);
				references->AddReference(pos0);

				return;
				break;
			}
			case 4:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxPanel::Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2, *(wxSize*) object_pointer0_3))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxPanel_php*)_this)->Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2, *(wxSize*) object_pointer0_3));

				references->AddReference(parent0);
				references->AddReference(pos0);
				references->AddReference(size0);

				return;
				break;
			}
			case 5:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxPanel::Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2, *(wxSize*) object_pointer0_3, (long) style0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxPanel_php*)_this)->Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2, *(wxSize*) object_pointer0_3, (long) style0));

				references->AddReference(parent0);
				references->AddReference(pos0);
				references->AddReference(size0);

				return;
				break;
			}
			case 6:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxPanel::Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2, *(wxSize*) object_pointer0_3, (long) style0, wxString(name0, wxConvUTF8)))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxPanel_php*)_this)->Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2, *(wxSize*) object_pointer0_3, (long) style0, wxString(name0, wxConvUTF8)));

				references->AddReference(parent0);
				references->AddReference(pos0);
				references->AddReference(size0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxPanel, InitDialog)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxPanel::InitDialog\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxPanel::InitDialog\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxPanel::InitDialog()\n\n");
				#endif
				((wxPanel_php*)_this)->InitDialog();


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxPanel, Layout)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxPanel::Layout\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxPanel::Layout\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxPanel::Layout())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxPanel_php*)_this)->Layout());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxPanel, SetFocus)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxPanel::SetFocus\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxPanel::SetFocus\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxPanel::SetFocus()\n\n");
				#endif
				((wxPanel_php*)_this)->SetFocus();


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxPanel, SetFocusIgnoringChildren)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxPanel::SetFocusIgnoringChildren\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxPanel::SetFocusIgnoringChildren\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxPanel::SetFocusIgnoringChildren()\n\n");
				#endif
				((wxPanel_php*)_this)->SetFocusIgnoringChildren();


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxPanel, __construct)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxPanel::__construct\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	
	//Parameters for overload 0
	bool overload0_called = false;
	//Parameters for overload 1
	zval* parent1 = 0;
	void* object_pointer1_0 = 0;
	long id1;
	zval* pos1 = 0;
	void* object_pointer1_2 = 0;
	zval* size1 = 0;
	void* object_pointer1_3 = 0;
	long style1;
	char* name1;
	long name_len1;
	bool overload1_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

	//Overload 1
	overload1:
	if(!already_called && arguments_received >= 1  && arguments_received <= 6)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'z|lOOls' (&parent1, &id1, &pos1, php_wxPoint_entry, &size1, php_wxSize_entry, &style1, &name1, &name_len1)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "z|lOOls", &parent1, &id1, &pos1, php_wxPoint_entry, &size1, php_wxSize_entry, &style1, &name1, &name_len1 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(parent1) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(parent1), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer1_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer1_0 || (rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(parent1) == IS_LONG)
				{
					object_pointer1_0 = Z_LVAL_P(parent1);
				}
				else if(Z_TYPE_P(parent1) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 3){
				if(Z_TYPE_P(pos1) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(pos1), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer1_2 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer1_2 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(pos1) == IS_LONG)
				{
					object_pointer1_2 = Z_LVAL_P(pos1);
				}
				else if(Z_TYPE_P(pos1) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 4){
				if(Z_TYPE_P(size1) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(size1), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer1_3 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer1_3 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(size1) == IS_LONG)
				{
					object_pointer1_3 = Z_LVAL_P(size1);
				}
				else if(Z_TYPE_P(size1) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload1_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct()\n");
				#endif
				_this = new wxPanel_php();

				((wxPanel_php*) _this)->references.Initialize();
				break;
			}
		}
	}

	
	if(overload1_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer1_0)\n");
				#endif
				_this = new wxPanel_php((wxWindow*) object_pointer1_0);

				((wxPanel_php*) _this)->references.Initialize();
				((wxPanel_php*) _this)->references.AddReference(parent1);
				break;
			}
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer1_0, (wxWindowID) id1)\n");
				#endif
				_this = new wxPanel_php((wxWindow*) object_pointer1_0, (wxWindowID) id1);

				((wxPanel_php*) _this)->references.Initialize();
				((wxPanel_php*) _this)->references.AddReference(parent1);
				break;
			}
			case 3:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2)\n");
				#endif
				_this = new wxPanel_php((wxWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2);

				((wxPanel_php*) _this)->references.Initialize();
				((wxPanel_php*) _this)->references.AddReference(parent1);
				((wxPanel_php*) _this)->references.AddReference(pos1);
				break;
			}
			case 4:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2, *(wxSize*) object_pointer1_3)\n");
				#endif
				_this = new wxPanel_php((wxWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2, *(wxSize*) object_pointer1_3);

				((wxPanel_php*) _this)->references.Initialize();
				((wxPanel_php*) _this)->references.AddReference(parent1);
				((wxPanel_php*) _this)->references.AddReference(pos1);
				((wxPanel_php*) _this)->references.AddReference(size1);
				break;
			}
			case 5:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2, *(wxSize*) object_pointer1_3, (long) style1)\n");
				#endif
				_this = new wxPanel_php((wxWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2, *(wxSize*) object_pointer1_3, (long) style1);

				((wxPanel_php*) _this)->references.Initialize();
				((wxPanel_php*) _this)->references.AddReference(parent1);
				((wxPanel_php*) _this)->references.AddReference(pos1);
				((wxPanel_php*) _this)->references.AddReference(size1);
				break;
			}
			case 6:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2, *(wxSize*) object_pointer1_3, (long) style1, wxString(name1, wxConvUTF8))\n");
				#endif
				_this = new wxPanel_php((wxWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2, *(wxSize*) object_pointer1_3, (long) style1, wxString(name1, wxConvUTF8));

				((wxPanel_php*) _this)->references.Initialize();
				((wxPanel_php*) _this)->references.AddReference(parent1);
				((wxPanel_php*) _this)->references.AddReference(pos1);
				((wxPanel_php*) _this)->references.AddReference(size1);
				break;
			}
		}
	}

		
	if(already_called)
	{
		long id_to_find = zend_list_insert(_this, le_wxPanel);
		
		add_property_resource(getThis(), _wxResource, id_to_find);
		
		MAKE_STD_ZVAL(((wxPanel_php*) _this)->evnArray);
		
		array_init(((wxPanel_php*) _this)->evnArray);
		
		((wxPanel_php*) _this)->phpObj = getThis();
		
		((wxPanel_php*) _this)->InitProperties();
		
		#ifdef ZTS 
		((wxPanel_php*) _this)->TSRMLS_C = TSRMLS_C;
		#endif
	}
	else
	{
		zend_error(E_ERROR, "Abstract type: failed to call a proper constructor");
	}
	
	#ifdef USE_WXPHP_DEBUG
		php_printf("===========================================\n\n");
	#endif
}
void php_wxSashWindow_destruction_handler(zend_rsrc_list_entry *rsrc TSRMLS_DC) 
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Calling php_wxSashWindow_destruction_handler on %s at line %i\n", zend_get_executed_filename(TSRMLS_C), zend_get_executed_lineno(TSRMLS_C));
	php_printf("===========================================\n");
	#endif
	
	
	wxSashWindow_php* object = (wxSashWindow_php*)rsrc->ptr;
	
	if(rsrc->ptr != NULL)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Pointer not null\n");
		php_printf("Pointer address %x\n", rsrc->ptr);
		#endif
		
		if(object->references.IsUserInitialized())
		{	
	
			#ifdef USE_WXPHP_DEBUG
			php_printf("Deleting object by calling destroy\n");
			#endif
			
			object->Destroy();
			
			rsrc->ptr = NULL;
		}
		
		#ifdef USE_WXPHP_DEBUG
		php_printf("Deletion of wxSashWindow done\n");
		php_printf("===========================================\n\n");
		#endif
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Not user space initialized\n");
		#endif
	}
}
PHP_METHOD(php_wxSashWindow, GetMaximumSizeX)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSashWindow::GetMaximumSizeX\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxSashWindow::GetMaximumSizeX\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxSashWindow::GetMaximumSizeX())\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxSashWindow_php*)_this)->GetMaximumSizeX());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxSashWindow, GetMaximumSizeY)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSashWindow::GetMaximumSizeY\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxSashWindow::GetMaximumSizeY\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxSashWindow::GetMaximumSizeY())\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxSashWindow_php*)_this)->GetMaximumSizeY());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxSashWindow, GetMinimumSizeX)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSashWindow::GetMinimumSizeX\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxSashWindow::GetMinimumSizeX\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxSashWindow::GetMinimumSizeX())\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxSashWindow_php*)_this)->GetMinimumSizeX());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxSashWindow, GetMinimumSizeY)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSashWindow::GetMinimumSizeY\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxSashWindow::GetMinimumSizeY\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxSashWindow::GetMinimumSizeY())\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxSashWindow_php*)_this)->GetMinimumSizeY());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxSashWindow, GetSashVisible)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSashWindow::GetSashVisible\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxSashWindow::GetSashVisible\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long edge0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&edge0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &edge0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxSashWindow::GetSashVisible((wxSashEdgePosition) edge0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxSashWindow_php*)_this)->GetSashVisible((wxSashEdgePosition) edge0));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxSashWindow, SetMaximumSizeX)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSashWindow::SetMaximumSizeX\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxSashWindow::SetMaximumSizeX\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long min0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&min0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &min0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxSashWindow::SetMaximumSizeX((int) min0)\n\n");
				#endif
				((wxSashWindow_php*)_this)->SetMaximumSizeX((int) min0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxSashWindow, SetMaximumSizeY)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSashWindow::SetMaximumSizeY\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxSashWindow::SetMaximumSizeY\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long min0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&min0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &min0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxSashWindow::SetMaximumSizeY((int) min0)\n\n");
				#endif
				((wxSashWindow_php*)_this)->SetMaximumSizeY((int) min0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxSashWindow, SetMinimumSizeX)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSashWindow::SetMinimumSizeX\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxSashWindow::SetMinimumSizeX\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long min0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&min0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &min0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxSashWindow::SetMinimumSizeX((int) min0)\n\n");
				#endif
				((wxSashWindow_php*)_this)->SetMinimumSizeX((int) min0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxSashWindow, SetMinimumSizeY)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSashWindow::SetMinimumSizeY\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxSashWindow::SetMinimumSizeY\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long min0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&min0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &min0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxSashWindow::SetMinimumSizeY((int) min0)\n\n");
				#endif
				((wxSashWindow_php*)_this)->SetMinimumSizeY((int) min0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxSashWindow, SetSashVisible)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSashWindow::SetSashVisible\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxSashWindow::SetSashVisible\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long edge0;
	bool visible0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'lb' (&edge0, &visible0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "lb", &edge0, &visible0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxSashWindow::SetSashVisible((wxSashEdgePosition) edge0, visible0)\n\n");
				#endif
				((wxSashWindow_php*)_this)->SetSashVisible((wxSashEdgePosition) edge0, visible0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxSashWindow, __construct)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSashWindow::__construct\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	
	//Parameters for overload 0
	bool overload0_called = false;
	//Parameters for overload 1
	zval* parent1 = 0;
	void* object_pointer1_0 = 0;
	long id1;
	zval* pos1 = 0;
	void* object_pointer1_2 = 0;
	zval* size1 = 0;
	void* object_pointer1_3 = 0;
	long style1;
	char* name1;
	long name_len1;
	bool overload1_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

	//Overload 1
	overload1:
	if(!already_called && arguments_received >= 2  && arguments_received <= 6)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'zl|OOls' (&parent1, &id1, &pos1, php_wxPoint_entry, &size1, php_wxSize_entry, &style1, &name1, &name_len1)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "zl|OOls", &parent1, &id1, &pos1, php_wxPoint_entry, &size1, php_wxSize_entry, &style1, &name1, &name_len1 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(parent1) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(parent1), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer1_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer1_0 || (rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(parent1) == IS_LONG)
				{
					object_pointer1_0 = Z_LVAL_P(parent1);
				}
				else if(Z_TYPE_P(parent1) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 3){
				if(Z_TYPE_P(pos1) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(pos1), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer1_2 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer1_2 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(pos1) == IS_LONG)
				{
					object_pointer1_2 = Z_LVAL_P(pos1);
				}
				else if(Z_TYPE_P(pos1) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 4){
				if(Z_TYPE_P(size1) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(size1), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer1_3 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer1_3 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(size1) == IS_LONG)
				{
					object_pointer1_3 = Z_LVAL_P(size1);
				}
				else if(Z_TYPE_P(size1) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload1_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct()\n");
				#endif
				_this = new wxSashWindow_php();

				((wxSashWindow_php*) _this)->references.Initialize();
				break;
			}
		}
	}

	
	if(overload1_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer1_0, (wxWindowID) id1)\n");
				#endif
				_this = new wxSashWindow_php((wxWindow*) object_pointer1_0, (wxWindowID) id1);

				((wxSashWindow_php*) _this)->references.Initialize();
				((wxSashWindow_php*) _this)->references.AddReference(parent1);
				break;
			}
			case 3:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2)\n");
				#endif
				_this = new wxSashWindow_php((wxWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2);

				((wxSashWindow_php*) _this)->references.Initialize();
				((wxSashWindow_php*) _this)->references.AddReference(parent1);
				((wxSashWindow_php*) _this)->references.AddReference(pos1);
				break;
			}
			case 4:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2, *(wxSize*) object_pointer1_3)\n");
				#endif
				_this = new wxSashWindow_php((wxWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2, *(wxSize*) object_pointer1_3);

				((wxSashWindow_php*) _this)->references.Initialize();
				((wxSashWindow_php*) _this)->references.AddReference(parent1);
				((wxSashWindow_php*) _this)->references.AddReference(pos1);
				((wxSashWindow_php*) _this)->references.AddReference(size1);
				break;
			}
			case 5:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2, *(wxSize*) object_pointer1_3, (long) style1)\n");
				#endif
				_this = new wxSashWindow_php((wxWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2, *(wxSize*) object_pointer1_3, (long) style1);

				((wxSashWindow_php*) _this)->references.Initialize();
				((wxSashWindow_php*) _this)->references.AddReference(parent1);
				((wxSashWindow_php*) _this)->references.AddReference(pos1);
				((wxSashWindow_php*) _this)->references.AddReference(size1);
				break;
			}
			case 6:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2, *(wxSize*) object_pointer1_3, (long) style1, wxString(name1, wxConvUTF8))\n");
				#endif
				_this = new wxSashWindow_php((wxWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2, *(wxSize*) object_pointer1_3, (long) style1, wxString(name1, wxConvUTF8));

				((wxSashWindow_php*) _this)->references.Initialize();
				((wxSashWindow_php*) _this)->references.AddReference(parent1);
				((wxSashWindow_php*) _this)->references.AddReference(pos1);
				((wxSashWindow_php*) _this)->references.AddReference(size1);
				break;
			}
		}
	}

		
	if(already_called)
	{
		long id_to_find = zend_list_insert(_this, le_wxSashWindow);
		
		add_property_resource(getThis(), _wxResource, id_to_find);
		
		MAKE_STD_ZVAL(((wxSashWindow_php*) _this)->evnArray);
		
		array_init(((wxSashWindow_php*) _this)->evnArray);
		
		((wxSashWindow_php*) _this)->phpObj = getThis();
		
		((wxSashWindow_php*) _this)->InitProperties();
		
		#ifdef ZTS 
		((wxSashWindow_php*) _this)->TSRMLS_C = TSRMLS_C;
		#endif
	}
	else
	{
		zend_error(E_ERROR, "Abstract type: failed to call a proper constructor");
	}
	
	#ifdef USE_WXPHP_DEBUG
		php_printf("===========================================\n\n");
	#endif
}
void php_wxSplitterWindow_destruction_handler(zend_rsrc_list_entry *rsrc TSRMLS_DC) 
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Obviate php_wxSplitterWindow_destruction_handler call on %s at line %i\n", zend_get_executed_filename(TSRMLS_C), zend_get_executed_lineno(TSRMLS_C));
	php_printf("===========================================\n\n");
	#endif
}
PHP_METHOD(php_wxSplitterWindow, __construct)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSplitterWindow::__construct\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	
	//Parameters for overload 0
	bool overload0_called = false;
	//Parameters for overload 1
	zval* parent1 = 0;
	void* object_pointer1_0 = 0;
	long id1;
	zval* pos1 = 0;
	void* object_pointer1_2 = 0;
	zval* size1 = 0;
	void* object_pointer1_3 = 0;
	long style1;
	char* name1;
	long name_len1;
	bool overload1_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

	//Overload 1
	overload1:
	if(!already_called && arguments_received >= 1  && arguments_received <= 6)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'z|lOOls' (&parent1, &id1, &pos1, php_wxPoint_entry, &size1, php_wxSize_entry, &style1, &name1, &name_len1)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "z|lOOls", &parent1, &id1, &pos1, php_wxPoint_entry, &size1, php_wxSize_entry, &style1, &name1, &name_len1 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(parent1) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(parent1), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer1_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer1_0 || (rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(parent1) == IS_LONG)
				{
					object_pointer1_0 = Z_LVAL_P(parent1);
				}
				else if(Z_TYPE_P(parent1) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 3){
				if(Z_TYPE_P(pos1) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(pos1), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer1_2 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer1_2 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(pos1) == IS_LONG)
				{
					object_pointer1_2 = Z_LVAL_P(pos1);
				}
				else if(Z_TYPE_P(pos1) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 4){
				if(Z_TYPE_P(size1) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(size1), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer1_3 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer1_3 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(size1) == IS_LONG)
				{
					object_pointer1_3 = Z_LVAL_P(size1);
				}
				else if(Z_TYPE_P(size1) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload1_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct()\n");
				#endif
				_this = new wxSplitterWindow_php();

				((wxSplitterWindow_php*) _this)->references.Initialize();
				break;
			}
		}
	}

	
	if(overload1_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer1_0)\n");
				#endif
				_this = new wxSplitterWindow_php((wxWindow*) object_pointer1_0);

				((wxSplitterWindow_php*) _this)->references.Initialize();
				((wxSplitterWindow_php*) _this)->references.AddReference(parent1);
				break;
			}
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer1_0, (wxWindowID) id1)\n");
				#endif
				_this = new wxSplitterWindow_php((wxWindow*) object_pointer1_0, (wxWindowID) id1);

				((wxSplitterWindow_php*) _this)->references.Initialize();
				((wxSplitterWindow_php*) _this)->references.AddReference(parent1);
				break;
			}
			case 3:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2)\n");
				#endif
				_this = new wxSplitterWindow_php((wxWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2);

				((wxSplitterWindow_php*) _this)->references.Initialize();
				((wxSplitterWindow_php*) _this)->references.AddReference(parent1);
				((wxSplitterWindow_php*) _this)->references.AddReference(pos1);
				break;
			}
			case 4:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2, *(wxSize*) object_pointer1_3)\n");
				#endif
				_this = new wxSplitterWindow_php((wxWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2, *(wxSize*) object_pointer1_3);

				((wxSplitterWindow_php*) _this)->references.Initialize();
				((wxSplitterWindow_php*) _this)->references.AddReference(parent1);
				((wxSplitterWindow_php*) _this)->references.AddReference(pos1);
				((wxSplitterWindow_php*) _this)->references.AddReference(size1);
				break;
			}
			case 5:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2, *(wxSize*) object_pointer1_3, (long) style1)\n");
				#endif
				_this = new wxSplitterWindow_php((wxWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2, *(wxSize*) object_pointer1_3, (long) style1);

				((wxSplitterWindow_php*) _this)->references.Initialize();
				((wxSplitterWindow_php*) _this)->references.AddReference(parent1);
				((wxSplitterWindow_php*) _this)->references.AddReference(pos1);
				((wxSplitterWindow_php*) _this)->references.AddReference(size1);
				break;
			}
			case 6:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2, *(wxSize*) object_pointer1_3, (long) style1, wxString(name1, wxConvUTF8))\n");
				#endif
				_this = new wxSplitterWindow_php((wxWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2, *(wxSize*) object_pointer1_3, (long) style1, wxString(name1, wxConvUTF8));

				((wxSplitterWindow_php*) _this)->references.Initialize();
				((wxSplitterWindow_php*) _this)->references.AddReference(parent1);
				((wxSplitterWindow_php*) _this)->references.AddReference(pos1);
				((wxSplitterWindow_php*) _this)->references.AddReference(size1);
				break;
			}
		}
	}

		
	if(already_called)
	{
		long id_to_find = zend_list_insert(_this, le_wxSplitterWindow);
		
		add_property_resource(getThis(), _wxResource, id_to_find);
		
		MAKE_STD_ZVAL(((wxSplitterWindow_php*) _this)->evnArray);
		
		array_init(((wxSplitterWindow_php*) _this)->evnArray);
		
		((wxSplitterWindow_php*) _this)->phpObj = getThis();
		
		((wxSplitterWindow_php*) _this)->InitProperties();
		
		#ifdef ZTS 
		((wxSplitterWindow_php*) _this)->TSRMLS_C = TSRMLS_C;
		#endif
	}
	else
	{
		zend_error(E_ERROR, "Abstract type: failed to call a proper constructor");
	}
	
	#ifdef USE_WXPHP_DEBUG
		php_printf("===========================================\n\n");
	#endif
}
PHP_METHOD(php_wxSplitterWindow, UpdateSize)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSplitterWindow::UpdateSize\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxSplitterWindow::UpdateSize\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxSplitterWindow::UpdateSize()\n\n");
				#endif
				((wxSplitterWindow_php*)_this)->UpdateSize();


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxSplitterWindow, Unsplit)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSplitterWindow::Unsplit\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxSplitterWindow::Unsplit\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* toRemove0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 0  && arguments_received <= 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '|z' (&toRemove0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "|z", &toRemove0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(toRemove0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(toRemove0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 || (rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(toRemove0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(toRemove0);
				}
				else if(Z_TYPE_P(toRemove0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxSplitterWindow::Unsplit())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxSplitterWindow_php*)_this)->Unsplit());


				return;
				break;
			}
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxSplitterWindow::Unsplit((wxWindow*) object_pointer0_0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxSplitterWindow_php*)_this)->Unsplit((wxWindow*) object_pointer0_0));

				references->AddReference(toRemove0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxSplitterWindow, SplitVertically)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSplitterWindow::SplitVertically\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxSplitterWindow::SplitVertically\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* window10 = 0;
	void* object_pointer0_0 = 0;
	zval* window20 = 0;
	void* object_pointer0_1 = 0;
	long sashPosition0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 2  && arguments_received <= 3)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'zz|l' (&window10, &window20, &sashPosition0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "zz|l", &window10, &window20, &sashPosition0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(window10) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(window10), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 || (rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(window10) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(window10);
				}
				else if(Z_TYPE_P(window10) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 2){
				if(Z_TYPE_P(window20) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(window20), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_1 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_1 || (rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(window20) == IS_LONG)
				{
					object_pointer0_1 = Z_LVAL_P(window20);
				}
				else if(Z_TYPE_P(window20) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxSplitterWindow::SplitVertically((wxWindow*) object_pointer0_0, (wxWindow*) object_pointer0_1))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxSplitterWindow_php*)_this)->SplitVertically((wxWindow*) object_pointer0_0, (wxWindow*) object_pointer0_1));

				references->AddReference(window10);
				references->AddReference(window20);

				return;
				break;
			}
			case 3:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxSplitterWindow::SplitVertically((wxWindow*) object_pointer0_0, (wxWindow*) object_pointer0_1, (int) sashPosition0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxSplitterWindow_php*)_this)->SplitVertically((wxWindow*) object_pointer0_0, (wxWindow*) object_pointer0_1, (int) sashPosition0));

				references->AddReference(window10);
				references->AddReference(window20);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxSplitterWindow, SplitHorizontally)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSplitterWindow::SplitHorizontally\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxSplitterWindow::SplitHorizontally\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* window10 = 0;
	void* object_pointer0_0 = 0;
	zval* window20 = 0;
	void* object_pointer0_1 = 0;
	long sashPosition0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 2  && arguments_received <= 3)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'zz|l' (&window10, &window20, &sashPosition0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "zz|l", &window10, &window20, &sashPosition0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(window10) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(window10), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 || (rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(window10) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(window10);
				}
				else if(Z_TYPE_P(window10) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 2){
				if(Z_TYPE_P(window20) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(window20), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_1 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_1 || (rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(window20) == IS_LONG)
				{
					object_pointer0_1 = Z_LVAL_P(window20);
				}
				else if(Z_TYPE_P(window20) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxSplitterWindow::SplitHorizontally((wxWindow*) object_pointer0_0, (wxWindow*) object_pointer0_1))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxSplitterWindow_php*)_this)->SplitHorizontally((wxWindow*) object_pointer0_0, (wxWindow*) object_pointer0_1));

				references->AddReference(window10);
				references->AddReference(window20);

				return;
				break;
			}
			case 3:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxSplitterWindow::SplitHorizontally((wxWindow*) object_pointer0_0, (wxWindow*) object_pointer0_1, (int) sashPosition0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxSplitterWindow_php*)_this)->SplitHorizontally((wxWindow*) object_pointer0_0, (wxWindow*) object_pointer0_1, (int) sashPosition0));

				references->AddReference(window10);
				references->AddReference(window20);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxSplitterWindow, SetSplitMode)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSplitterWindow::SetSplitMode\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxSplitterWindow::SetSplitMode\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long mode0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&mode0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &mode0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxSplitterWindow::SetSplitMode((int) mode0)\n\n");
				#endif
				((wxSplitterWindow_php*)_this)->SetSplitMode((int) mode0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxSplitterWindow, SetSashPosition)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSplitterWindow::SetSashPosition\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxSplitterWindow::SetSashPosition\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long position0;
	bool redraw0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 1  && arguments_received <= 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l|b' (&position0, &redraw0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l|b", &position0, &redraw0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxSplitterWindow::SetSashPosition((int) position0)\n\n");
				#endif
				((wxSplitterWindow_php*)_this)->SetSashPosition((int) position0);


				return;
				break;
			}
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxSplitterWindow::SetSashPosition((int) position0, redraw0)\n\n");
				#endif
				((wxSplitterWindow_php*)_this)->SetSashPosition((int) position0, redraw0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxSplitterWindow, SetSashGravity)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSplitterWindow::SetSashGravity\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxSplitterWindow::SetSashGravity\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	double gravity0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'd' (&gravity0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "d", &gravity0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxSplitterWindow::SetSashGravity(gravity0)\n\n");
				#endif
				((wxSplitterWindow_php*)_this)->SetSashGravity(gravity0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxSplitterWindow, ReplaceWindow)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSplitterWindow::ReplaceWindow\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxSplitterWindow::ReplaceWindow\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* winOld0 = 0;
	void* object_pointer0_0 = 0;
	zval* winNew0 = 0;
	void* object_pointer0_1 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'zz' (&winOld0, &winNew0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "zz", &winOld0, &winNew0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(winOld0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(winOld0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 || (rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(winOld0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(winOld0);
				}
				else if(Z_TYPE_P(winOld0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 2){
				if(Z_TYPE_P(winNew0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(winNew0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_1 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_1 || (rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(winNew0) == IS_LONG)
				{
					object_pointer0_1 = Z_LVAL_P(winNew0);
				}
				else if(Z_TYPE_P(winNew0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxSplitterWindow::ReplaceWindow((wxWindow*) object_pointer0_0, (wxWindow*) object_pointer0_1))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxSplitterWindow_php*)_this)->ReplaceWindow((wxWindow*) object_pointer0_0, (wxWindow*) object_pointer0_1));

				references->AddReference(winOld0);
				references->AddReference(winNew0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxSplitterWindow, SetMinimumPaneSize)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSplitterWindow::SetMinimumPaneSize\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxSplitterWindow::SetMinimumPaneSize\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long paneSize0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&paneSize0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &paneSize0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxSplitterWindow::SetMinimumPaneSize((int) paneSize0)\n\n");
				#endif
				((wxSplitterWindow_php*)_this)->SetMinimumPaneSize((int) paneSize0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxSplitterWindow, IsSplit)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSplitterWindow::IsSplit\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxSplitterWindow::IsSplit\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxSplitterWindow::IsSplit())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxSplitterWindow_php*)_this)->IsSplit());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxSplitterWindow, Initialize)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSplitterWindow::Initialize\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxSplitterWindow::Initialize\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* window0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'z' (&window0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "z", &window0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(window0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(window0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 || (rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(window0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(window0);
				}
				else if(Z_TYPE_P(window0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxSplitterWindow::Initialize((wxWindow*) object_pointer0_0)\n\n");
				#endif
				((wxSplitterWindow_php*)_this)->Initialize((wxWindow*) object_pointer0_0);

				references->AddReference(window0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxSplitterWindow, GetWindow2)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSplitterWindow::GetWindow2\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxSplitterWindow::GetWindow2\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxSplitterWindow::GetWindow2() to return object pointer\n\n");
				#endif
				wxWindow_php* value_to_return0;
				value_to_return0 = (wxWindow_php*) ((wxSplitterWindow_php*)_this)->GetWindow2();

				if(value_to_return0 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return0->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return0->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxWindow_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return0, le_wxWindow));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return0 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxSplitterWindow, GetWindow1)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSplitterWindow::GetWindow1\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxSplitterWindow::GetWindow1\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxSplitterWindow::GetWindow1() to return object pointer\n\n");
				#endif
				wxWindow_php* value_to_return0;
				value_to_return0 = (wxWindow_php*) ((wxSplitterWindow_php*)_this)->GetWindow1();

				if(value_to_return0 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return0->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return0->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxWindow_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return0, le_wxWindow));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return0 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxSplitterWindow, GetSplitMode)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSplitterWindow::GetSplitMode\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxSplitterWindow::GetSplitMode\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxSplitterWindow::GetSplitMode())\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxSplitterWindow_php*)_this)->GetSplitMode());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxSplitterWindow, GetSashSize)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSplitterWindow::GetSashSize\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxSplitterWindow::GetSashSize\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxSplitterWindow::GetSashSize())\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxSplitterWindow_php*)_this)->GetSashSize());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxSplitterWindow, GetSashPosition)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSplitterWindow::GetSashPosition\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxSplitterWindow::GetSashPosition\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxSplitterWindow::GetSashPosition())\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxSplitterWindow_php*)_this)->GetSashPosition());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxSplitterWindow, GetSashGravity)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSplitterWindow::GetSashGravity\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxSplitterWindow::GetSashGravity\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxSplitterWindow::GetSashGravity())\n\n");
				#endif
				ZVAL_DOUBLE(return_value, ((wxSplitterWindow_php*)_this)->GetSashGravity());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxSplitterWindow, GetMinimumPaneSize)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSplitterWindow::GetMinimumPaneSize\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxSplitterWindow::GetMinimumPaneSize\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxSplitterWindow::GetMinimumPaneSize())\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxSplitterWindow_php*)_this)->GetMinimumPaneSize());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxSplitterWindow, Create)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxSplitterWindow::Create\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxSplitterWindow::Create\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* parent0 = 0;
	void* object_pointer0_0 = 0;
	long id0;
	zval* point0 = 0;
	void* object_pointer0_2 = 0;
	zval* size0 = 0;
	void* object_pointer0_3 = 0;
	long style0;
	char* name0;
	long name_len0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 1  && arguments_received <= 6)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'z|lOOls' (&parent0, &id0, &point0, php_wxPoint_entry, &size0, php_wxSize_entry, &style0, &name0, &name_len0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "z|lOOls", &parent0, &id0, &point0, php_wxPoint_entry, &size0, php_wxSize_entry, &style0, &name0, &name_len0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(parent0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(parent0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 || (rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(parent0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(parent0);
				}
				else if(Z_TYPE_P(parent0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 3){
				if(Z_TYPE_P(point0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(point0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_2 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_2 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(point0) == IS_LONG)
				{
					object_pointer0_2 = Z_LVAL_P(point0);
				}
				else if(Z_TYPE_P(point0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 4){
				if(Z_TYPE_P(size0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(size0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_3 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_3 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(size0) == IS_LONG)
				{
					object_pointer0_3 = Z_LVAL_P(size0);
				}
				else if(Z_TYPE_P(size0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxSplitterWindow::Create((wxWindow*) object_pointer0_0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxSplitterWindow_php*)_this)->Create((wxWindow*) object_pointer0_0));

				references->AddReference(parent0);

				return;
				break;
			}
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxSplitterWindow::Create((wxWindow*) object_pointer0_0, (wxWindowID) id0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxSplitterWindow_php*)_this)->Create((wxWindow*) object_pointer0_0, (wxWindowID) id0));

				references->AddReference(parent0);

				return;
				break;
			}
			case 3:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxSplitterWindow::Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxSplitterWindow_php*)_this)->Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2));

				references->AddReference(parent0);
				references->AddReference(point0);

				return;
				break;
			}
			case 4:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxSplitterWindow::Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2, *(wxSize*) object_pointer0_3))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxSplitterWindow_php*)_this)->Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2, *(wxSize*) object_pointer0_3));

				references->AddReference(parent0);
				references->AddReference(point0);
				references->AddReference(size0);

				return;
				break;
			}
			case 5:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxSplitterWindow::Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2, *(wxSize*) object_pointer0_3, (long) style0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxSplitterWindow_php*)_this)->Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2, *(wxSize*) object_pointer0_3, (long) style0));

				references->AddReference(parent0);
				references->AddReference(point0);
				references->AddReference(size0);

				return;
				break;
			}
			case 6:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxSplitterWindow::Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2, *(wxSize*) object_pointer0_3, (long) style0, wxString(name0, wxConvUTF8)))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxSplitterWindow_php*)_this)->Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2, *(wxSize*) object_pointer0_3, (long) style0, wxString(name0, wxConvUTF8)));

				references->AddReference(parent0);
				references->AddReference(point0);
				references->AddReference(size0);

				return;
				break;
			}
		}
	}

		
}
void wxSplitterWindow_php::OnDoubleClickSash(int x, int y)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking virtual wxSplitterWindow::OnDoubleClickSash\n");
	php_printf("===========================================\n");
	#endif
	
	zval *arguments[2];
	
	//Initilize arguments array
	for(int i=0; i<2; i++)
	{
		MAKE_STD_ZVAL(arguments[i]);
	}

	zval* return_value;
	MAKE_STD_ZVAL(return_value);
	zval function_name;
	ZVAL_STRING(&function_name, "OnDoubleClickSash", 0);
	char* temp_string;
	char _wxResource[] = "wxResource";
	zval **tmp;
	int id_to_find;
	void* return_object;
	int rsrc_type;
	
	//Parameters for conversion
	ZVAL_LONG(arguments[0], x);
	ZVAL_LONG(arguments[1], y);
		
	#ifdef USE_WXPHP_DEBUG
	php_printf("Trying to call user defined method\n");
	#endif
	
	if(call_user_function(NULL, (zval**) &this->phpObj, &function_name, return_value, 2, arguments TSRMLS_CC) == FAILURE)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Invocation of user defined method failed\n");
		#endif
		
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Returning userspace value.\n");
		#endif
		
		return;
	}
	
	#ifdef USE_WXPHP_DEBUG
	php_printf("Calling original method\n");
	php_printf("===========================================\n\n");
	#endif
	
	//Call original method
	wxSplitterWindow::OnDoubleClickSash(x, y);

}
bool wxSplitterWindow_php::OnSashPositionChange(int newSashPosition)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking virtual wxSplitterWindow::OnSashPositionChange\n");
	php_printf("===========================================\n");
	#endif
	
	zval *arguments[1];
	
	//Initilize arguments array
	for(int i=0; i<1; i++)
	{
		MAKE_STD_ZVAL(arguments[i]);
	}

	zval* return_value;
	MAKE_STD_ZVAL(return_value);
	zval function_name;
	ZVAL_STRING(&function_name, "OnSashPositionChange", 0);
	char* temp_string;
	char _wxResource[] = "wxResource";
	zval **tmp;
	int id_to_find;
	void* return_object;
	int rsrc_type;
	
	//Parameters for conversion
	ZVAL_LONG(arguments[0], newSashPosition);
		
	#ifdef USE_WXPHP_DEBUG
	php_printf("Trying to call user defined method\n");
	#endif
	
	if(call_user_function(NULL, (zval**) &this->phpObj, &function_name, return_value, 1, arguments TSRMLS_CC) == FAILURE)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Invocation of user defined method failed\n");
		#endif
		
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Returning userspace value.\n");
		#endif
		
		return Z_BVAL_P(return_value);
	}
	
	#ifdef USE_WXPHP_DEBUG
	php_printf("Calling original method\n");
	php_printf("===========================================\n\n");
	#endif
	
	//Call original method
	return wxSplitterWindow::OnSashPositionChange(newSashPosition);

}
void wxSplitterWindow_php::OnUnsplit(wxWindow* removed)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking virtual wxSplitterWindow::OnUnsplit\n");
	php_printf("===========================================\n");
	#endif
	
	zval *arguments[1];
	
	//Initilize arguments array
	for(int i=0; i<1; i++)
	{
		MAKE_STD_ZVAL(arguments[i]);
	}

	zval* return_value;
	MAKE_STD_ZVAL(return_value);
	zval function_name;
	ZVAL_STRING(&function_name, "OnUnsplit", 0);
	char* temp_string;
	char _wxResource[] = "wxResource";
	zval **tmp;
	int id_to_find;
	void* return_object;
	int rsrc_type;
	
	//Parameters for conversion
	object_init_ex(arguments[0], php_wxWindow_entry);
	add_property_resource(arguments[0], _wxResource, zend_list_insert(removed, le_wxWindow));
		
	#ifdef USE_WXPHP_DEBUG
	php_printf("Trying to call user defined method\n");
	#endif
	
	if(call_user_function(NULL, (zval**) &this->phpObj, &function_name, return_value, 1, arguments TSRMLS_CC) == FAILURE)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Invocation of user defined method failed\n");
		#endif
		
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Returning userspace value.\n");
		#endif
		
		return;
	}
	
	#ifdef USE_WXPHP_DEBUG
	php_printf("Calling original method\n");
	php_printf("===========================================\n\n");
	#endif
	
	//Call original method
	wxSplitterWindow::OnUnsplit(removed);

}
void php_wxStatusBar_destruction_handler(zend_rsrc_list_entry *rsrc TSRMLS_DC) 
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Obviate php_wxStatusBar_destruction_handler call on %s at line %i\n", zend_get_executed_filename(TSRMLS_C), zend_get_executed_lineno(TSRMLS_C));
	php_printf("===========================================\n\n");
	#endif
}
PHP_METHOD(php_wxStatusBar, __construct)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxStatusBar::__construct\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	
	//Parameters for overload 0
	zval* parent0 = 0;
	void* object_pointer0_0 = 0;
	long id0;
	long style0;
	char* name0;
	long name_len0;
	bool overload0_called = false;
	//Parameters for overload 1
	bool overload1_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 1  && arguments_received <= 4)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'z|lls' (&parent0, &id0, &style0, &name0, &name_len0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "z|lls", &parent0, &id0, &style0, &name0, &name_len0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(parent0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(parent0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 || (rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow))
					{
						goto overload1;
					}
				}
				else if(Z_TYPE_P(parent0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(parent0);
				}
				else if(Z_TYPE_P(parent0) != IS_NULL)
				{
						goto overload1;
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

	//Overload 1
	overload1:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload1_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer0_0)\n");
				#endif
				_this = new wxStatusBar_php((wxWindow*) object_pointer0_0);

				((wxStatusBar_php*) _this)->references.Initialize();
				((wxStatusBar_php*) _this)->references.AddReference(parent0);
				break;
			}
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer0_0, (wxWindowID) id0)\n");
				#endif
				_this = new wxStatusBar_php((wxWindow*) object_pointer0_0, (wxWindowID) id0);

				((wxStatusBar_php*) _this)->references.Initialize();
				((wxStatusBar_php*) _this)->references.AddReference(parent0);
				break;
			}
			case 3:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer0_0, (wxWindowID) id0, (long) style0)\n");
				#endif
				_this = new wxStatusBar_php((wxWindow*) object_pointer0_0, (wxWindowID) id0, (long) style0);

				((wxStatusBar_php*) _this)->references.Initialize();
				((wxStatusBar_php*) _this)->references.AddReference(parent0);
				break;
			}
			case 4:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer0_0, (wxWindowID) id0, (long) style0, wxString(name0, wxConvUTF8))\n");
				#endif
				_this = new wxStatusBar_php((wxWindow*) object_pointer0_0, (wxWindowID) id0, (long) style0, wxString(name0, wxConvUTF8));

				((wxStatusBar_php*) _this)->references.Initialize();
				((wxStatusBar_php*) _this)->references.AddReference(parent0);
				break;
			}
		}
	}

	
	if(overload1_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct()\n");
				#endif
				_this = new wxStatusBar_php();

				((wxStatusBar_php*) _this)->references.Initialize();
				break;
			}
		}
	}

		
	if(already_called)
	{
		long id_to_find = zend_list_insert(_this, le_wxStatusBar);
		
		add_property_resource(getThis(), _wxResource, id_to_find);
		
		MAKE_STD_ZVAL(((wxStatusBar_php*) _this)->evnArray);
		
		array_init(((wxStatusBar_php*) _this)->evnArray);
		
		((wxStatusBar_php*) _this)->phpObj = getThis();
		
		((wxStatusBar_php*) _this)->InitProperties();
		
		#ifdef ZTS 
		((wxStatusBar_php*) _this)->TSRMLS_C = TSRMLS_C;
		#endif
	}
	else
	{
		zend_error(E_ERROR, "Abstract type: failed to call a proper constructor");
	}
	
	#ifdef USE_WXPHP_DEBUG
		php_printf("===========================================\n\n");
	#endif
}
PHP_METHOD(php_wxStatusBar, SetMinHeight)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxStatusBar::SetMinHeight\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxStatusBar::SetMinHeight\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long height0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&height0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &height0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxStatusBar::SetMinHeight((int) height0)\n\n");
				#endif
				((wxStatusBar_php*)_this)->SetMinHeight((int) height0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxStatusBar, SetStatusText)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxStatusBar::SetStatusText\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxStatusBar::SetStatusText\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	char* text0;
	long text_len0;
	long i0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 1  && arguments_received <= 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 's|l' (&text0, &text_len0, &i0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "s|l", &text0, &text_len0, &i0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxStatusBar::SetStatusText(wxString(text0, wxConvUTF8))\n\n");
				#endif
				((wxStatusBar_php*)_this)->SetStatusText(wxString(text0, wxConvUTF8));


				return;
				break;
			}
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxStatusBar::SetStatusText(wxString(text0, wxConvUTF8), (int) i0)\n\n");
				#endif
				((wxStatusBar_php*)_this)->SetStatusText(wxString(text0, wxConvUTF8), (int) i0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxStatusBar, Create)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxStatusBar::Create\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxStatusBar::Create\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* parent0 = 0;
	void* object_pointer0_0 = 0;
	long id0;
	long style0;
	char* name0;
	long name_len0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 1  && arguments_received <= 4)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'z|lls' (&parent0, &id0, &style0, &name0, &name_len0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "z|lls", &parent0, &id0, &style0, &name0, &name_len0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(parent0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(parent0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 || (rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(parent0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(parent0);
				}
				else if(Z_TYPE_P(parent0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxStatusBar::Create((wxWindow*) object_pointer0_0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxStatusBar_php*)_this)->Create((wxWindow*) object_pointer0_0));

				references->AddReference(parent0);

				return;
				break;
			}
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxStatusBar::Create((wxWindow*) object_pointer0_0, (wxWindowID) id0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxStatusBar_php*)_this)->Create((wxWindow*) object_pointer0_0, (wxWindowID) id0));

				references->AddReference(parent0);

				return;
				break;
			}
			case 3:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxStatusBar::Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, (long) style0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxStatusBar_php*)_this)->Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, (long) style0));

				references->AddReference(parent0);

				return;
				break;
			}
			case 4:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxStatusBar::Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, (long) style0, wxString(name0, wxConvUTF8)))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxStatusBar_php*)_this)->Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, (long) style0, wxString(name0, wxConvUTF8)));

				references->AddReference(parent0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxStatusBar, GetBorders)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxStatusBar::GetBorders\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxStatusBar::GetBorders\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxStatusBar::GetBorders() to return new object\n\n");
				#endif
				wxSize value_to_return0;
				value_to_return0 = ((wxStatusBar_php*)_this)->GetBorders();
				void* ptr = safe_emalloc(1, sizeof(wxSize_php), 0);
				memcpy(ptr, &value_to_return0, sizeof(wxSize));
				object_init_ex(return_value, php_wxSize_entry);
				add_property_resource(return_value, "wxResource", zend_list_insert(ptr, le_wxSize));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxStatusBar, GetField)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxStatusBar::GetField\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxStatusBar::GetField\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long n0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&n0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &n0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxStatusBar::GetField((int) n0) to return object reference\n\n");
				#endif
				wxStatusBarPane_php* value_to_return1;
				value_to_return1 = (wxStatusBarPane_php*) &((wxStatusBar_php*)_this)->GetField((int) n0);

				if(value_to_return1->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return1->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxStatusBarPane_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return1, le_wxStatusBarPane));
				}

				if(value_to_return1 != _this && return_is_user_initialized){ //Prevent adding references to it self
					references->AddReference(return_value);
				}
				references->AddReference(return_value);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxStatusBar, GetFieldRect)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxStatusBar::GetFieldRect\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxStatusBar::GetFieldRect\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long i0;
	zval* rect0 = 0;
	void* object_pointer0_1 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'lO' (&i0, &rect0, php_wxRect_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "lO", &i0, &rect0, php_wxRect_entry ) == SUCCESS)
		{
			if(arguments_received >= 2){
				if(Z_TYPE_P(rect0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(rect0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_1 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_1 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(rect0) == IS_LONG)
				{
					object_pointer0_1 = Z_LVAL_P(rect0);
				}
				else if(Z_TYPE_P(rect0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxStatusBar::GetFieldRect((int) i0, *(wxRect*) object_pointer0_1))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxStatusBar_php*)_this)->GetFieldRect((int) i0, *(wxRect*) object_pointer0_1));

				references->AddReference(rect0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxStatusBar, GetFieldsCount)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxStatusBar::GetFieldsCount\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxStatusBar::GetFieldsCount\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxStatusBar::GetFieldsCount())\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxStatusBar_php*)_this)->GetFieldsCount());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxStatusBar, GetStatusStyle)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxStatusBar::GetStatusStyle\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxStatusBar::GetStatusStyle\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long n0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&n0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &n0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxStatusBar::GetStatusStyle((int) n0))\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxStatusBar_php*)_this)->GetStatusStyle((int) n0));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxStatusBar, GetStatusText)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxStatusBar::GetStatusText\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxStatusBar::GetStatusText\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long i0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 0  && arguments_received <= 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '|l' (&i0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "|l", &i0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_STRING(wxStatusBar::GetStatusText().fn_str(), 1)\n\n");
				#endif
				wxString value_to_return0;
				value_to_return0 = ((wxStatusBar_php*)_this)->GetStatusText();
				char* temp_string0;
				temp_string0 = (char*)malloc(sizeof(wxChar)*(value_to_return0.size()+1));
				strcpy (temp_string0, (const char *) value_to_return0.char_str() );
				ZVAL_STRING(return_value, temp_string0, 1);
				free(temp_string0);


				return;
				break;
			}
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_STRING(wxStatusBar::GetStatusText((int) i0).fn_str(), 1)\n\n");
				#endif
				wxString value_to_return1;
				value_to_return1 = ((wxStatusBar_php*)_this)->GetStatusText((int) i0);
				char* temp_string1;
				temp_string1 = (char*)malloc(sizeof(wxChar)*(value_to_return1.size()+1));
				strcpy (temp_string1, (const char *) value_to_return1.char_str() );
				ZVAL_STRING(return_value, temp_string1, 1);
				free(temp_string1);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxStatusBar, GetStatusWidth)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxStatusBar::GetStatusWidth\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxStatusBar::GetStatusWidth\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long n0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&n0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &n0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxStatusBar::GetStatusWidth((int) n0))\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxStatusBar_php*)_this)->GetStatusWidth((int) n0));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxStatusBar, PopStatusText)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxStatusBar::PopStatusText\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxStatusBar::PopStatusText\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long field0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 0  && arguments_received <= 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '|l' (&field0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "|l", &field0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxStatusBar::PopStatusText()\n\n");
				#endif
				((wxStatusBar_php*)_this)->PopStatusText();


				return;
				break;
			}
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxStatusBar::PopStatusText((int) field0)\n\n");
				#endif
				((wxStatusBar_php*)_this)->PopStatusText((int) field0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxStatusBar, PushStatusText)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxStatusBar::PushStatusText\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxStatusBar::PushStatusText\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	char* string0;
	long string_len0;
	long field0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 1  && arguments_received <= 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 's|l' (&string0, &string_len0, &field0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "s|l", &string0, &string_len0, &field0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxStatusBar::PushStatusText(wxString(string0, wxConvUTF8))\n\n");
				#endif
				((wxStatusBar_php*)_this)->PushStatusText(wxString(string0, wxConvUTF8));


				return;
				break;
			}
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxStatusBar::PushStatusText(wxString(string0, wxConvUTF8), (int) field0)\n\n");
				#endif
				((wxStatusBar_php*)_this)->PushStatusText(wxString(string0, wxConvUTF8), (int) field0);


				return;
				break;
			}
		}
	}

		
}
void php_wxToolBar_destruction_handler(zend_rsrc_list_entry *rsrc TSRMLS_DC) 
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Obviate php_wxToolBar_destruction_handler call on %s at line %i\n", zend_get_executed_filename(TSRMLS_C), zend_get_executed_lineno(TSRMLS_C));
	php_printf("===========================================\n\n");
	#endif
}
PHP_METHOD(php_wxToolBar, __construct)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::__construct\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	
	//Parameters for overload 0
	bool overload0_called = false;
	//Parameters for overload 1
	zval* parent1 = 0;
	void* object_pointer1_0 = 0;
	long id1;
	zval* pos1 = 0;
	void* object_pointer1_2 = 0;
	zval* size1 = 0;
	void* object_pointer1_3 = 0;
	long style1;
	char* name1;
	long name_len1;
	bool overload1_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

	//Overload 1
	overload1:
	if(!already_called && arguments_received >= 2  && arguments_received <= 6)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'zl|OOls' (&parent1, &id1, &pos1, php_wxPoint_entry, &size1, php_wxSize_entry, &style1, &name1, &name_len1)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "zl|OOls", &parent1, &id1, &pos1, php_wxPoint_entry, &size1, php_wxSize_entry, &style1, &name1, &name_len1 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(parent1) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(parent1), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer1_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer1_0 || (rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(parent1) == IS_LONG)
				{
					object_pointer1_0 = Z_LVAL_P(parent1);
				}
				else if(Z_TYPE_P(parent1) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 3){
				if(Z_TYPE_P(pos1) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(pos1), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer1_2 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer1_2 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(pos1) == IS_LONG)
				{
					object_pointer1_2 = Z_LVAL_P(pos1);
				}
				else if(Z_TYPE_P(pos1) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 4){
				if(Z_TYPE_P(size1) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(size1), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer1_3 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer1_3 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(size1) == IS_LONG)
				{
					object_pointer1_3 = Z_LVAL_P(size1);
				}
				else if(Z_TYPE_P(size1) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload1_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct()\n");
				#endif
				_this = new wxToolBar_php();

				((wxToolBar_php*) _this)->references.Initialize();
				break;
			}
		}
	}

	
	if(overload1_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer1_0, (wxWindowID) id1)\n");
				#endif
				_this = new wxToolBar_php((wxWindow*) object_pointer1_0, (wxWindowID) id1);

				((wxToolBar_php*) _this)->references.Initialize();
				((wxToolBar_php*) _this)->references.AddReference(parent1);
				break;
			}
			case 3:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2)\n");
				#endif
				_this = new wxToolBar_php((wxWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2);

				((wxToolBar_php*) _this)->references.Initialize();
				((wxToolBar_php*) _this)->references.AddReference(parent1);
				((wxToolBar_php*) _this)->references.AddReference(pos1);
				break;
			}
			case 4:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2, *(wxSize*) object_pointer1_3)\n");
				#endif
				_this = new wxToolBar_php((wxWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2, *(wxSize*) object_pointer1_3);

				((wxToolBar_php*) _this)->references.Initialize();
				((wxToolBar_php*) _this)->references.AddReference(parent1);
				((wxToolBar_php*) _this)->references.AddReference(pos1);
				((wxToolBar_php*) _this)->references.AddReference(size1);
				break;
			}
			case 5:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2, *(wxSize*) object_pointer1_3, (long) style1)\n");
				#endif
				_this = new wxToolBar_php((wxWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2, *(wxSize*) object_pointer1_3, (long) style1);

				((wxToolBar_php*) _this)->references.Initialize();
				((wxToolBar_php*) _this)->references.AddReference(parent1);
				((wxToolBar_php*) _this)->references.AddReference(pos1);
				((wxToolBar_php*) _this)->references.AddReference(size1);
				break;
			}
			case 6:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2, *(wxSize*) object_pointer1_3, (long) style1, wxString(name1, wxConvUTF8))\n");
				#endif
				_this = new wxToolBar_php((wxWindow*) object_pointer1_0, (wxWindowID) id1, *(wxPoint*) object_pointer1_2, *(wxSize*) object_pointer1_3, (long) style1, wxString(name1, wxConvUTF8));

				((wxToolBar_php*) _this)->references.Initialize();
				((wxToolBar_php*) _this)->references.AddReference(parent1);
				((wxToolBar_php*) _this)->references.AddReference(pos1);
				((wxToolBar_php*) _this)->references.AddReference(size1);
				break;
			}
		}
	}

		
	if(already_called)
	{
		long id_to_find = zend_list_insert(_this, le_wxToolBar);
		
		add_property_resource(getThis(), _wxResource, id_to_find);
		
		MAKE_STD_ZVAL(((wxToolBar_php*) _this)->evnArray);
		
		array_init(((wxToolBar_php*) _this)->evnArray);
		
		((wxToolBar_php*) _this)->phpObj = getThis();
		
		((wxToolBar_php*) _this)->InitProperties();
		
		#ifdef ZTS 
		((wxToolBar_php*) _this)->TSRMLS_C = TSRMLS_C;
		#endif
	}
	else
	{
		zend_error(E_ERROR, "Abstract type: failed to call a proper constructor");
	}
	
	#ifdef USE_WXPHP_DEBUG
		php_printf("===========================================\n\n");
	#endif
}
PHP_METHOD(php_wxToolBar, ToggleTool)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::ToggleTool\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::ToggleTool\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long toolId0;
	bool toggle0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'lb' (&toolId0, &toggle0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "lb", &toolId0, &toggle0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::ToggleTool((int) toolId0, toggle0)\n\n");
				#endif
				((wxToolBar_php*)_this)->ToggleTool((int) toolId0, toggle0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, SetToolShortHelp)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::SetToolShortHelp\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::SetToolShortHelp\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long toolId0;
	char* helpString0;
	long helpString_len0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'ls' (&toolId0, &helpString0, &helpString_len0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "ls", &toolId0, &helpString0, &helpString_len0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::SetToolShortHelp((int) toolId0, wxString(helpString0, wxConvUTF8))\n\n");
				#endif
				((wxToolBar_php*)_this)->SetToolShortHelp((int) toolId0, wxString(helpString0, wxConvUTF8));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, SetToolSeparation)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::SetToolSeparation\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::SetToolSeparation\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long separation0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&separation0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &separation0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::SetToolSeparation((int) separation0)\n\n");
				#endif
				((wxToolBar_php*)_this)->SetToolSeparation((int) separation0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, SetToolPacking)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::SetToolPacking\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::SetToolPacking\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long packing0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&packing0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &packing0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::SetToolPacking((int) packing0)\n\n");
				#endif
				((wxToolBar_php*)_this)->SetToolPacking((int) packing0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, SetToolNormalBitmap)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::SetToolNormalBitmap\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::SetToolNormalBitmap\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long id0;
	zval* bitmap0 = 0;
	void* object_pointer0_1 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'lO' (&id0, &bitmap0, php_wxBitmap_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "lO", &id0, &bitmap0, php_wxBitmap_entry ) == SUCCESS)
		{
			if(arguments_received >= 2){
				if(Z_TYPE_P(bitmap0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(bitmap0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_1 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_1 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(bitmap0) == IS_LONG)
				{
					object_pointer0_1 = Z_LVAL_P(bitmap0);
				}
				else if(Z_TYPE_P(bitmap0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::SetToolNormalBitmap((int) id0, *(wxBitmap*) object_pointer0_1)\n\n");
				#endif
				((wxToolBar_php*)_this)->SetToolNormalBitmap((int) id0, *(wxBitmap*) object_pointer0_1);

				references->AddReference(bitmap0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, SetToolLongHelp)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::SetToolLongHelp\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::SetToolLongHelp\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long toolId0;
	char* helpString0;
	long helpString_len0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'ls' (&toolId0, &helpString0, &helpString_len0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "ls", &toolId0, &helpString0, &helpString_len0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::SetToolLongHelp((int) toolId0, wxString(helpString0, wxConvUTF8))\n\n");
				#endif
				((wxToolBar_php*)_this)->SetToolLongHelp((int) toolId0, wxString(helpString0, wxConvUTF8));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, SetToolDisabledBitmap)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::SetToolDisabledBitmap\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::SetToolDisabledBitmap\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long id0;
	zval* bitmap0 = 0;
	void* object_pointer0_1 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'lO' (&id0, &bitmap0, php_wxBitmap_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "lO", &id0, &bitmap0, php_wxBitmap_entry ) == SUCCESS)
		{
			if(arguments_received >= 2){
				if(Z_TYPE_P(bitmap0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(bitmap0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_1 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_1 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(bitmap0) == IS_LONG)
				{
					object_pointer0_1 = Z_LVAL_P(bitmap0);
				}
				else if(Z_TYPE_P(bitmap0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::SetToolDisabledBitmap((int) id0, *(wxBitmap*) object_pointer0_1)\n\n");
				#endif
				((wxToolBar_php*)_this)->SetToolDisabledBitmap((int) id0, *(wxBitmap*) object_pointer0_1);

				references->AddReference(bitmap0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, SetToolClientData)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::SetToolClientData\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::SetToolClientData\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long id0;
	zval* clientData0 = 0;
	void* object_pointer0_1 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'lz' (&id0, &clientData0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "lz", &id0, &clientData0 ) == SUCCESS)
		{
			if(arguments_received >= 2){
				if(Z_TYPE_P(clientData0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(clientData0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_1 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_1 || (rsrc_type != le_wxEvtHandler && rsrc_type != le_wxWindow && rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow && rsrc_type != le_wxValidator && rsrc_type != le_wxTextValidator && rsrc_type != le_wxGenericValidator && rsrc_type != le_wxMenu && rsrc_type != le_wxAuiManager && rsrc_type != le_wxMouseEventsManager && rsrc_type != le_wxTimer && rsrc_type != le_wxEventBlocker && rsrc_type != le_wxProcess && rsrc_type != le_wxFileSystemWatcher && rsrc_type != le_wxTaskBarIcon && rsrc_type != le_wxNotificationMessage && rsrc_type != le_wxBitmapHandler && rsrc_type != le_wxImage && rsrc_type != le_wxSizer && rsrc_type != le_wxBoxSizer && rsrc_type != le_wxStaticBoxSizer && rsrc_type != le_wxWrapSizer && rsrc_type != le_wxStdDialogButtonSizer && rsrc_type != le_wxGridSizer && rsrc_type != le_wxFlexGridSizer && rsrc_type != le_wxGridBagSizer && rsrc_type != le_wxSizerItem && rsrc_type != le_wxGBSizerItem && rsrc_type != le_wxImageList && rsrc_type != le_wxDC && rsrc_type != le_wxWindowDC && rsrc_type != le_wxClientDC && rsrc_type != le_wxPaintDC && rsrc_type != le_wxScreenDC && rsrc_type != le_wxPostScriptDC && rsrc_type != le_wxPrinterDC && rsrc_type != le_wxMemoryDC && rsrc_type != le_wxBufferedDC && rsrc_type != le_wxBufferedPaintDC && rsrc_type != le_wxAutoBufferedPaintDC && rsrc_type != le_wxMirrorDC && rsrc_type != le_wxColour && rsrc_type != le_wxMenuItem && rsrc_type != le_wxEvent && rsrc_type != le_wxMenuEvent && rsrc_type != le_wxKeyEvent && rsrc_type != le_wxCommandEvent && rsrc_type != le_wxNotifyEvent && rsrc_type != le_wxTreeEvent && rsrc_type != le_wxBookCtrlEvent && rsrc_type != le_wxAuiNotebookEvent && rsrc_type != le_wxAuiToolBarEvent && rsrc_type != le_wxListEvent && rsrc_type != le_wxSpinEvent && rsrc_type != le_wxSplitterEvent && rsrc_type != le_wxSpinDoubleEvent && rsrc_type != le_wxGridSizeEvent && rsrc_type != le_wxWizardEvent && rsrc_type != le_wxGridEvent && rsrc_type != le_wxGridRangeSelectEvent && rsrc_type != le_wxDataViewEvent && rsrc_type != le_wxHeaderCtrlEvent && rsrc_type != le_wxRibbonBarEvent && rsrc_type != le_wxStyledTextEvent && rsrc_type != le_wxChildFocusEvent && rsrc_type != le_wxHtmlCellEvent && rsrc_type != le_wxHtmlLinkEvent && rsrc_type != le_wxHyperlinkEvent && rsrc_type != le_wxColourPickerEvent && rsrc_type != le_wxFontPickerEvent && rsrc_type != le_wxScrollEvent && rsrc_type != le_wxWindowModalDialogEvent && rsrc_type != le_wxDateEvent && rsrc_type != le_wxCalendarEvent && rsrc_type != le_wxWindowCreateEvent && rsrc_type != le_wxWindowDestroyEvent && rsrc_type != le_wxUpdateUIEvent && rsrc_type != le_wxHelpEvent && rsrc_type != le_wxGridEditorCreatedEvent && rsrc_type != le_wxCollapsiblePaneEvent && rsrc_type != le_wxClipboardTextEvent && rsrc_type != le_wxFileCtrlEvent && rsrc_type != le_wxSashEvent && rsrc_type != le_wxFileDirPickerEvent && rsrc_type != le_wxContextMenuEvent && rsrc_type != le_wxRibbonButtonBarEvent && rsrc_type != le_wxRibbonGalleryEvent && rsrc_type != le_wxCloseEvent && rsrc_type != le_wxActivateEvent && rsrc_type != le_wxAuiManagerEvent && rsrc_type != le_wxSizeEvent && rsrc_type != le_wxMouseEvent && rsrc_type != le_wxMoveEvent && rsrc_type != le_wxMouseCaptureLostEvent && rsrc_type != le_wxMouseCaptureChangedEvent && rsrc_type != le_wxTimerEvent && rsrc_type != le_wxThreadEvent && rsrc_type != le_wxScrollWinEvent && rsrc_type != le_wxSysColourChangedEvent && rsrc_type != le_wxProcessEvent && rsrc_type != le_wxEraseEvent && rsrc_type != le_wxSetCursorEvent && rsrc_type != le_wxIconizeEvent && rsrc_type != le_wxIdleEvent && rsrc_type != le_wxShowEvent && rsrc_type != le_wxPaintEvent && rsrc_type != le_wxPaletteChangedEvent && rsrc_type != le_wxInitDialogEvent && rsrc_type != le_wxMaximizeEvent && rsrc_type != le_wxNavigationKeyEvent && rsrc_type != le_wxFocusEvent && rsrc_type != le_wxFileSystemWatcherEvent && rsrc_type != le_wxDisplayChangedEvent && rsrc_type != le_wxCalculateLayoutEvent && rsrc_type != le_wxDropFilesEvent && rsrc_type != le_wxQueryLayoutInfoEvent && rsrc_type != le_wxTaskBarIconEvent && rsrc_type != le_wxAcceleratorTable && rsrc_type != le_wxGDIObject && rsrc_type != le_wxBitmap && rsrc_type != le_wxPalette && rsrc_type != le_wxIcon && rsrc_type != le_wxFont && rsrc_type != le_wxAnimation && rsrc_type != le_wxIconBundle && rsrc_type != le_wxCursor && rsrc_type != le_wxRegion && rsrc_type != le_wxPen && rsrc_type != le_wxBrush && rsrc_type != le_wxArtProvider && rsrc_type != le_wxHtmlCell && rsrc_type != le_wxHtmlContainerCell && rsrc_type != le_wxHtmlColourCell && rsrc_type != le_wxHtmlWidgetCell && rsrc_type != le_wxHtmlEasyPrinting && rsrc_type != le_wxHtmlLinkInfo && rsrc_type != le_wxFindReplaceData && rsrc_type != le_wxSound && rsrc_type != le_wxFileSystem && rsrc_type != le_wxFileSystemHandler && rsrc_type != le_wxMask && rsrc_type != le_wxToolTip && rsrc_type != le_wxGraphicsRenderer && rsrc_type != le_wxLayoutConstraints && rsrc_type != le_wxFSFile && rsrc_type != le_wxColourData && rsrc_type != le_wxFontData && rsrc_type != le_wxToolBarToolBase && rsrc_type != le_wxGridTableBase && rsrc_type != le_wxDataViewRenderer && rsrc_type != le_wxDataViewBitmapRenderer && rsrc_type != le_wxDataViewChoiceRenderer && rsrc_type != le_wxDataViewCustomRenderer && rsrc_type != le_wxDataViewSpinRenderer && rsrc_type != le_wxDataViewDateRenderer && rsrc_type != le_wxDataViewIconTextRenderer && rsrc_type != le_wxDataViewProgressRenderer && rsrc_type != le_wxDataViewTextRenderer && rsrc_type != le_wxDataViewToggleRenderer && rsrc_type != le_wxDataViewIconText && rsrc_type != le_wxVariant && rsrc_type != le_wxClipboard && rsrc_type != le_wxConfigBase && rsrc_type != le_wxFileConfig && rsrc_type != le_wxXmlResource && rsrc_type != le_wxPageSetupDialogData && rsrc_type != le_wxPrintDialogData && rsrc_type != le_wxPrintData && rsrc_type != le_wxPrintPreview && rsrc_type != le_wxPrinter && rsrc_type != le_wxPrintout && rsrc_type != le_wxHtmlPrintout && rsrc_type != le_wxHtmlDCRenderer && rsrc_type != le_wxHtmlFilter && rsrc_type != le_wxHtmlHelpData && rsrc_type != le_wxHtmlTagHandler && rsrc_type != le_wxHtmlWinTagHandler && rsrc_type != le_wxModule && rsrc_type != le_wxHtmlTagsModule && rsrc_type != le_wxImageHandler && rsrc_type != le_wxXmlResourceHandler && rsrc_type != le_wxXmlDocument && rsrc_type != le_wxLayoutAlgorithm && rsrc_type != le_wxFileHistory))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(clientData0) == IS_LONG)
				{
					object_pointer0_1 = Z_LVAL_P(clientData0);
				}
				else if(Z_TYPE_P(clientData0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::SetToolClientData((int) id0, (wxObject*) object_pointer0_1)\n\n");
				#endif
				((wxToolBar_php*)_this)->SetToolClientData((int) id0, (wxObject*) object_pointer0_1);

				references->AddReference(clientData0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, SetToolBitmapSize)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::SetToolBitmapSize\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::SetToolBitmapSize\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* size0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&size0, php_wxSize_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &size0, php_wxSize_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(size0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(size0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(size0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(size0);
				}
				else if(Z_TYPE_P(size0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::SetToolBitmapSize(*(wxSize*) object_pointer0_0)\n\n");
				#endif
				((wxToolBar_php*)_this)->SetToolBitmapSize(*(wxSize*) object_pointer0_0);

				references->AddReference(size0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, SetMargins)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::SetMargins\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::SetMargins\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* size0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&size0, php_wxSize_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &size0, php_wxSize_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(size0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(size0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(size0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(size0);
				}
				else if(Z_TYPE_P(size0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::SetMargins(*(wxSize*) object_pointer0_0)\n\n");
				#endif
				((wxToolBar_php*)_this)->SetMargins(*(wxSize*) object_pointer0_0);

				references->AddReference(size0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, SetDropdownMenu)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::SetDropdownMenu\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::SetDropdownMenu\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long id0;
	zval* menu0 = 0;
	void* object_pointer0_1 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'lz' (&id0, &menu0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "lz", &id0, &menu0 ) == SUCCESS)
		{
			if(arguments_received >= 2){
				if(Z_TYPE_P(menu0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(menu0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_1 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_1 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(menu0) == IS_LONG)
				{
					object_pointer0_1 = Z_LVAL_P(menu0);
				}
				else if(Z_TYPE_P(menu0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxToolBar::SetDropdownMenu((int) id0, (wxMenu*) object_pointer0_1))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxToolBar_php*)_this)->SetDropdownMenu((int) id0, (wxMenu*) object_pointer0_1));

				references->AddReference(menu0);

				return;
				break;
			}
		}
	}

		
}
void wxToolBar_php::OnRightClick(int toolId, long x, long y)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking virtual wxToolBar::OnRightClick\n");
	php_printf("===========================================\n");
	#endif
	
	zval *arguments[3];
	
	//Initilize arguments array
	for(int i=0; i<3; i++)
	{
		MAKE_STD_ZVAL(arguments[i]);
	}

	zval* return_value;
	MAKE_STD_ZVAL(return_value);
	zval function_name;
	ZVAL_STRING(&function_name, "OnRightClick", 0);
	char* temp_string;
	char _wxResource[] = "wxResource";
	zval **tmp;
	int id_to_find;
	void* return_object;
	int rsrc_type;
	
	//Parameters for conversion
	ZVAL_LONG(arguments[0], toolId);
	ZVAL_LONG(arguments[1], x);
	ZVAL_LONG(arguments[2], y);
		
	#ifdef USE_WXPHP_DEBUG
	php_printf("Trying to call user defined method\n");
	#endif
	
	if(call_user_function(NULL, (zval**) &this->phpObj, &function_name, return_value, 3, arguments TSRMLS_CC) == FAILURE)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Invocation of user defined method failed\n");
		#endif
		
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Returning userspace value.\n");
		#endif
		
		return;
	}
	
	#ifdef USE_WXPHP_DEBUG
	php_printf("Calling original method\n");
	php_printf("===========================================\n\n");
	#endif
	
	//Call original method
	wxToolBar::OnRightClick(toolId, x, y);

}
void wxToolBar_php::OnMouseEnter(int toolId)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking virtual wxToolBar::OnMouseEnter\n");
	php_printf("===========================================\n");
	#endif
	
	zval *arguments[1];
	
	//Initilize arguments array
	for(int i=0; i<1; i++)
	{
		MAKE_STD_ZVAL(arguments[i]);
	}

	zval* return_value;
	MAKE_STD_ZVAL(return_value);
	zval function_name;
	ZVAL_STRING(&function_name, "OnMouseEnter", 0);
	char* temp_string;
	char _wxResource[] = "wxResource";
	zval **tmp;
	int id_to_find;
	void* return_object;
	int rsrc_type;
	
	//Parameters for conversion
	ZVAL_LONG(arguments[0], toolId);
		
	#ifdef USE_WXPHP_DEBUG
	php_printf("Trying to call user defined method\n");
	#endif
	
	if(call_user_function(NULL, (zval**) &this->phpObj, &function_name, return_value, 1, arguments TSRMLS_CC) == FAILURE)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Invocation of user defined method failed\n");
		#endif
		
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Returning userspace value.\n");
		#endif
		
		return;
	}
	
	#ifdef USE_WXPHP_DEBUG
	php_printf("Calling original method\n");
	php_printf("===========================================\n\n");
	#endif
	
	//Call original method
	wxToolBar::OnMouseEnter(toolId);

}
bool wxToolBar_php::OnLeftClick(int toolId, bool toggleDown)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking virtual wxToolBar::OnLeftClick\n");
	php_printf("===========================================\n");
	#endif
	
	zval *arguments[2];
	
	//Initilize arguments array
	for(int i=0; i<2; i++)
	{
		MAKE_STD_ZVAL(arguments[i]);
	}

	zval* return_value;
	MAKE_STD_ZVAL(return_value);
	zval function_name;
	ZVAL_STRING(&function_name, "OnLeftClick", 0);
	char* temp_string;
	char _wxResource[] = "wxResource";
	zval **tmp;
	int id_to_find;
	void* return_object;
	int rsrc_type;
	
	//Parameters for conversion
	ZVAL_LONG(arguments[0], toolId);
	ZVAL_BOOL(arguments[1], toggleDown);
		
	#ifdef USE_WXPHP_DEBUG
	php_printf("Trying to call user defined method\n");
	#endif
	
	if(call_user_function(NULL, (zval**) &this->phpObj, &function_name, return_value, 2, arguments TSRMLS_CC) == FAILURE)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Invocation of user defined method failed\n");
		#endif
		
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Returning userspace value.\n");
		#endif
		
		return Z_BVAL_P(return_value);
	}
	
	#ifdef USE_WXPHP_DEBUG
	php_printf("Calling original method\n");
	php_printf("===========================================\n\n");
	#endif
	
	//Call original method
	return wxToolBar::OnLeftClick(toolId, toggleDown);

}
PHP_METHOD(php_wxToolBar, GetToolsCount)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::GetToolsCount\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::GetToolsCount\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxToolBar::GetToolsCount())\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxToolBar_php*)_this)->GetToolsCount());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, GetToolState)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::GetToolState\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::GetToolState\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long toolId0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&toolId0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &toolId0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxToolBar::GetToolState((int) toolId0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxToolBar_php*)_this)->GetToolState((int) toolId0));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, GetToolSize)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::GetToolSize\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::GetToolSize\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::GetToolSize() to return new object\n\n");
				#endif
				wxSize value_to_return0;
				value_to_return0 = ((wxToolBar_php*)_this)->GetToolSize();
				void* ptr = safe_emalloc(1, sizeof(wxSize_php), 0);
				memcpy(ptr, &value_to_return0, sizeof(wxSize));
				object_init_ex(return_value, php_wxSize_entry);
				add_property_resource(return_value, "wxResource", zend_list_insert(ptr, le_wxSize));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, GetToolShortHelp)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::GetToolShortHelp\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::GetToolShortHelp\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long toolId0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&toolId0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &toolId0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_STRING(wxToolBar::GetToolShortHelp((int) toolId0).fn_str(), 1)\n\n");
				#endif
				wxString value_to_return1;
				value_to_return1 = ((wxToolBar_php*)_this)->GetToolShortHelp((int) toolId0);
				char* temp_string1;
				temp_string1 = (char*)malloc(sizeof(wxChar)*(value_to_return1.size()+1));
				strcpy (temp_string1, (const char *) value_to_return1.char_str() );
				ZVAL_STRING(return_value, temp_string1, 1);
				free(temp_string1);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, GetToolSeparation)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::GetToolSeparation\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::GetToolSeparation\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxToolBar::GetToolSeparation())\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxToolBar_php*)_this)->GetToolSeparation());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, GetToolPos)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::GetToolPos\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::GetToolPos\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long toolId0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&toolId0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &toolId0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxToolBar::GetToolPos((int) toolId0))\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxToolBar_php*)_this)->GetToolPos((int) toolId0));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, GetToolPacking)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::GetToolPacking\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::GetToolPacking\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxToolBar::GetToolPacking())\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxToolBar_php*)_this)->GetToolPacking());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, GetToolLongHelp)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::GetToolLongHelp\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::GetToolLongHelp\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long toolId0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&toolId0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &toolId0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_STRING(wxToolBar::GetToolLongHelp((int) toolId0).fn_str(), 1)\n\n");
				#endif
				wxString value_to_return1;
				value_to_return1 = ((wxToolBar_php*)_this)->GetToolLongHelp((int) toolId0);
				char* temp_string1;
				temp_string1 = (char*)malloc(sizeof(wxChar)*(value_to_return1.size()+1));
				strcpy (temp_string1, (const char *) value_to_return1.char_str() );
				ZVAL_STRING(return_value, temp_string1, 1);
				free(temp_string1);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, GetToolEnabled)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::GetToolEnabled\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::GetToolEnabled\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long toolId0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&toolId0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &toolId0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxToolBar::GetToolEnabled((int) toolId0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxToolBar_php*)_this)->GetToolEnabled((int) toolId0));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, GetToolClientData)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::GetToolClientData\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::GetToolClientData\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long toolId0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&toolId0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &toolId0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::GetToolClientData((int) toolId0) to return object pointer\n\n");
				#endif
				wxObject_php* value_to_return1;
				value_to_return1 = (wxObject_php*) ((wxToolBar_php*)_this)->GetToolClientData((int) toolId0);

				if(value_to_return1 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return1->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return1->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxObject_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return1, le_wxObject));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return1 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, GetToolBitmapSize)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::GetToolBitmapSize\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::GetToolBitmapSize\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::GetToolBitmapSize() to return new object\n\n");
				#endif
				wxSize value_to_return0;
				value_to_return0 = ((wxToolBar_php*)_this)->GetToolBitmapSize();
				void* ptr = safe_emalloc(1, sizeof(wxSize_php), 0);
				memcpy(ptr, &value_to_return0, sizeof(wxSize));
				object_init_ex(return_value, php_wxSize_entry);
				add_property_resource(return_value, "wxResource", zend_list_insert(ptr, le_wxSize));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, GetMargins)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::GetMargins\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::GetMargins\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::GetMargins() to return new object\n\n");
				#endif
				wxSize value_to_return0;
				value_to_return0 = ((wxToolBar_php*)_this)->GetMargins();
				void* ptr = safe_emalloc(1, sizeof(wxSize_php), 0);
				memcpy(ptr, &value_to_return0, sizeof(wxSize));
				object_init_ex(return_value, php_wxSize_entry);
				add_property_resource(return_value, "wxResource", zend_list_insert(ptr, le_wxSize));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, FindControl)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::FindControl\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::FindControl\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long id0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&id0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &id0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::FindControl((int) id0) to return object pointer\n\n");
				#endif
				wxControl_php* value_to_return1;
				value_to_return1 = (wxControl_php*) ((wxToolBar_php*)_this)->FindControl((int) id0);

				if(value_to_return1 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return1->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return1->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxControl_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return1, le_wxControl));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return1 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, EnableTool)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::EnableTool\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::EnableTool\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long toolId0;
	bool enable0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'lb' (&toolId0, &enable0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "lb", &toolId0, &enable0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::EnableTool((int) toolId0, enable0)\n\n");
				#endif
				((wxToolBar_php*)_this)->EnableTool((int) toolId0, enable0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, DeleteToolByPos)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::DeleteToolByPos\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::DeleteToolByPos\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long pos0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&pos0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &pos0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxToolBar::DeleteToolByPos((size_t) pos0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxToolBar_php*)_this)->DeleteToolByPos((size_t) pos0));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, DeleteTool)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::DeleteTool\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::DeleteTool\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long toolId0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&toolId0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &toolId0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxToolBar::DeleteTool((int) toolId0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxToolBar_php*)_this)->DeleteTool((int) toolId0));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, ClearTools)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::ClearTools\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::ClearTools\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::ClearTools()\n\n");
				#endif
				((wxToolBar_php*)_this)->ClearTools();


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, AddCheckTool)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::AddCheckTool\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::AddCheckTool\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long toolId0;
	char* label0;
	long label_len0;
	zval* bitmap10 = 0;
	void* object_pointer0_2 = 0;
	zval* bmpDisabled0 = 0;
	void* object_pointer0_3 = 0;
	char* shortHelp0;
	long shortHelp_len0;
	char* longHelp0;
	long longHelp_len0;
	zval* clientData0 = 0;
	void* object_pointer0_6 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 3  && arguments_received <= 7)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'lsO|Ossz' (&toolId0, &label0, &label_len0, &bitmap10, php_wxBitmap_entry, &bmpDisabled0, php_wxBitmap_entry, &shortHelp0, &shortHelp_len0, &longHelp0, &longHelp_len0, &clientData0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "lsO|Ossz", &toolId0, &label0, &label_len0, &bitmap10, php_wxBitmap_entry, &bmpDisabled0, php_wxBitmap_entry, &shortHelp0, &shortHelp_len0, &longHelp0, &longHelp_len0, &clientData0 ) == SUCCESS)
		{
			if(arguments_received >= 3){
				if(Z_TYPE_P(bitmap10) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(bitmap10), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_2 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_2 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(bitmap10) == IS_LONG)
				{
					object_pointer0_2 = Z_LVAL_P(bitmap10);
				}
				else if(Z_TYPE_P(bitmap10) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 4){
				if(Z_TYPE_P(bmpDisabled0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(bmpDisabled0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_3 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_3 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(bmpDisabled0) == IS_LONG)
				{
					object_pointer0_3 = Z_LVAL_P(bmpDisabled0);
				}
				else if(Z_TYPE_P(bmpDisabled0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 7){
				if(Z_TYPE_P(clientData0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(clientData0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_6 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_6 || (rsrc_type != le_wxEvtHandler && rsrc_type != le_wxWindow && rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow && rsrc_type != le_wxValidator && rsrc_type != le_wxTextValidator && rsrc_type != le_wxGenericValidator && rsrc_type != le_wxMenu && rsrc_type != le_wxAuiManager && rsrc_type != le_wxMouseEventsManager && rsrc_type != le_wxTimer && rsrc_type != le_wxEventBlocker && rsrc_type != le_wxProcess && rsrc_type != le_wxFileSystemWatcher && rsrc_type != le_wxTaskBarIcon && rsrc_type != le_wxNotificationMessage && rsrc_type != le_wxBitmapHandler && rsrc_type != le_wxImage && rsrc_type != le_wxSizer && rsrc_type != le_wxBoxSizer && rsrc_type != le_wxStaticBoxSizer && rsrc_type != le_wxWrapSizer && rsrc_type != le_wxStdDialogButtonSizer && rsrc_type != le_wxGridSizer && rsrc_type != le_wxFlexGridSizer && rsrc_type != le_wxGridBagSizer && rsrc_type != le_wxSizerItem && rsrc_type != le_wxGBSizerItem && rsrc_type != le_wxImageList && rsrc_type != le_wxDC && rsrc_type != le_wxWindowDC && rsrc_type != le_wxClientDC && rsrc_type != le_wxPaintDC && rsrc_type != le_wxScreenDC && rsrc_type != le_wxPostScriptDC && rsrc_type != le_wxPrinterDC && rsrc_type != le_wxMemoryDC && rsrc_type != le_wxBufferedDC && rsrc_type != le_wxBufferedPaintDC && rsrc_type != le_wxAutoBufferedPaintDC && rsrc_type != le_wxMirrorDC && rsrc_type != le_wxColour && rsrc_type != le_wxMenuItem && rsrc_type != le_wxEvent && rsrc_type != le_wxMenuEvent && rsrc_type != le_wxKeyEvent && rsrc_type != le_wxCommandEvent && rsrc_type != le_wxNotifyEvent && rsrc_type != le_wxTreeEvent && rsrc_type != le_wxBookCtrlEvent && rsrc_type != le_wxAuiNotebookEvent && rsrc_type != le_wxAuiToolBarEvent && rsrc_type != le_wxListEvent && rsrc_type != le_wxSpinEvent && rsrc_type != le_wxSplitterEvent && rsrc_type != le_wxSpinDoubleEvent && rsrc_type != le_wxGridSizeEvent && rsrc_type != le_wxWizardEvent && rsrc_type != le_wxGridEvent && rsrc_type != le_wxGridRangeSelectEvent && rsrc_type != le_wxDataViewEvent && rsrc_type != le_wxHeaderCtrlEvent && rsrc_type != le_wxRibbonBarEvent && rsrc_type != le_wxStyledTextEvent && rsrc_type != le_wxChildFocusEvent && rsrc_type != le_wxHtmlCellEvent && rsrc_type != le_wxHtmlLinkEvent && rsrc_type != le_wxHyperlinkEvent && rsrc_type != le_wxColourPickerEvent && rsrc_type != le_wxFontPickerEvent && rsrc_type != le_wxScrollEvent && rsrc_type != le_wxWindowModalDialogEvent && rsrc_type != le_wxDateEvent && rsrc_type != le_wxCalendarEvent && rsrc_type != le_wxWindowCreateEvent && rsrc_type != le_wxWindowDestroyEvent && rsrc_type != le_wxUpdateUIEvent && rsrc_type != le_wxHelpEvent && rsrc_type != le_wxGridEditorCreatedEvent && rsrc_type != le_wxCollapsiblePaneEvent && rsrc_type != le_wxClipboardTextEvent && rsrc_type != le_wxFileCtrlEvent && rsrc_type != le_wxSashEvent && rsrc_type != le_wxFileDirPickerEvent && rsrc_type != le_wxContextMenuEvent && rsrc_type != le_wxRibbonButtonBarEvent && rsrc_type != le_wxRibbonGalleryEvent && rsrc_type != le_wxCloseEvent && rsrc_type != le_wxActivateEvent && rsrc_type != le_wxAuiManagerEvent && rsrc_type != le_wxSizeEvent && rsrc_type != le_wxMouseEvent && rsrc_type != le_wxMoveEvent && rsrc_type != le_wxMouseCaptureLostEvent && rsrc_type != le_wxMouseCaptureChangedEvent && rsrc_type != le_wxTimerEvent && rsrc_type != le_wxThreadEvent && rsrc_type != le_wxScrollWinEvent && rsrc_type != le_wxSysColourChangedEvent && rsrc_type != le_wxProcessEvent && rsrc_type != le_wxEraseEvent && rsrc_type != le_wxSetCursorEvent && rsrc_type != le_wxIconizeEvent && rsrc_type != le_wxIdleEvent && rsrc_type != le_wxShowEvent && rsrc_type != le_wxPaintEvent && rsrc_type != le_wxPaletteChangedEvent && rsrc_type != le_wxInitDialogEvent && rsrc_type != le_wxMaximizeEvent && rsrc_type != le_wxNavigationKeyEvent && rsrc_type != le_wxFocusEvent && rsrc_type != le_wxFileSystemWatcherEvent && rsrc_type != le_wxDisplayChangedEvent && rsrc_type != le_wxCalculateLayoutEvent && rsrc_type != le_wxDropFilesEvent && rsrc_type != le_wxQueryLayoutInfoEvent && rsrc_type != le_wxTaskBarIconEvent && rsrc_type != le_wxAcceleratorTable && rsrc_type != le_wxGDIObject && rsrc_type != le_wxBitmap && rsrc_type != le_wxPalette && rsrc_type != le_wxIcon && rsrc_type != le_wxFont && rsrc_type != le_wxAnimation && rsrc_type != le_wxIconBundle && rsrc_type != le_wxCursor && rsrc_type != le_wxRegion && rsrc_type != le_wxPen && rsrc_type != le_wxBrush && rsrc_type != le_wxArtProvider && rsrc_type != le_wxHtmlCell && rsrc_type != le_wxHtmlContainerCell && rsrc_type != le_wxHtmlColourCell && rsrc_type != le_wxHtmlWidgetCell && rsrc_type != le_wxHtmlEasyPrinting && rsrc_type != le_wxHtmlLinkInfo && rsrc_type != le_wxFindReplaceData && rsrc_type != le_wxSound && rsrc_type != le_wxFileSystem && rsrc_type != le_wxFileSystemHandler && rsrc_type != le_wxMask && rsrc_type != le_wxToolTip && rsrc_type != le_wxGraphicsRenderer && rsrc_type != le_wxLayoutConstraints && rsrc_type != le_wxFSFile && rsrc_type != le_wxColourData && rsrc_type != le_wxFontData && rsrc_type != le_wxToolBarToolBase && rsrc_type != le_wxGridTableBase && rsrc_type != le_wxDataViewRenderer && rsrc_type != le_wxDataViewBitmapRenderer && rsrc_type != le_wxDataViewChoiceRenderer && rsrc_type != le_wxDataViewCustomRenderer && rsrc_type != le_wxDataViewSpinRenderer && rsrc_type != le_wxDataViewDateRenderer && rsrc_type != le_wxDataViewIconTextRenderer && rsrc_type != le_wxDataViewProgressRenderer && rsrc_type != le_wxDataViewTextRenderer && rsrc_type != le_wxDataViewToggleRenderer && rsrc_type != le_wxDataViewIconText && rsrc_type != le_wxVariant && rsrc_type != le_wxClipboard && rsrc_type != le_wxConfigBase && rsrc_type != le_wxFileConfig && rsrc_type != le_wxXmlResource && rsrc_type != le_wxPageSetupDialogData && rsrc_type != le_wxPrintDialogData && rsrc_type != le_wxPrintData && rsrc_type != le_wxPrintPreview && rsrc_type != le_wxPrinter && rsrc_type != le_wxPrintout && rsrc_type != le_wxHtmlPrintout && rsrc_type != le_wxHtmlDCRenderer && rsrc_type != le_wxHtmlFilter && rsrc_type != le_wxHtmlHelpData && rsrc_type != le_wxHtmlTagHandler && rsrc_type != le_wxHtmlWinTagHandler && rsrc_type != le_wxModule && rsrc_type != le_wxHtmlTagsModule && rsrc_type != le_wxImageHandler && rsrc_type != le_wxXmlResourceHandler && rsrc_type != le_wxXmlDocument && rsrc_type != le_wxLayoutAlgorithm && rsrc_type != le_wxFileHistory))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(clientData0) == IS_LONG)
				{
					object_pointer0_6 = Z_LVAL_P(clientData0);
				}
				else if(Z_TYPE_P(clientData0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 3:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::AddCheckTool((int) toolId0, wxString(label0, wxConvUTF8), *(wxBitmap*) object_pointer0_2) to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return3;
				value_to_return3 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->AddCheckTool((int) toolId0, wxString(label0, wxConvUTF8), *(wxBitmap*) object_pointer0_2);

				if(value_to_return3 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return3->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return3->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return3, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return3 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}

				references->AddReference(bitmap10);

				return;
				break;
			}
			case 4:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::AddCheckTool((int) toolId0, wxString(label0, wxConvUTF8), *(wxBitmap*) object_pointer0_2, *(wxBitmap*) object_pointer0_3) to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return4;
				value_to_return4 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->AddCheckTool((int) toolId0, wxString(label0, wxConvUTF8), *(wxBitmap*) object_pointer0_2, *(wxBitmap*) object_pointer0_3);

				if(value_to_return4 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return4->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return4->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return4, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return4 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}

				references->AddReference(bitmap10);
				references->AddReference(bmpDisabled0);

				return;
				break;
			}
			case 5:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::AddCheckTool((int) toolId0, wxString(label0, wxConvUTF8), *(wxBitmap*) object_pointer0_2, *(wxBitmap*) object_pointer0_3, wxString(shortHelp0, wxConvUTF8)) to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return5;
				value_to_return5 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->AddCheckTool((int) toolId0, wxString(label0, wxConvUTF8), *(wxBitmap*) object_pointer0_2, *(wxBitmap*) object_pointer0_3, wxString(shortHelp0, wxConvUTF8));

				if(value_to_return5 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return5->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return5->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return5, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return5 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}

				references->AddReference(bitmap10);
				references->AddReference(bmpDisabled0);

				return;
				break;
			}
			case 6:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::AddCheckTool((int) toolId0, wxString(label0, wxConvUTF8), *(wxBitmap*) object_pointer0_2, *(wxBitmap*) object_pointer0_3, wxString(shortHelp0, wxConvUTF8), wxString(longHelp0, wxConvUTF8)) to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return6;
				value_to_return6 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->AddCheckTool((int) toolId0, wxString(label0, wxConvUTF8), *(wxBitmap*) object_pointer0_2, *(wxBitmap*) object_pointer0_3, wxString(shortHelp0, wxConvUTF8), wxString(longHelp0, wxConvUTF8));

				if(value_to_return6 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return6->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return6->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return6, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return6 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}

				references->AddReference(bitmap10);
				references->AddReference(bmpDisabled0);

				return;
				break;
			}
			case 7:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::AddCheckTool((int) toolId0, wxString(label0, wxConvUTF8), *(wxBitmap*) object_pointer0_2, *(wxBitmap*) object_pointer0_3, wxString(shortHelp0, wxConvUTF8), wxString(longHelp0, wxConvUTF8), (wxObject*) object_pointer0_6) to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return7;
				value_to_return7 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->AddCheckTool((int) toolId0, wxString(label0, wxConvUTF8), *(wxBitmap*) object_pointer0_2, *(wxBitmap*) object_pointer0_3, wxString(shortHelp0, wxConvUTF8), wxString(longHelp0, wxConvUTF8), (wxObject*) object_pointer0_6);

				if(value_to_return7 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return7->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return7->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return7, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return7 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}

				references->AddReference(bitmap10);
				references->AddReference(bmpDisabled0);
				references->AddReference(clientData0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, AddControl)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::AddControl\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::AddControl\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* control0 = 0;
	void* object_pointer0_0 = 0;
	char* label0;
	long label_len0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 1  && arguments_received <= 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'z|s' (&control0, &label0, &label_len0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "z|s", &control0, &label0, &label_len0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(control0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(control0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 || (rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(control0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(control0);
				}
				else if(Z_TYPE_P(control0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::AddControl((wxControl*) object_pointer0_0) to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return1;
				value_to_return1 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->AddControl((wxControl*) object_pointer0_0);

				if(value_to_return1 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return1->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return1->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return1, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return1 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}

				references->AddReference(control0);

				return;
				break;
			}
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::AddControl((wxControl*) object_pointer0_0, wxString(label0, wxConvUTF8)) to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return2;
				value_to_return2 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->AddControl((wxControl*) object_pointer0_0, wxString(label0, wxConvUTF8));

				if(value_to_return2 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return2->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return2->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return2, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return2 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}

				references->AddReference(control0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, AddRadioTool)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::AddRadioTool\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::AddRadioTool\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long toolId0;
	char* label0;
	long label_len0;
	zval* bitmap10 = 0;
	void* object_pointer0_2 = 0;
	zval* bmpDisabled0 = 0;
	void* object_pointer0_3 = 0;
	char* shortHelp0;
	long shortHelp_len0;
	char* longHelp0;
	long longHelp_len0;
	zval* clientData0 = 0;
	void* object_pointer0_6 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 3  && arguments_received <= 7)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'lsO|Ossz' (&toolId0, &label0, &label_len0, &bitmap10, php_wxBitmap_entry, &bmpDisabled0, php_wxBitmap_entry, &shortHelp0, &shortHelp_len0, &longHelp0, &longHelp_len0, &clientData0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "lsO|Ossz", &toolId0, &label0, &label_len0, &bitmap10, php_wxBitmap_entry, &bmpDisabled0, php_wxBitmap_entry, &shortHelp0, &shortHelp_len0, &longHelp0, &longHelp_len0, &clientData0 ) == SUCCESS)
		{
			if(arguments_received >= 3){
				if(Z_TYPE_P(bitmap10) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(bitmap10), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_2 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_2 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(bitmap10) == IS_LONG)
				{
					object_pointer0_2 = Z_LVAL_P(bitmap10);
				}
				else if(Z_TYPE_P(bitmap10) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 4){
				if(Z_TYPE_P(bmpDisabled0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(bmpDisabled0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_3 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_3 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(bmpDisabled0) == IS_LONG)
				{
					object_pointer0_3 = Z_LVAL_P(bmpDisabled0);
				}
				else if(Z_TYPE_P(bmpDisabled0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 7){
				if(Z_TYPE_P(clientData0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(clientData0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_6 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_6 || (rsrc_type != le_wxEvtHandler && rsrc_type != le_wxWindow && rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow && rsrc_type != le_wxValidator && rsrc_type != le_wxTextValidator && rsrc_type != le_wxGenericValidator && rsrc_type != le_wxMenu && rsrc_type != le_wxAuiManager && rsrc_type != le_wxMouseEventsManager && rsrc_type != le_wxTimer && rsrc_type != le_wxEventBlocker && rsrc_type != le_wxProcess && rsrc_type != le_wxFileSystemWatcher && rsrc_type != le_wxTaskBarIcon && rsrc_type != le_wxNotificationMessage && rsrc_type != le_wxBitmapHandler && rsrc_type != le_wxImage && rsrc_type != le_wxSizer && rsrc_type != le_wxBoxSizer && rsrc_type != le_wxStaticBoxSizer && rsrc_type != le_wxWrapSizer && rsrc_type != le_wxStdDialogButtonSizer && rsrc_type != le_wxGridSizer && rsrc_type != le_wxFlexGridSizer && rsrc_type != le_wxGridBagSizer && rsrc_type != le_wxSizerItem && rsrc_type != le_wxGBSizerItem && rsrc_type != le_wxImageList && rsrc_type != le_wxDC && rsrc_type != le_wxWindowDC && rsrc_type != le_wxClientDC && rsrc_type != le_wxPaintDC && rsrc_type != le_wxScreenDC && rsrc_type != le_wxPostScriptDC && rsrc_type != le_wxPrinterDC && rsrc_type != le_wxMemoryDC && rsrc_type != le_wxBufferedDC && rsrc_type != le_wxBufferedPaintDC && rsrc_type != le_wxAutoBufferedPaintDC && rsrc_type != le_wxMirrorDC && rsrc_type != le_wxColour && rsrc_type != le_wxMenuItem && rsrc_type != le_wxEvent && rsrc_type != le_wxMenuEvent && rsrc_type != le_wxKeyEvent && rsrc_type != le_wxCommandEvent && rsrc_type != le_wxNotifyEvent && rsrc_type != le_wxTreeEvent && rsrc_type != le_wxBookCtrlEvent && rsrc_type != le_wxAuiNotebookEvent && rsrc_type != le_wxAuiToolBarEvent && rsrc_type != le_wxListEvent && rsrc_type != le_wxSpinEvent && rsrc_type != le_wxSplitterEvent && rsrc_type != le_wxSpinDoubleEvent && rsrc_type != le_wxGridSizeEvent && rsrc_type != le_wxWizardEvent && rsrc_type != le_wxGridEvent && rsrc_type != le_wxGridRangeSelectEvent && rsrc_type != le_wxDataViewEvent && rsrc_type != le_wxHeaderCtrlEvent && rsrc_type != le_wxRibbonBarEvent && rsrc_type != le_wxStyledTextEvent && rsrc_type != le_wxChildFocusEvent && rsrc_type != le_wxHtmlCellEvent && rsrc_type != le_wxHtmlLinkEvent && rsrc_type != le_wxHyperlinkEvent && rsrc_type != le_wxColourPickerEvent && rsrc_type != le_wxFontPickerEvent && rsrc_type != le_wxScrollEvent && rsrc_type != le_wxWindowModalDialogEvent && rsrc_type != le_wxDateEvent && rsrc_type != le_wxCalendarEvent && rsrc_type != le_wxWindowCreateEvent && rsrc_type != le_wxWindowDestroyEvent && rsrc_type != le_wxUpdateUIEvent && rsrc_type != le_wxHelpEvent && rsrc_type != le_wxGridEditorCreatedEvent && rsrc_type != le_wxCollapsiblePaneEvent && rsrc_type != le_wxClipboardTextEvent && rsrc_type != le_wxFileCtrlEvent && rsrc_type != le_wxSashEvent && rsrc_type != le_wxFileDirPickerEvent && rsrc_type != le_wxContextMenuEvent && rsrc_type != le_wxRibbonButtonBarEvent && rsrc_type != le_wxRibbonGalleryEvent && rsrc_type != le_wxCloseEvent && rsrc_type != le_wxActivateEvent && rsrc_type != le_wxAuiManagerEvent && rsrc_type != le_wxSizeEvent && rsrc_type != le_wxMouseEvent && rsrc_type != le_wxMoveEvent && rsrc_type != le_wxMouseCaptureLostEvent && rsrc_type != le_wxMouseCaptureChangedEvent && rsrc_type != le_wxTimerEvent && rsrc_type != le_wxThreadEvent && rsrc_type != le_wxScrollWinEvent && rsrc_type != le_wxSysColourChangedEvent && rsrc_type != le_wxProcessEvent && rsrc_type != le_wxEraseEvent && rsrc_type != le_wxSetCursorEvent && rsrc_type != le_wxIconizeEvent && rsrc_type != le_wxIdleEvent && rsrc_type != le_wxShowEvent && rsrc_type != le_wxPaintEvent && rsrc_type != le_wxPaletteChangedEvent && rsrc_type != le_wxInitDialogEvent && rsrc_type != le_wxMaximizeEvent && rsrc_type != le_wxNavigationKeyEvent && rsrc_type != le_wxFocusEvent && rsrc_type != le_wxFileSystemWatcherEvent && rsrc_type != le_wxDisplayChangedEvent && rsrc_type != le_wxCalculateLayoutEvent && rsrc_type != le_wxDropFilesEvent && rsrc_type != le_wxQueryLayoutInfoEvent && rsrc_type != le_wxTaskBarIconEvent && rsrc_type != le_wxAcceleratorTable && rsrc_type != le_wxGDIObject && rsrc_type != le_wxBitmap && rsrc_type != le_wxPalette && rsrc_type != le_wxIcon && rsrc_type != le_wxFont && rsrc_type != le_wxAnimation && rsrc_type != le_wxIconBundle && rsrc_type != le_wxCursor && rsrc_type != le_wxRegion && rsrc_type != le_wxPen && rsrc_type != le_wxBrush && rsrc_type != le_wxArtProvider && rsrc_type != le_wxHtmlCell && rsrc_type != le_wxHtmlContainerCell && rsrc_type != le_wxHtmlColourCell && rsrc_type != le_wxHtmlWidgetCell && rsrc_type != le_wxHtmlEasyPrinting && rsrc_type != le_wxHtmlLinkInfo && rsrc_type != le_wxFindReplaceData && rsrc_type != le_wxSound && rsrc_type != le_wxFileSystem && rsrc_type != le_wxFileSystemHandler && rsrc_type != le_wxMask && rsrc_type != le_wxToolTip && rsrc_type != le_wxGraphicsRenderer && rsrc_type != le_wxLayoutConstraints && rsrc_type != le_wxFSFile && rsrc_type != le_wxColourData && rsrc_type != le_wxFontData && rsrc_type != le_wxToolBarToolBase && rsrc_type != le_wxGridTableBase && rsrc_type != le_wxDataViewRenderer && rsrc_type != le_wxDataViewBitmapRenderer && rsrc_type != le_wxDataViewChoiceRenderer && rsrc_type != le_wxDataViewCustomRenderer && rsrc_type != le_wxDataViewSpinRenderer && rsrc_type != le_wxDataViewDateRenderer && rsrc_type != le_wxDataViewIconTextRenderer && rsrc_type != le_wxDataViewProgressRenderer && rsrc_type != le_wxDataViewTextRenderer && rsrc_type != le_wxDataViewToggleRenderer && rsrc_type != le_wxDataViewIconText && rsrc_type != le_wxVariant && rsrc_type != le_wxClipboard && rsrc_type != le_wxConfigBase && rsrc_type != le_wxFileConfig && rsrc_type != le_wxXmlResource && rsrc_type != le_wxPageSetupDialogData && rsrc_type != le_wxPrintDialogData && rsrc_type != le_wxPrintData && rsrc_type != le_wxPrintPreview && rsrc_type != le_wxPrinter && rsrc_type != le_wxPrintout && rsrc_type != le_wxHtmlPrintout && rsrc_type != le_wxHtmlDCRenderer && rsrc_type != le_wxHtmlFilter && rsrc_type != le_wxHtmlHelpData && rsrc_type != le_wxHtmlTagHandler && rsrc_type != le_wxHtmlWinTagHandler && rsrc_type != le_wxModule && rsrc_type != le_wxHtmlTagsModule && rsrc_type != le_wxImageHandler && rsrc_type != le_wxXmlResourceHandler && rsrc_type != le_wxXmlDocument && rsrc_type != le_wxLayoutAlgorithm && rsrc_type != le_wxFileHistory))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(clientData0) == IS_LONG)
				{
					object_pointer0_6 = Z_LVAL_P(clientData0);
				}
				else if(Z_TYPE_P(clientData0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 3:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::AddRadioTool((int) toolId0, wxString(label0, wxConvUTF8), *(wxBitmap*) object_pointer0_2) to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return3;
				value_to_return3 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->AddRadioTool((int) toolId0, wxString(label0, wxConvUTF8), *(wxBitmap*) object_pointer0_2);

				if(value_to_return3 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return3->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return3->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return3, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return3 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}

				references->AddReference(bitmap10);

				return;
				break;
			}
			case 4:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::AddRadioTool((int) toolId0, wxString(label0, wxConvUTF8), *(wxBitmap*) object_pointer0_2, *(wxBitmap*) object_pointer0_3) to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return4;
				value_to_return4 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->AddRadioTool((int) toolId0, wxString(label0, wxConvUTF8), *(wxBitmap*) object_pointer0_2, *(wxBitmap*) object_pointer0_3);

				if(value_to_return4 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return4->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return4->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return4, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return4 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}

				references->AddReference(bitmap10);
				references->AddReference(bmpDisabled0);

				return;
				break;
			}
			case 5:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::AddRadioTool((int) toolId0, wxString(label0, wxConvUTF8), *(wxBitmap*) object_pointer0_2, *(wxBitmap*) object_pointer0_3, wxString(shortHelp0, wxConvUTF8)) to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return5;
				value_to_return5 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->AddRadioTool((int) toolId0, wxString(label0, wxConvUTF8), *(wxBitmap*) object_pointer0_2, *(wxBitmap*) object_pointer0_3, wxString(shortHelp0, wxConvUTF8));

				if(value_to_return5 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return5->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return5->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return5, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return5 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}

				references->AddReference(bitmap10);
				references->AddReference(bmpDisabled0);

				return;
				break;
			}
			case 6:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::AddRadioTool((int) toolId0, wxString(label0, wxConvUTF8), *(wxBitmap*) object_pointer0_2, *(wxBitmap*) object_pointer0_3, wxString(shortHelp0, wxConvUTF8), wxString(longHelp0, wxConvUTF8)) to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return6;
				value_to_return6 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->AddRadioTool((int) toolId0, wxString(label0, wxConvUTF8), *(wxBitmap*) object_pointer0_2, *(wxBitmap*) object_pointer0_3, wxString(shortHelp0, wxConvUTF8), wxString(longHelp0, wxConvUTF8));

				if(value_to_return6 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return6->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return6->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return6, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return6 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}

				references->AddReference(bitmap10);
				references->AddReference(bmpDisabled0);

				return;
				break;
			}
			case 7:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::AddRadioTool((int) toolId0, wxString(label0, wxConvUTF8), *(wxBitmap*) object_pointer0_2, *(wxBitmap*) object_pointer0_3, wxString(shortHelp0, wxConvUTF8), wxString(longHelp0, wxConvUTF8), (wxObject*) object_pointer0_6) to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return7;
				value_to_return7 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->AddRadioTool((int) toolId0, wxString(label0, wxConvUTF8), *(wxBitmap*) object_pointer0_2, *(wxBitmap*) object_pointer0_3, wxString(shortHelp0, wxConvUTF8), wxString(longHelp0, wxConvUTF8), (wxObject*) object_pointer0_6);

				if(value_to_return7 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return7->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return7->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return7, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return7 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}

				references->AddReference(bitmap10);
				references->AddReference(bmpDisabled0);
				references->AddReference(clientData0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, AddSeparator)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::AddSeparator\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::AddSeparator\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::AddSeparator() to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return0;
				value_to_return0 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->AddSeparator();

				if(value_to_return0 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return0->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return0->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return0, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return0 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, AddStretchableSpace)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::AddStretchableSpace\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::AddStretchableSpace\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::AddStretchableSpace() to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return0;
				value_to_return0 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->AddStretchableSpace();

				if(value_to_return0 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return0->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return0->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return0, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return0 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, AddTool)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::AddTool\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::AddTool\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long toolId0;
	char* label0;
	long label_len0;
	zval* bitmap0 = 0;
	void* object_pointer0_2 = 0;
	char* shortHelp0;
	long shortHelp_len0;
	long kind0;
	bool overload0_called = false;
	//Parameters for overload 1
	long toolId1;
	char* label1;
	long label_len1;
	zval* bitmap1 = 0;
	void* object_pointer1_2 = 0;
	zval* bmpDisabled1 = 0;
	void* object_pointer1_3 = 0;
	long kind1;
	char* shortHelpString1;
	long shortHelpString_len1;
	char* longHelpString1;
	long longHelpString_len1;
	zval* clientData1 = 0;
	void* object_pointer1_7 = 0;
	bool overload1_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 3  && arguments_received <= 5)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'lsO|sl' (&toolId0, &label0, &label_len0, &bitmap0, php_wxBitmap_entry, &shortHelp0, &shortHelp_len0, &kind0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "lsO|sl", &toolId0, &label0, &label_len0, &bitmap0, php_wxBitmap_entry, &shortHelp0, &shortHelp_len0, &kind0 ) == SUCCESS)
		{
			if(arguments_received >= 3){
				if(Z_TYPE_P(bitmap0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(bitmap0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_2 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_2 )
					{
						goto overload1;
					}
				}
				else if(Z_TYPE_P(bitmap0) == IS_LONG)
				{
					object_pointer0_2 = Z_LVAL_P(bitmap0);
				}
				else if(Z_TYPE_P(bitmap0) != IS_NULL)
				{
						goto overload1;
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

	//Overload 1
	overload1:
	if(!already_called && arguments_received >= 3  && arguments_received <= 8)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'lsO|Olssz' (&toolId1, &label1, &label_len1, &bitmap1, php_wxBitmap_entry, &bmpDisabled1, php_wxBitmap_entry, &kind1, &shortHelpString1, &shortHelpString_len1, &longHelpString1, &longHelpString_len1, &clientData1)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "lsO|Olssz", &toolId1, &label1, &label_len1, &bitmap1, php_wxBitmap_entry, &bmpDisabled1, php_wxBitmap_entry, &kind1, &shortHelpString1, &shortHelpString_len1, &longHelpString1, &longHelpString_len1, &clientData1 ) == SUCCESS)
		{
			if(arguments_received >= 3){
				if(Z_TYPE_P(bitmap1) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(bitmap1), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer1_2 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer1_2 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(bitmap1) == IS_LONG)
				{
					object_pointer1_2 = Z_LVAL_P(bitmap1);
				}
				else if(Z_TYPE_P(bitmap1) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 4){
				if(Z_TYPE_P(bmpDisabled1) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(bmpDisabled1), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer1_3 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer1_3 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(bmpDisabled1) == IS_LONG)
				{
					object_pointer1_3 = Z_LVAL_P(bmpDisabled1);
				}
				else if(Z_TYPE_P(bmpDisabled1) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 8){
				if(Z_TYPE_P(clientData1) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(clientData1), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer1_7 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer1_7 || (rsrc_type != le_wxEvtHandler && rsrc_type != le_wxWindow && rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow && rsrc_type != le_wxValidator && rsrc_type != le_wxTextValidator && rsrc_type != le_wxGenericValidator && rsrc_type != le_wxMenu && rsrc_type != le_wxAuiManager && rsrc_type != le_wxMouseEventsManager && rsrc_type != le_wxTimer && rsrc_type != le_wxEventBlocker && rsrc_type != le_wxProcess && rsrc_type != le_wxFileSystemWatcher && rsrc_type != le_wxTaskBarIcon && rsrc_type != le_wxNotificationMessage && rsrc_type != le_wxBitmapHandler && rsrc_type != le_wxImage && rsrc_type != le_wxSizer && rsrc_type != le_wxBoxSizer && rsrc_type != le_wxStaticBoxSizer && rsrc_type != le_wxWrapSizer && rsrc_type != le_wxStdDialogButtonSizer && rsrc_type != le_wxGridSizer && rsrc_type != le_wxFlexGridSizer && rsrc_type != le_wxGridBagSizer && rsrc_type != le_wxSizerItem && rsrc_type != le_wxGBSizerItem && rsrc_type != le_wxImageList && rsrc_type != le_wxDC && rsrc_type != le_wxWindowDC && rsrc_type != le_wxClientDC && rsrc_type != le_wxPaintDC && rsrc_type != le_wxScreenDC && rsrc_type != le_wxPostScriptDC && rsrc_type != le_wxPrinterDC && rsrc_type != le_wxMemoryDC && rsrc_type != le_wxBufferedDC && rsrc_type != le_wxBufferedPaintDC && rsrc_type != le_wxAutoBufferedPaintDC && rsrc_type != le_wxMirrorDC && rsrc_type != le_wxColour && rsrc_type != le_wxMenuItem && rsrc_type != le_wxEvent && rsrc_type != le_wxMenuEvent && rsrc_type != le_wxKeyEvent && rsrc_type != le_wxCommandEvent && rsrc_type != le_wxNotifyEvent && rsrc_type != le_wxTreeEvent && rsrc_type != le_wxBookCtrlEvent && rsrc_type != le_wxAuiNotebookEvent && rsrc_type != le_wxAuiToolBarEvent && rsrc_type != le_wxListEvent && rsrc_type != le_wxSpinEvent && rsrc_type != le_wxSplitterEvent && rsrc_type != le_wxSpinDoubleEvent && rsrc_type != le_wxGridSizeEvent && rsrc_type != le_wxWizardEvent && rsrc_type != le_wxGridEvent && rsrc_type != le_wxGridRangeSelectEvent && rsrc_type != le_wxDataViewEvent && rsrc_type != le_wxHeaderCtrlEvent && rsrc_type != le_wxRibbonBarEvent && rsrc_type != le_wxStyledTextEvent && rsrc_type != le_wxChildFocusEvent && rsrc_type != le_wxHtmlCellEvent && rsrc_type != le_wxHtmlLinkEvent && rsrc_type != le_wxHyperlinkEvent && rsrc_type != le_wxColourPickerEvent && rsrc_type != le_wxFontPickerEvent && rsrc_type != le_wxScrollEvent && rsrc_type != le_wxWindowModalDialogEvent && rsrc_type != le_wxDateEvent && rsrc_type != le_wxCalendarEvent && rsrc_type != le_wxWindowCreateEvent && rsrc_type != le_wxWindowDestroyEvent && rsrc_type != le_wxUpdateUIEvent && rsrc_type != le_wxHelpEvent && rsrc_type != le_wxGridEditorCreatedEvent && rsrc_type != le_wxCollapsiblePaneEvent && rsrc_type != le_wxClipboardTextEvent && rsrc_type != le_wxFileCtrlEvent && rsrc_type != le_wxSashEvent && rsrc_type != le_wxFileDirPickerEvent && rsrc_type != le_wxContextMenuEvent && rsrc_type != le_wxRibbonButtonBarEvent && rsrc_type != le_wxRibbonGalleryEvent && rsrc_type != le_wxCloseEvent && rsrc_type != le_wxActivateEvent && rsrc_type != le_wxAuiManagerEvent && rsrc_type != le_wxSizeEvent && rsrc_type != le_wxMouseEvent && rsrc_type != le_wxMoveEvent && rsrc_type != le_wxMouseCaptureLostEvent && rsrc_type != le_wxMouseCaptureChangedEvent && rsrc_type != le_wxTimerEvent && rsrc_type != le_wxThreadEvent && rsrc_type != le_wxScrollWinEvent && rsrc_type != le_wxSysColourChangedEvent && rsrc_type != le_wxProcessEvent && rsrc_type != le_wxEraseEvent && rsrc_type != le_wxSetCursorEvent && rsrc_type != le_wxIconizeEvent && rsrc_type != le_wxIdleEvent && rsrc_type != le_wxShowEvent && rsrc_type != le_wxPaintEvent && rsrc_type != le_wxPaletteChangedEvent && rsrc_type != le_wxInitDialogEvent && rsrc_type != le_wxMaximizeEvent && rsrc_type != le_wxNavigationKeyEvent && rsrc_type != le_wxFocusEvent && rsrc_type != le_wxFileSystemWatcherEvent && rsrc_type != le_wxDisplayChangedEvent && rsrc_type != le_wxCalculateLayoutEvent && rsrc_type != le_wxDropFilesEvent && rsrc_type != le_wxQueryLayoutInfoEvent && rsrc_type != le_wxTaskBarIconEvent && rsrc_type != le_wxAcceleratorTable && rsrc_type != le_wxGDIObject && rsrc_type != le_wxBitmap && rsrc_type != le_wxPalette && rsrc_type != le_wxIcon && rsrc_type != le_wxFont && rsrc_type != le_wxAnimation && rsrc_type != le_wxIconBundle && rsrc_type != le_wxCursor && rsrc_type != le_wxRegion && rsrc_type != le_wxPen && rsrc_type != le_wxBrush && rsrc_type != le_wxArtProvider && rsrc_type != le_wxHtmlCell && rsrc_type != le_wxHtmlContainerCell && rsrc_type != le_wxHtmlColourCell && rsrc_type != le_wxHtmlWidgetCell && rsrc_type != le_wxHtmlEasyPrinting && rsrc_type != le_wxHtmlLinkInfo && rsrc_type != le_wxFindReplaceData && rsrc_type != le_wxSound && rsrc_type != le_wxFileSystem && rsrc_type != le_wxFileSystemHandler && rsrc_type != le_wxMask && rsrc_type != le_wxToolTip && rsrc_type != le_wxGraphicsRenderer && rsrc_type != le_wxLayoutConstraints && rsrc_type != le_wxFSFile && rsrc_type != le_wxColourData && rsrc_type != le_wxFontData && rsrc_type != le_wxToolBarToolBase && rsrc_type != le_wxGridTableBase && rsrc_type != le_wxDataViewRenderer && rsrc_type != le_wxDataViewBitmapRenderer && rsrc_type != le_wxDataViewChoiceRenderer && rsrc_type != le_wxDataViewCustomRenderer && rsrc_type != le_wxDataViewSpinRenderer && rsrc_type != le_wxDataViewDateRenderer && rsrc_type != le_wxDataViewIconTextRenderer && rsrc_type != le_wxDataViewProgressRenderer && rsrc_type != le_wxDataViewTextRenderer && rsrc_type != le_wxDataViewToggleRenderer && rsrc_type != le_wxDataViewIconText && rsrc_type != le_wxVariant && rsrc_type != le_wxClipboard && rsrc_type != le_wxConfigBase && rsrc_type != le_wxFileConfig && rsrc_type != le_wxXmlResource && rsrc_type != le_wxPageSetupDialogData && rsrc_type != le_wxPrintDialogData && rsrc_type != le_wxPrintData && rsrc_type != le_wxPrintPreview && rsrc_type != le_wxPrinter && rsrc_type != le_wxPrintout && rsrc_type != le_wxHtmlPrintout && rsrc_type != le_wxHtmlDCRenderer && rsrc_type != le_wxHtmlFilter && rsrc_type != le_wxHtmlHelpData && rsrc_type != le_wxHtmlTagHandler && rsrc_type != le_wxHtmlWinTagHandler && rsrc_type != le_wxModule && rsrc_type != le_wxHtmlTagsModule && rsrc_type != le_wxImageHandler && rsrc_type != le_wxXmlResourceHandler && rsrc_type != le_wxXmlDocument && rsrc_type != le_wxLayoutAlgorithm && rsrc_type != le_wxFileHistory))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(clientData1) == IS_LONG)
				{
					object_pointer1_7 = Z_LVAL_P(clientData1);
				}
				else if(Z_TYPE_P(clientData1) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload1_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 3:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::AddTool((int) toolId0, wxString(label0, wxConvUTF8), *(wxBitmap*) object_pointer0_2) to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return3;
				value_to_return3 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->AddTool((int) toolId0, wxString(label0, wxConvUTF8), *(wxBitmap*) object_pointer0_2);

				if(value_to_return3 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return3->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return3->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return3, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return3 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}

				references->AddReference(bitmap0);

				return;
				break;
			}
			case 4:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::AddTool((int) toolId0, wxString(label0, wxConvUTF8), *(wxBitmap*) object_pointer0_2, wxString(shortHelp0, wxConvUTF8)) to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return4;
				value_to_return4 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->AddTool((int) toolId0, wxString(label0, wxConvUTF8), *(wxBitmap*) object_pointer0_2, wxString(shortHelp0, wxConvUTF8));

				if(value_to_return4 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return4->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return4->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return4, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return4 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}

				references->AddReference(bitmap0);

				return;
				break;
			}
			case 5:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::AddTool((int) toolId0, wxString(label0, wxConvUTF8), *(wxBitmap*) object_pointer0_2, wxString(shortHelp0, wxConvUTF8), (wxItemKind) kind0) to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return5;
				value_to_return5 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->AddTool((int) toolId0, wxString(label0, wxConvUTF8), *(wxBitmap*) object_pointer0_2, wxString(shortHelp0, wxConvUTF8), (wxItemKind) kind0);

				if(value_to_return5 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return5->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return5->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return5, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return5 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}

				references->AddReference(bitmap0);

				return;
				break;
			}
		}
	}

	
	if(overload1_called)
	{
		switch(arguments_received)
		{
			case 3:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::AddTool((int) toolId1, wxString(label1, wxConvUTF8), *(wxBitmap*) object_pointer1_2) to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return3;
				value_to_return3 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->AddTool((int) toolId1, wxString(label1, wxConvUTF8), *(wxBitmap*) object_pointer1_2);

				if(value_to_return3 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return3->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return3->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return3, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return3 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}

				references->AddReference(bitmap1);

				return;
				break;
			}
			case 4:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::AddTool((int) toolId1, wxString(label1, wxConvUTF8), *(wxBitmap*) object_pointer1_2, *(wxBitmap*) object_pointer1_3) to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return4;
				value_to_return4 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->AddTool((int) toolId1, wxString(label1, wxConvUTF8), *(wxBitmap*) object_pointer1_2, *(wxBitmap*) object_pointer1_3);

				if(value_to_return4 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return4->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return4->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return4, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return4 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}

				references->AddReference(bitmap1);
				references->AddReference(bmpDisabled1);

				return;
				break;
			}
			case 5:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::AddTool((int) toolId1, wxString(label1, wxConvUTF8), *(wxBitmap*) object_pointer1_2, *(wxBitmap*) object_pointer1_3, (wxItemKind) kind1) to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return5;
				value_to_return5 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->AddTool((int) toolId1, wxString(label1, wxConvUTF8), *(wxBitmap*) object_pointer1_2, *(wxBitmap*) object_pointer1_3, (wxItemKind) kind1);

				if(value_to_return5 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return5->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return5->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return5, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return5 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}

				references->AddReference(bitmap1);
				references->AddReference(bmpDisabled1);

				return;
				break;
			}
			case 6:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::AddTool((int) toolId1, wxString(label1, wxConvUTF8), *(wxBitmap*) object_pointer1_2, *(wxBitmap*) object_pointer1_3, (wxItemKind) kind1, wxString(shortHelpString1, wxConvUTF8)) to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return6;
				value_to_return6 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->AddTool((int) toolId1, wxString(label1, wxConvUTF8), *(wxBitmap*) object_pointer1_2, *(wxBitmap*) object_pointer1_3, (wxItemKind) kind1, wxString(shortHelpString1, wxConvUTF8));

				if(value_to_return6 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return6->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return6->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return6, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return6 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}

				references->AddReference(bitmap1);
				references->AddReference(bmpDisabled1);

				return;
				break;
			}
			case 7:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::AddTool((int) toolId1, wxString(label1, wxConvUTF8), *(wxBitmap*) object_pointer1_2, *(wxBitmap*) object_pointer1_3, (wxItemKind) kind1, wxString(shortHelpString1, wxConvUTF8), wxString(longHelpString1, wxConvUTF8)) to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return7;
				value_to_return7 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->AddTool((int) toolId1, wxString(label1, wxConvUTF8), *(wxBitmap*) object_pointer1_2, *(wxBitmap*) object_pointer1_3, (wxItemKind) kind1, wxString(shortHelpString1, wxConvUTF8), wxString(longHelpString1, wxConvUTF8));

				if(value_to_return7 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return7->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return7->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return7, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return7 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}

				references->AddReference(bitmap1);
				references->AddReference(bmpDisabled1);

				return;
				break;
			}
			case 8:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::AddTool((int) toolId1, wxString(label1, wxConvUTF8), *(wxBitmap*) object_pointer1_2, *(wxBitmap*) object_pointer1_3, (wxItemKind) kind1, wxString(shortHelpString1, wxConvUTF8), wxString(longHelpString1, wxConvUTF8), (wxObject*) object_pointer1_7) to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return8;
				value_to_return8 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->AddTool((int) toolId1, wxString(label1, wxConvUTF8), *(wxBitmap*) object_pointer1_2, *(wxBitmap*) object_pointer1_3, (wxItemKind) kind1, wxString(shortHelpString1, wxConvUTF8), wxString(longHelpString1, wxConvUTF8), (wxObject*) object_pointer1_7);

				if(value_to_return8 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return8->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return8->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return8, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return8 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}

				references->AddReference(bitmap1);
				references->AddReference(bmpDisabled1);
				references->AddReference(clientData1);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, FindById)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::FindById\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::FindById\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long id0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&id0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &id0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::FindById((int) id0) to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return1;
				value_to_return1 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->FindById((int) id0);

				if(value_to_return1 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return1->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return1->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return1, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return1 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, FindToolForPosition)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::FindToolForPosition\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::FindToolForPosition\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long x0;
	long y0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'll' (&x0, &y0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "ll", &x0, &y0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::FindToolForPosition((wxCoord) x0, (wxCoord) y0) to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return2;
				value_to_return2 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->FindToolForPosition((wxCoord) x0, (wxCoord) y0);

				if(value_to_return2 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return2->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return2->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return2, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return2 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, GetToolByPos)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::GetToolByPos\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::GetToolByPos\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long pos0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&pos0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &pos0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::GetToolByPos((int) pos0) to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return1;
				value_to_return1 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->GetToolByPos((int) pos0);

				if(value_to_return1 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return1->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return1->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return1, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return1 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, InsertControl)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::InsertControl\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::InsertControl\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long pos0;
	zval* control0 = 0;
	void* object_pointer0_1 = 0;
	char* label0;
	long label_len0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 2  && arguments_received <= 3)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'lz|s' (&pos0, &control0, &label0, &label_len0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "lz|s", &pos0, &control0, &label0, &label_len0 ) == SUCCESS)
		{
			if(arguments_received >= 2){
				if(Z_TYPE_P(control0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(control0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_1 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_1 || (rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(control0) == IS_LONG)
				{
					object_pointer0_1 = Z_LVAL_P(control0);
				}
				else if(Z_TYPE_P(control0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::InsertControl((size_t) pos0, (wxControl*) object_pointer0_1) to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return2;
				value_to_return2 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->InsertControl((size_t) pos0, (wxControl*) object_pointer0_1);

				if(value_to_return2 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return2->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return2->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return2, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return2 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}

				references->AddReference(control0);

				return;
				break;
			}
			case 3:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::InsertControl((size_t) pos0, (wxControl*) object_pointer0_1, wxString(label0, wxConvUTF8)) to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return3;
				value_to_return3 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->InsertControl((size_t) pos0, (wxControl*) object_pointer0_1, wxString(label0, wxConvUTF8));

				if(value_to_return3 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return3->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return3->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return3, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return3 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}

				references->AddReference(control0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, InsertSeparator)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::InsertSeparator\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::InsertSeparator\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long pos0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&pos0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &pos0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::InsertSeparator((size_t) pos0) to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return1;
				value_to_return1 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->InsertSeparator((size_t) pos0);

				if(value_to_return1 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return1->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return1->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return1, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return1 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, InsertStretchableSpace)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::InsertStretchableSpace\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::InsertStretchableSpace\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long pos0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&pos0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &pos0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::InsertStretchableSpace((size_t) pos0) to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return1;
				value_to_return1 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->InsertStretchableSpace((size_t) pos0);

				if(value_to_return1 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return1->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return1->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return1, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return1 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, InsertTool)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::InsertTool\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::InsertTool\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long pos0;
	long toolId0;
	zval* bitmap10 = 0;
	void* object_pointer0_2 = 0;
	zval* bitmap20 = 0;
	void* object_pointer0_3 = 0;
	bool isToggle0;
	zval* clientData0 = 0;
	void* object_pointer0_5 = 0;
	char* shortHelpString0;
	long shortHelpString_len0;
	char* longHelpString0;
	long longHelpString_len0;
	bool overload0_called = false;
	//Parameters for overload 1
	long pos1;
	zval* tool1 = 0;
	void* object_pointer1_1 = 0;
	bool overload1_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 3  && arguments_received <= 8)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'llO|Obzss' (&pos0, &toolId0, &bitmap10, php_wxBitmap_entry, &bitmap20, php_wxBitmap_entry, &isToggle0, &clientData0, &shortHelpString0, &shortHelpString_len0, &longHelpString0, &longHelpString_len0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "llO|Obzss", &pos0, &toolId0, &bitmap10, php_wxBitmap_entry, &bitmap20, php_wxBitmap_entry, &isToggle0, &clientData0, &shortHelpString0, &shortHelpString_len0, &longHelpString0, &longHelpString_len0 ) == SUCCESS)
		{
			if(arguments_received >= 3){
				if(Z_TYPE_P(bitmap10) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(bitmap10), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_2 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_2 )
					{
						goto overload1;
					}
				}
				else if(Z_TYPE_P(bitmap10) == IS_LONG)
				{
					object_pointer0_2 = Z_LVAL_P(bitmap10);
				}
				else if(Z_TYPE_P(bitmap10) != IS_NULL)
				{
						goto overload1;
				}
			}

			if(arguments_received >= 4){
				if(Z_TYPE_P(bitmap20) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(bitmap20), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_3 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_3 )
					{
						goto overload1;
					}
				}
				else if(Z_TYPE_P(bitmap20) == IS_LONG)
				{
					object_pointer0_3 = Z_LVAL_P(bitmap20);
				}
				else if(Z_TYPE_P(bitmap20) != IS_NULL)
				{
						goto overload1;
				}
			}

			if(arguments_received >= 6){
				if(Z_TYPE_P(clientData0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(clientData0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_5 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_5 || (rsrc_type != le_wxEvtHandler && rsrc_type != le_wxWindow && rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow && rsrc_type != le_wxValidator && rsrc_type != le_wxTextValidator && rsrc_type != le_wxGenericValidator && rsrc_type != le_wxMenu && rsrc_type != le_wxAuiManager && rsrc_type != le_wxMouseEventsManager && rsrc_type != le_wxTimer && rsrc_type != le_wxEventBlocker && rsrc_type != le_wxProcess && rsrc_type != le_wxFileSystemWatcher && rsrc_type != le_wxTaskBarIcon && rsrc_type != le_wxNotificationMessage && rsrc_type != le_wxBitmapHandler && rsrc_type != le_wxImage && rsrc_type != le_wxSizer && rsrc_type != le_wxBoxSizer && rsrc_type != le_wxStaticBoxSizer && rsrc_type != le_wxWrapSizer && rsrc_type != le_wxStdDialogButtonSizer && rsrc_type != le_wxGridSizer && rsrc_type != le_wxFlexGridSizer && rsrc_type != le_wxGridBagSizer && rsrc_type != le_wxSizerItem && rsrc_type != le_wxGBSizerItem && rsrc_type != le_wxImageList && rsrc_type != le_wxDC && rsrc_type != le_wxWindowDC && rsrc_type != le_wxClientDC && rsrc_type != le_wxPaintDC && rsrc_type != le_wxScreenDC && rsrc_type != le_wxPostScriptDC && rsrc_type != le_wxPrinterDC && rsrc_type != le_wxMemoryDC && rsrc_type != le_wxBufferedDC && rsrc_type != le_wxBufferedPaintDC && rsrc_type != le_wxAutoBufferedPaintDC && rsrc_type != le_wxMirrorDC && rsrc_type != le_wxColour && rsrc_type != le_wxMenuItem && rsrc_type != le_wxEvent && rsrc_type != le_wxMenuEvent && rsrc_type != le_wxKeyEvent && rsrc_type != le_wxCommandEvent && rsrc_type != le_wxNotifyEvent && rsrc_type != le_wxTreeEvent && rsrc_type != le_wxBookCtrlEvent && rsrc_type != le_wxAuiNotebookEvent && rsrc_type != le_wxAuiToolBarEvent && rsrc_type != le_wxListEvent && rsrc_type != le_wxSpinEvent && rsrc_type != le_wxSplitterEvent && rsrc_type != le_wxSpinDoubleEvent && rsrc_type != le_wxGridSizeEvent && rsrc_type != le_wxWizardEvent && rsrc_type != le_wxGridEvent && rsrc_type != le_wxGridRangeSelectEvent && rsrc_type != le_wxDataViewEvent && rsrc_type != le_wxHeaderCtrlEvent && rsrc_type != le_wxRibbonBarEvent && rsrc_type != le_wxStyledTextEvent && rsrc_type != le_wxChildFocusEvent && rsrc_type != le_wxHtmlCellEvent && rsrc_type != le_wxHtmlLinkEvent && rsrc_type != le_wxHyperlinkEvent && rsrc_type != le_wxColourPickerEvent && rsrc_type != le_wxFontPickerEvent && rsrc_type != le_wxScrollEvent && rsrc_type != le_wxWindowModalDialogEvent && rsrc_type != le_wxDateEvent && rsrc_type != le_wxCalendarEvent && rsrc_type != le_wxWindowCreateEvent && rsrc_type != le_wxWindowDestroyEvent && rsrc_type != le_wxUpdateUIEvent && rsrc_type != le_wxHelpEvent && rsrc_type != le_wxGridEditorCreatedEvent && rsrc_type != le_wxCollapsiblePaneEvent && rsrc_type != le_wxClipboardTextEvent && rsrc_type != le_wxFileCtrlEvent && rsrc_type != le_wxSashEvent && rsrc_type != le_wxFileDirPickerEvent && rsrc_type != le_wxContextMenuEvent && rsrc_type != le_wxRibbonButtonBarEvent && rsrc_type != le_wxRibbonGalleryEvent && rsrc_type != le_wxCloseEvent && rsrc_type != le_wxActivateEvent && rsrc_type != le_wxAuiManagerEvent && rsrc_type != le_wxSizeEvent && rsrc_type != le_wxMouseEvent && rsrc_type != le_wxMoveEvent && rsrc_type != le_wxMouseCaptureLostEvent && rsrc_type != le_wxMouseCaptureChangedEvent && rsrc_type != le_wxTimerEvent && rsrc_type != le_wxThreadEvent && rsrc_type != le_wxScrollWinEvent && rsrc_type != le_wxSysColourChangedEvent && rsrc_type != le_wxProcessEvent && rsrc_type != le_wxEraseEvent && rsrc_type != le_wxSetCursorEvent && rsrc_type != le_wxIconizeEvent && rsrc_type != le_wxIdleEvent && rsrc_type != le_wxShowEvent && rsrc_type != le_wxPaintEvent && rsrc_type != le_wxPaletteChangedEvent && rsrc_type != le_wxInitDialogEvent && rsrc_type != le_wxMaximizeEvent && rsrc_type != le_wxNavigationKeyEvent && rsrc_type != le_wxFocusEvent && rsrc_type != le_wxFileSystemWatcherEvent && rsrc_type != le_wxDisplayChangedEvent && rsrc_type != le_wxCalculateLayoutEvent && rsrc_type != le_wxDropFilesEvent && rsrc_type != le_wxQueryLayoutInfoEvent && rsrc_type != le_wxTaskBarIconEvent && rsrc_type != le_wxAcceleratorTable && rsrc_type != le_wxGDIObject && rsrc_type != le_wxBitmap && rsrc_type != le_wxPalette && rsrc_type != le_wxIcon && rsrc_type != le_wxFont && rsrc_type != le_wxAnimation && rsrc_type != le_wxIconBundle && rsrc_type != le_wxCursor && rsrc_type != le_wxRegion && rsrc_type != le_wxPen && rsrc_type != le_wxBrush && rsrc_type != le_wxArtProvider && rsrc_type != le_wxHtmlCell && rsrc_type != le_wxHtmlContainerCell && rsrc_type != le_wxHtmlColourCell && rsrc_type != le_wxHtmlWidgetCell && rsrc_type != le_wxHtmlEasyPrinting && rsrc_type != le_wxHtmlLinkInfo && rsrc_type != le_wxFindReplaceData && rsrc_type != le_wxSound && rsrc_type != le_wxFileSystem && rsrc_type != le_wxFileSystemHandler && rsrc_type != le_wxMask && rsrc_type != le_wxToolTip && rsrc_type != le_wxGraphicsRenderer && rsrc_type != le_wxLayoutConstraints && rsrc_type != le_wxFSFile && rsrc_type != le_wxColourData && rsrc_type != le_wxFontData && rsrc_type != le_wxToolBarToolBase && rsrc_type != le_wxGridTableBase && rsrc_type != le_wxDataViewRenderer && rsrc_type != le_wxDataViewBitmapRenderer && rsrc_type != le_wxDataViewChoiceRenderer && rsrc_type != le_wxDataViewCustomRenderer && rsrc_type != le_wxDataViewSpinRenderer && rsrc_type != le_wxDataViewDateRenderer && rsrc_type != le_wxDataViewIconTextRenderer && rsrc_type != le_wxDataViewProgressRenderer && rsrc_type != le_wxDataViewTextRenderer && rsrc_type != le_wxDataViewToggleRenderer && rsrc_type != le_wxDataViewIconText && rsrc_type != le_wxVariant && rsrc_type != le_wxClipboard && rsrc_type != le_wxConfigBase && rsrc_type != le_wxFileConfig && rsrc_type != le_wxXmlResource && rsrc_type != le_wxPageSetupDialogData && rsrc_type != le_wxPrintDialogData && rsrc_type != le_wxPrintData && rsrc_type != le_wxPrintPreview && rsrc_type != le_wxPrinter && rsrc_type != le_wxPrintout && rsrc_type != le_wxHtmlPrintout && rsrc_type != le_wxHtmlDCRenderer && rsrc_type != le_wxHtmlFilter && rsrc_type != le_wxHtmlHelpData && rsrc_type != le_wxHtmlTagHandler && rsrc_type != le_wxHtmlWinTagHandler && rsrc_type != le_wxModule && rsrc_type != le_wxHtmlTagsModule && rsrc_type != le_wxImageHandler && rsrc_type != le_wxXmlResourceHandler && rsrc_type != le_wxXmlDocument && rsrc_type != le_wxLayoutAlgorithm && rsrc_type != le_wxFileHistory))
					{
						goto overload1;
					}
				}
				else if(Z_TYPE_P(clientData0) == IS_LONG)
				{
					object_pointer0_5 = Z_LVAL_P(clientData0);
				}
				else if(Z_TYPE_P(clientData0) != IS_NULL)
				{
						goto overload1;
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

	//Overload 1
	overload1:
	if(!already_called && arguments_received == 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'lz' (&pos1, &tool1)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "lz", &pos1, &tool1 ) == SUCCESS)
		{
			if(arguments_received >= 2){
				if(Z_TYPE_P(tool1) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(tool1), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer1_1 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer1_1 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(tool1) == IS_LONG)
				{
					object_pointer1_1 = Z_LVAL_P(tool1);
				}
				else if(Z_TYPE_P(tool1) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload1_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 3:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::InsertTool((size_t) pos0, (int) toolId0, *(wxBitmap*) object_pointer0_2) to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return3;
				value_to_return3 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->InsertTool((size_t) pos0, (int) toolId0, *(wxBitmap*) object_pointer0_2);

				if(value_to_return3 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return3->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return3->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return3, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return3 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}

				references->AddReference(bitmap10);

				return;
				break;
			}
			case 4:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::InsertTool((size_t) pos0, (int) toolId0, *(wxBitmap*) object_pointer0_2, *(wxBitmap*) object_pointer0_3) to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return4;
				value_to_return4 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->InsertTool((size_t) pos0, (int) toolId0, *(wxBitmap*) object_pointer0_2, *(wxBitmap*) object_pointer0_3);

				if(value_to_return4 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return4->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return4->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return4, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return4 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}

				references->AddReference(bitmap10);
				references->AddReference(bitmap20);

				return;
				break;
			}
			case 5:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::InsertTool((size_t) pos0, (int) toolId0, *(wxBitmap*) object_pointer0_2, *(wxBitmap*) object_pointer0_3, isToggle0) to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return5;
				value_to_return5 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->InsertTool((size_t) pos0, (int) toolId0, *(wxBitmap*) object_pointer0_2, *(wxBitmap*) object_pointer0_3, isToggle0);

				if(value_to_return5 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return5->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return5->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return5, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return5 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}

				references->AddReference(bitmap10);
				references->AddReference(bitmap20);

				return;
				break;
			}
			case 6:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::InsertTool((size_t) pos0, (int) toolId0, *(wxBitmap*) object_pointer0_2, *(wxBitmap*) object_pointer0_3, isToggle0, (wxObject*) object_pointer0_5) to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return6;
				value_to_return6 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->InsertTool((size_t) pos0, (int) toolId0, *(wxBitmap*) object_pointer0_2, *(wxBitmap*) object_pointer0_3, isToggle0, (wxObject*) object_pointer0_5);

				if(value_to_return6 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return6->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return6->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return6, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return6 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}

				references->AddReference(bitmap10);
				references->AddReference(bitmap20);
				references->AddReference(clientData0);

				return;
				break;
			}
			case 7:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::InsertTool((size_t) pos0, (int) toolId0, *(wxBitmap*) object_pointer0_2, *(wxBitmap*) object_pointer0_3, isToggle0, (wxObject*) object_pointer0_5, wxString(shortHelpString0, wxConvUTF8)) to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return7;
				value_to_return7 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->InsertTool((size_t) pos0, (int) toolId0, *(wxBitmap*) object_pointer0_2, *(wxBitmap*) object_pointer0_3, isToggle0, (wxObject*) object_pointer0_5, wxString(shortHelpString0, wxConvUTF8));

				if(value_to_return7 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return7->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return7->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return7, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return7 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}

				references->AddReference(bitmap10);
				references->AddReference(bitmap20);
				references->AddReference(clientData0);

				return;
				break;
			}
			case 8:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::InsertTool((size_t) pos0, (int) toolId0, *(wxBitmap*) object_pointer0_2, *(wxBitmap*) object_pointer0_3, isToggle0, (wxObject*) object_pointer0_5, wxString(shortHelpString0, wxConvUTF8), wxString(longHelpString0, wxConvUTF8)) to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return8;
				value_to_return8 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->InsertTool((size_t) pos0, (int) toolId0, *(wxBitmap*) object_pointer0_2, *(wxBitmap*) object_pointer0_3, isToggle0, (wxObject*) object_pointer0_5, wxString(shortHelpString0, wxConvUTF8), wxString(longHelpString0, wxConvUTF8));

				if(value_to_return8 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return8->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return8->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return8, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return8 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}

				references->AddReference(bitmap10);
				references->AddReference(bitmap20);
				references->AddReference(clientData0);

				return;
				break;
			}
		}
	}

	
	if(overload1_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::InsertTool((size_t) pos1, (wxToolBarToolBase*) object_pointer1_1) to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return2;
				value_to_return2 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->InsertTool((size_t) pos1, (wxToolBarToolBase*) object_pointer1_1);

				if(value_to_return2 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return2->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return2->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return2, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return2 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}

				references->AddReference(tool1);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, Realize)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::Realize\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::Realize\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxToolBar::Realize())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxToolBar_php*)_this)->Realize());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxToolBar, RemoveTool)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxToolBar::RemoveTool\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxToolBar::RemoveTool\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long id0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&id0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &id0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxToolBar::RemoveTool((int) id0) to return object pointer\n\n");
				#endif
				wxToolBarToolBase_php* value_to_return1;
				value_to_return1 = (wxToolBarToolBase_php*) ((wxToolBar_php*)_this)->RemoveTool((int) id0);

				if(value_to_return1 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return1->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return1->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolBarToolBase_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return1, le_wxToolBarToolBase));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return1 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}


				return;
				break;
			}
		}
	}

		
}
void php_wxHScrolledWindow_destruction_handler(zend_rsrc_list_entry *rsrc TSRMLS_DC) 
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Calling php_wxHScrolledWindow_destruction_handler on %s at line %i\n", zend_get_executed_filename(TSRMLS_C), zend_get_executed_lineno(TSRMLS_C));
	php_printf("===========================================\n");
	#endif
	
	
	wxHScrolledWindow_php* object = (wxHScrolledWindow_php*)rsrc->ptr;
	
	if(rsrc->ptr != NULL)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Pointer not null\n");
		php_printf("Pointer address %x\n", rsrc->ptr);
		#endif
		
		if(object->references.IsUserInitialized())
		{	
	
			#ifdef USE_WXPHP_DEBUG
			php_printf("Deleting object by calling destroy\n");
			#endif
			
			object->Destroy();
			
			rsrc->ptr = NULL;
		}
		
		#ifdef USE_WXPHP_DEBUG
		php_printf("Deletion of wxHScrolledWindow done\n");
		php_printf("===========================================\n\n");
		#endif
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Not user space initialized\n");
		#endif
	}
}
PHP_METHOD(php_wxHScrolledWindow, Create)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxHScrolledWindow::Create\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxHScrolledWindow::Create\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* parent0 = 0;
	void* object_pointer0_0 = 0;
	long id0;
	zval* pos0 = 0;
	void* object_pointer0_2 = 0;
	zval* size0 = 0;
	void* object_pointer0_3 = 0;
	long style0;
	char* name0;
	long name_len0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 1  && arguments_received <= 6)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'z|lOOls' (&parent0, &id0, &pos0, php_wxPoint_entry, &size0, php_wxSize_entry, &style0, &name0, &name_len0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "z|lOOls", &parent0, &id0, &pos0, php_wxPoint_entry, &size0, php_wxSize_entry, &style0, &name0, &name_len0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(parent0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(parent0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 || (rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(parent0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(parent0);
				}
				else if(Z_TYPE_P(parent0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 3){
				if(Z_TYPE_P(pos0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(pos0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_2 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_2 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(pos0) == IS_LONG)
				{
					object_pointer0_2 = Z_LVAL_P(pos0);
				}
				else if(Z_TYPE_P(pos0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 4){
				if(Z_TYPE_P(size0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(size0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_3 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_3 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(size0) == IS_LONG)
				{
					object_pointer0_3 = Z_LVAL_P(size0);
				}
				else if(Z_TYPE_P(size0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxHScrolledWindow::Create((wxWindow*) object_pointer0_0))\n\n");
				#endif
				if(parent_rsrc_type == le_wxHScrolledWindow)
				{
					ZVAL_BOOL(return_value, ((wxHScrolledWindow_php*)_this)->Create((wxWindow*) object_pointer0_0));
				}

				references->AddReference(parent0);

				return;
				break;
			}
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxHScrolledWindow::Create((wxWindow*) object_pointer0_0, (wxWindowID) id0))\n\n");
				#endif
				if(parent_rsrc_type == le_wxHScrolledWindow)
				{
					ZVAL_BOOL(return_value, ((wxHScrolledWindow_php*)_this)->Create((wxWindow*) object_pointer0_0, (wxWindowID) id0));
				}

				references->AddReference(parent0);

				return;
				break;
			}
			case 3:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxHScrolledWindow::Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2))\n\n");
				#endif
				if(parent_rsrc_type == le_wxHScrolledWindow)
				{
					ZVAL_BOOL(return_value, ((wxHScrolledWindow_php*)_this)->Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2));
				}

				references->AddReference(parent0);
				references->AddReference(pos0);

				return;
				break;
			}
			case 4:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxHScrolledWindow::Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2, *(wxSize*) object_pointer0_3))\n\n");
				#endif
				if(parent_rsrc_type == le_wxHScrolledWindow)
				{
					ZVAL_BOOL(return_value, ((wxHScrolledWindow_php*)_this)->Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2, *(wxSize*) object_pointer0_3));
				}

				references->AddReference(parent0);
				references->AddReference(pos0);
				references->AddReference(size0);

				return;
				break;
			}
			case 5:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxHScrolledWindow::Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2, *(wxSize*) object_pointer0_3, (long) style0))\n\n");
				#endif
				if(parent_rsrc_type == le_wxHScrolledWindow)
				{
					ZVAL_BOOL(return_value, ((wxHScrolledWindow_php*)_this)->Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2, *(wxSize*) object_pointer0_3, (long) style0));
				}

				references->AddReference(parent0);
				references->AddReference(pos0);
				references->AddReference(size0);

				return;
				break;
			}
			case 6:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxHScrolledWindow::Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2, *(wxSize*) object_pointer0_3, (long) style0, wxString(name0, wxConvUTF8)))\n\n");
				#endif
				if(parent_rsrc_type == le_wxHScrolledWindow)
				{
					ZVAL_BOOL(return_value, ((wxHScrolledWindow_php*)_this)->Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2, *(wxSize*) object_pointer0_3, (long) style0, wxString(name0, wxConvUTF8)));
				}

				references->AddReference(parent0);
				references->AddReference(pos0);
				references->AddReference(size0);

				return;
				break;
			}
		}
	}

		
}
void php_wxWindow_destruction_handler(zend_rsrc_list_entry *rsrc TSRMLS_DC) 
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Calling php_wxWindow_destruction_handler on %s at line %i\n", zend_get_executed_filename(TSRMLS_C), zend_get_executed_lineno(TSRMLS_C));
	php_printf("===========================================\n");
	#endif
	
	
	wxWindow_php* object = (wxWindow_php*)rsrc->ptr;
	
	if(rsrc->ptr != NULL)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Pointer not null\n");
		php_printf("Pointer address %x\n", rsrc->ptr);
		#endif
		
		if(object->references.IsUserInitialized())
		{	
			#ifdef USE_WXPHP_DEBUG
			php_printf("Deleting pointer with delete\n");
			#endif
			
			delete object;
			
			rsrc->ptr = NULL;
		}
		
		#ifdef USE_WXPHP_DEBUG
		php_printf("Deletion of wxWindow done\n");
		php_printf("===========================================\n\n");
		#endif
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Not user space initialized\n");
		#endif
	}
}
PHP_METHOD(php_wxWindow, __construct)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::__construct\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	
	//Parameters for overload 0
	zval* parent0 = 0;
	void* object_pointer0_0 = 0;
	long id0;
	zval* pos0 = 0;
	void* object_pointer0_2 = 0;
	zval* size0 = 0;
	void* object_pointer0_3 = 0;
	long style0;
	char* name0;
	long name_len0;
	bool overload0_called = false;
	//Parameters for overload 1
	bool overload1_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 2  && arguments_received <= 6)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'zl|OOls' (&parent0, &id0, &pos0, php_wxPoint_entry, &size0, php_wxSize_entry, &style0, &name0, &name_len0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "zl|OOls", &parent0, &id0, &pos0, php_wxPoint_entry, &size0, php_wxSize_entry, &style0, &name0, &name_len0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(parent0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(parent0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 || (rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow))
					{
						goto overload1;
					}
				}
				else if(Z_TYPE_P(parent0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(parent0);
				}
				else if(Z_TYPE_P(parent0) != IS_NULL)
				{
						goto overload1;
				}
			}

			if(arguments_received >= 3){
				if(Z_TYPE_P(pos0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(pos0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_2 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_2 )
					{
						goto overload1;
					}
				}
				else if(Z_TYPE_P(pos0) == IS_LONG)
				{
					object_pointer0_2 = Z_LVAL_P(pos0);
				}
				else if(Z_TYPE_P(pos0) != IS_NULL)
				{
						goto overload1;
				}
			}

			if(arguments_received >= 4){
				if(Z_TYPE_P(size0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(size0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_3 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_3 )
					{
						goto overload1;
					}
				}
				else if(Z_TYPE_P(size0) == IS_LONG)
				{
					object_pointer0_3 = Z_LVAL_P(size0);
				}
				else if(Z_TYPE_P(size0) != IS_NULL)
				{
						goto overload1;
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

	//Overload 1
	overload1:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload1_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer0_0, (wxWindowID) id0)\n");
				#endif
				_this = new wxWindow_php((wxWindow*) object_pointer0_0, (wxWindowID) id0);

				((wxWindow_php*) _this)->references.Initialize();
				((wxWindow_php*) _this)->references.AddReference(parent0);
				break;
			}
			case 3:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2)\n");
				#endif
				_this = new wxWindow_php((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2);

				((wxWindow_php*) _this)->references.Initialize();
				((wxWindow_php*) _this)->references.AddReference(parent0);
				((wxWindow_php*) _this)->references.AddReference(pos0);
				break;
			}
			case 4:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2, *(wxSize*) object_pointer0_3)\n");
				#endif
				_this = new wxWindow_php((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2, *(wxSize*) object_pointer0_3);

				((wxWindow_php*) _this)->references.Initialize();
				((wxWindow_php*) _this)->references.AddReference(parent0);
				((wxWindow_php*) _this)->references.AddReference(pos0);
				((wxWindow_php*) _this)->references.AddReference(size0);
				break;
			}
			case 5:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2, *(wxSize*) object_pointer0_3, (long) style0)\n");
				#endif
				_this = new wxWindow_php((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2, *(wxSize*) object_pointer0_3, (long) style0);

				((wxWindow_php*) _this)->references.Initialize();
				((wxWindow_php*) _this)->references.AddReference(parent0);
				((wxWindow_php*) _this)->references.AddReference(pos0);
				((wxWindow_php*) _this)->references.AddReference(size0);
				break;
			}
			case 6:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2, *(wxSize*) object_pointer0_3, (long) style0, wxString(name0, wxConvUTF8))\n");
				#endif
				_this = new wxWindow_php((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2, *(wxSize*) object_pointer0_3, (long) style0, wxString(name0, wxConvUTF8));

				((wxWindow_php*) _this)->references.Initialize();
				((wxWindow_php*) _this)->references.AddReference(parent0);
				((wxWindow_php*) _this)->references.AddReference(pos0);
				((wxWindow_php*) _this)->references.AddReference(size0);
				break;
			}
		}
	}

	
	if(overload1_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct()\n");
				#endif
				_this = new wxWindow_php();

				((wxWindow_php*) _this)->references.Initialize();
				break;
			}
		}
	}

		
	if(already_called)
	{
		long id_to_find = zend_list_insert(_this, le_wxWindow);
		
		add_property_resource(getThis(), _wxResource, id_to_find);
		
		MAKE_STD_ZVAL(((wxWindow_php*) _this)->evnArray);
		
		array_init(((wxWindow_php*) _this)->evnArray);
		
		((wxWindow_php*) _this)->phpObj = getThis();
		
		((wxWindow_php*) _this)->InitProperties();
		
		#ifdef ZTS 
		((wxWindow_php*) _this)->TSRMLS_C = TSRMLS_C;
		#endif
	}
	else
	{
		zend_error(E_ERROR, "Abstract type: failed to call a proper constructor");
	}
	
	#ifdef USE_WXPHP_DEBUG
		php_printf("===========================================\n\n");
	#endif
}
PHP_METHOD(php_wxWindow, Show)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::Show\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::Show\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool show0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 0  && arguments_received <= 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '|b' (&show0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "|b", &show0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::Show())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->Show());


				return;
				break;
			}
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::Show(show0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->Show(show0));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, FindWindowById)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::FindWindowById\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::FindWindowById\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long id0;
	zval* parent0 = 0;
	void* object_pointer0_1 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 1  && arguments_received <= 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l|z' (&id0, &parent0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l|z", &id0, &parent0 ) == SUCCESS)
		{
			if(arguments_received >= 2){
				if(Z_TYPE_P(parent0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(parent0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_1 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_1 || (rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(parent0) == IS_LONG)
				{
					object_pointer0_1 = Z_LVAL_P(parent0);
				}
				else if(Z_TYPE_P(parent0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Static ");
				php_printf("Executing wxWindow::FindWindowById((long) id0) to return object pointer\n\n");
				#endif
				wxWindow_php* value_to_return1;
				value_to_return1 = (wxWindow_php*) wxWindow::FindWindowById((long) id0);
				if(value_to_return1 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return1->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return1->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxWindow_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return1, le_wxWindow));
				}



				return;
				break;
			}
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Static ");
				php_printf("Executing wxWindow::FindWindowById((long) id0, (const wxWindow*) object_pointer0_1) to return object pointer\n\n");
				#endif
				wxWindow_php* value_to_return2;
				value_to_return2 = (wxWindow_php*) wxWindow::FindWindowById((long) id0, (const wxWindow*) object_pointer0_1);
				if(value_to_return2 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return2->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return2->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxWindow_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return2, le_wxWindow));
				}



				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, FindWindow)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::FindWindow\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::FindWindow\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	char* name0;
	long name_len0;
	bool overload0_called = false;
	//Parameters for overload 1
	long id1;
	bool overload1_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 's' (&name0, &name_len0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "s", &name0, &name_len0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

	//Overload 1
	overload1:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&id1)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &id1 ) == SUCCESS)
		{
			overload1_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::FindWindow(wxString(name0, wxConvUTF8)) to return object pointer\n\n");
				#endif
				wxWindow_php* value_to_return1;
				value_to_return1 = (wxWindow_php*) ((wxWindow_php*)_this)->FindWindow(wxString(name0, wxConvUTF8));

				if(value_to_return1 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return1->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return1->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxWindow_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return1, le_wxWindow));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return1 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}


				return;
				break;
			}
		}
	}

	
	if(overload1_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::FindWindow((long) id1) to return object pointer\n\n");
				#endif
				wxWindow_php* value_to_return1;
				value_to_return1 = (wxWindow_php*) ((wxWindow_php*)_this)->FindWindow((long) id1);

				if(value_to_return1 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return1->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return1->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxWindow_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return1, le_wxWindow));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return1 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, Enable)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::Enable\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::Enable\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool enable0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 0  && arguments_received <= 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '|b' (&enable0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "|b", &enable0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::Enable())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->Enable());


				return;
				break;
			}
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::Enable(enable0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->Enable(enable0));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, Disable)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::Disable\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::Disable\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::Disable())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->Disable());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, Close)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::Close\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::Close\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool force0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 0  && arguments_received <= 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '|b' (&force0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "|b", &force0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::Close())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->Close());


				return;
				break;
			}
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::Close(force0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->Close(force0));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetSizer)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetSizer\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetSizer\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* sizer0 = 0;
	void* object_pointer0_0 = 0;
	bool deleteOld0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 1  && arguments_received <= 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'z|b' (&sizer0, &deleteOld0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "z|b", &sizer0, &deleteOld0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(sizer0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(sizer0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 || (rsrc_type != le_wxBoxSizer && rsrc_type != le_wxStaticBoxSizer && rsrc_type != le_wxWrapSizer && rsrc_type != le_wxStdDialogButtonSizer && rsrc_type != le_wxGridSizer && rsrc_type != le_wxFlexGridSizer && rsrc_type != le_wxGridBagSizer))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(sizer0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(sizer0);
				}
				else if(Z_TYPE_P(sizer0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetSizer((wxSizer*) object_pointer0_0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetSizer((wxSizer*) object_pointer0_0);

				references->AddReference(sizer0);

				return;
				break;
			}
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetSizer((wxSizer*) object_pointer0_0, deleteOld0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetSizer((wxSizer*) object_pointer0_0, deleteOld0);

				references->AddReference(sizer0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetSizerAndFit)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetSizerAndFit\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetSizerAndFit\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* sizer0 = 0;
	void* object_pointer0_0 = 0;
	bool deleteOld0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 1  && arguments_received <= 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'z|b' (&sizer0, &deleteOld0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "z|b", &sizer0, &deleteOld0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(sizer0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(sizer0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 || (rsrc_type != le_wxBoxSizer && rsrc_type != le_wxStaticBoxSizer && rsrc_type != le_wxWrapSizer && rsrc_type != le_wxStdDialogButtonSizer && rsrc_type != le_wxGridSizer && rsrc_type != le_wxFlexGridSizer && rsrc_type != le_wxGridBagSizer))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(sizer0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(sizer0);
				}
				else if(Z_TYPE_P(sizer0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetSizerAndFit((wxSizer*) object_pointer0_0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetSizerAndFit((wxSizer*) object_pointer0_0);

				references->AddReference(sizer0);

				return;
				break;
			}
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetSizerAndFit((wxSizer*) object_pointer0_0, deleteOld0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetSizerAndFit((wxSizer*) object_pointer0_0, deleteOld0);

				references->AddReference(sizer0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetToolTip)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetToolTip\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetToolTip\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	char* tipString0;
	long tipString_len0;
	bool overload0_called = false;
	//Parameters for overload 1
	zval* tip1 = 0;
	void* object_pointer1_0 = 0;
	bool overload1_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 's' (&tipString0, &tipString_len0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "s", &tipString0, &tipString_len0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

	//Overload 1
	overload1:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'z' (&tip1)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "z", &tip1 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(tip1) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(tip1), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer1_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer1_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(tip1) == IS_LONG)
				{
					object_pointer1_0 = Z_LVAL_P(tip1);
				}
				else if(Z_TYPE_P(tip1) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload1_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetToolTip(wxString(tipString0, wxConvUTF8))\n\n");
				#endif
				((wxWindow_php*)_this)->SetToolTip(wxString(tipString0, wxConvUTF8));


				return;
				break;
			}
		}
	}

	
	if(overload1_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetToolTip((wxToolTip*) object_pointer1_0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetToolTip((wxToolTip*) object_pointer1_0);

				references->AddReference(tip1);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetWindowStyle)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetWindowStyle\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetWindowStyle\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long style0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&style0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &style0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetWindowStyle((long) style0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetWindowStyle((long) style0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetWindowStyleFlag)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetWindowStyleFlag\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetWindowStyleFlag\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long style0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&style0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &style0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetWindowStyleFlag((long) style0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetWindowStyleFlag((long) style0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, Update)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::Update\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::Update\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::Update()\n\n");
				#endif
				((wxWindow_php*)_this)->Update();


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, UpdateWindowUI)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::UpdateWindowUI\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::UpdateWindowUI\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long flags0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 0  && arguments_received <= 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '|l' (&flags0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "|l", &flags0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::UpdateWindowUI()\n\n");
				#endif
				((wxWindow_php*)_this)->UpdateWindowUI();


				return;
				break;
			}
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::UpdateWindowUI((long) flags0)\n\n");
				#endif
				((wxWindow_php*)_this)->UpdateWindowUI((long) flags0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, Validate)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::Validate\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::Validate\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::Validate())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->Validate());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, WarpPointer)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::WarpPointer\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::WarpPointer\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long x0;
	long y0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'll' (&x0, &y0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "ll", &x0, &y0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::WarpPointer((int) x0, (int) y0)\n\n");
				#endif
				((wxWindow_php*)_this)->WarpPointer((int) x0, (int) y0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, WindowToClientSize)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::WindowToClientSize\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::WindowToClientSize\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* size0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&size0, php_wxSize_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &size0, php_wxSize_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(size0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(size0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(size0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(size0);
				}
				else if(Z_TYPE_P(size0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::WindowToClientSize(*(wxSize*) object_pointer0_0) to return new object\n\n");
				#endif
				wxSize value_to_return1;
				value_to_return1 = ((wxWindow_php*)_this)->WindowToClientSize(*(wxSize*) object_pointer0_0);
				void* ptr = safe_emalloc(1, sizeof(wxSize_php), 0);
				memcpy(ptr, &value_to_return1, sizeof(wxSize));
				object_init_ex(return_value, php_wxSize_entry);
				add_property_resource(return_value, "wxResource", zend_list_insert(ptr, le_wxSize));

				references->AddReference(size0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, UnsetToolTip)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::UnsetToolTip\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::UnsetToolTip\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::UnsetToolTip()\n\n");
				#endif
				((wxWindow_php*)_this)->UnsetToolTip();


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, UnreserveControlId)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::UnreserveControlId\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::UnreserveControlId\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long id0;
	long count0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 1  && arguments_received <= 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l|l' (&id0, &count0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l|l", &id0, &count0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Static ");
				php_printf("Executing wxWindow::UnreserveControlId((wxWindowID) id0)\n\n");
				#endif
				wxWindow::UnreserveControlId((wxWindowID) id0);


				return;
				break;
			}
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Static ");
				php_printf("Executing wxWindow::UnreserveControlId((wxWindowID) id0, (int) count0)\n\n");
				#endif
				wxWindow::UnreserveControlId((wxWindowID) id0, (int) count0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, TransferDataToWindow)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::TransferDataToWindow\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::TransferDataToWindow\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::TransferDataToWindow())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->TransferDataToWindow());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, TransferDataFromWindow)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::TransferDataFromWindow\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::TransferDataFromWindow\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::TransferDataFromWindow())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->TransferDataFromWindow());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, ToggleWindowStyle)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::ToggleWindowStyle\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::ToggleWindowStyle\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long flag0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&flag0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &flag0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::ToggleWindowStyle((int) flag0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->ToggleWindowStyle((int) flag0));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, Thaw)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::Thaw\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::Thaw\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::Thaw()\n\n");
				#endif
				((wxWindow_php*)_this)->Thaw();


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, ShouldInheritColours)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::ShouldInheritColours\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::ShouldInheritColours\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::ShouldInheritColours())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->ShouldInheritColours());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetVirtualSize)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetVirtualSize\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetVirtualSize\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* size0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
	//Parameters for overload 1
	long width1;
	long height1;
	bool overload1_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&size0, php_wxSize_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &size0, php_wxSize_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(size0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(size0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						goto overload1;
					}
				}
				else if(Z_TYPE_P(size0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(size0);
				}
				else if(Z_TYPE_P(size0) != IS_NULL)
				{
						goto overload1;
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

	//Overload 1
	overload1:
	if(!already_called && arguments_received == 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'll' (&width1, &height1)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "ll", &width1, &height1 ) == SUCCESS)
		{
			overload1_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetVirtualSize(*(wxSize*) object_pointer0_0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetVirtualSize(*(wxSize*) object_pointer0_0);

				references->AddReference(size0);

				return;
				break;
			}
		}
	}

	
	if(overload1_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetVirtualSize((int) width1, (int) height1)\n\n");
				#endif
				((wxWindow_php*)_this)->SetVirtualSize((int) width1, (int) height1);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetValidator)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetValidator\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetValidator\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* validator0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&validator0, php_wxValidator_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &validator0, php_wxValidator_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(validator0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(validator0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(validator0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(validator0);
				}
				else if(Z_TYPE_P(validator0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetValidator(*(wxValidator*) object_pointer0_0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetValidator(*(wxValidator*) object_pointer0_0);

				references->AddReference(validator0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetTransparent)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetTransparent\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetTransparent\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long alpha0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&alpha0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &alpha0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::SetTransparent((wxByte) alpha0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->SetTransparent((wxByte) alpha0));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetSizeHints)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetSizeHints\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetSizeHints\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long minW0;
	long minH0;
	long maxW0;
	long maxH0;
	long incW0;
	long incH0;
	bool overload0_called = false;
	//Parameters for overload 1
	zval* minSize1 = 0;
	void* object_pointer1_0 = 0;
	zval* maxSize1 = 0;
	void* object_pointer1_1 = 0;
	zval* incSize1 = 0;
	void* object_pointer1_2 = 0;
	bool overload1_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 2  && arguments_received <= 6)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'll|llll' (&minW0, &minH0, &maxW0, &maxH0, &incW0, &incH0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "ll|llll", &minW0, &minH0, &maxW0, &maxH0, &incW0, &incH0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

	//Overload 1
	overload1:
	if(!already_called && arguments_received >= 1  && arguments_received <= 3)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O|OO' (&minSize1, php_wxSize_entry, &maxSize1, php_wxSize_entry, &incSize1, php_wxSize_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O|OO", &minSize1, php_wxSize_entry, &maxSize1, php_wxSize_entry, &incSize1, php_wxSize_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(minSize1) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(minSize1), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer1_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer1_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(minSize1) == IS_LONG)
				{
					object_pointer1_0 = Z_LVAL_P(minSize1);
				}
				else if(Z_TYPE_P(minSize1) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 2){
				if(Z_TYPE_P(maxSize1) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(maxSize1), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer1_1 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer1_1 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(maxSize1) == IS_LONG)
				{
					object_pointer1_1 = Z_LVAL_P(maxSize1);
				}
				else if(Z_TYPE_P(maxSize1) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 3){
				if(Z_TYPE_P(incSize1) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(incSize1), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer1_2 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer1_2 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(incSize1) == IS_LONG)
				{
					object_pointer1_2 = Z_LVAL_P(incSize1);
				}
				else if(Z_TYPE_P(incSize1) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload1_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetSizeHints((int) minW0, (int) minH0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetSizeHints((int) minW0, (int) minH0);


				return;
				break;
			}
			case 3:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetSizeHints((int) minW0, (int) minH0, (int) maxW0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetSizeHints((int) minW0, (int) minH0, (int) maxW0);


				return;
				break;
			}
			case 4:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetSizeHints((int) minW0, (int) minH0, (int) maxW0, (int) maxH0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetSizeHints((int) minW0, (int) minH0, (int) maxW0, (int) maxH0);


				return;
				break;
			}
			case 5:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetSizeHints((int) minW0, (int) minH0, (int) maxW0, (int) maxH0, (int) incW0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetSizeHints((int) minW0, (int) minH0, (int) maxW0, (int) maxH0, (int) incW0);


				return;
				break;
			}
			case 6:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetSizeHints((int) minW0, (int) minH0, (int) maxW0, (int) maxH0, (int) incW0, (int) incH0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetSizeHints((int) minW0, (int) minH0, (int) maxW0, (int) maxH0, (int) incW0, (int) incH0);


				return;
				break;
			}
		}
	}

	
	if(overload1_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetSizeHints(*(wxSize*) object_pointer1_0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetSizeHints(*(wxSize*) object_pointer1_0);

				references->AddReference(minSize1);

				return;
				break;
			}
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetSizeHints(*(wxSize*) object_pointer1_0, *(wxSize*) object_pointer1_1)\n\n");
				#endif
				((wxWindow_php*)_this)->SetSizeHints(*(wxSize*) object_pointer1_0, *(wxSize*) object_pointer1_1);

				references->AddReference(minSize1);
				references->AddReference(maxSize1);

				return;
				break;
			}
			case 3:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetSizeHints(*(wxSize*) object_pointer1_0, *(wxSize*) object_pointer1_1, *(wxSize*) object_pointer1_2)\n\n");
				#endif
				((wxWindow_php*)_this)->SetSizeHints(*(wxSize*) object_pointer1_0, *(wxSize*) object_pointer1_1, *(wxSize*) object_pointer1_2);

				references->AddReference(minSize1);
				references->AddReference(maxSize1);
				references->AddReference(incSize1);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetSize)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetSize\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetSize\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long width0;
	long height0;
	bool overload0_called = false;
	//Parameters for overload 1
	zval* size1 = 0;
	void* object_pointer1_0 = 0;
	bool overload1_called = false;
	//Parameters for overload 2
	zval* rect2 = 0;
	void* object_pointer2_0 = 0;
	bool overload2_called = false;
	//Parameters for overload 3
	long x3;
	long y3;
	long width3;
	long height3;
	long sizeFlags3;
	bool overload3_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'll' (&width0, &height0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "ll", &width0, &height0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

	//Overload 1
	overload1:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&size1, php_wxSize_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &size1, php_wxSize_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(size1) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(size1), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer1_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer1_0 )
					{
						goto overload2;
					}
				}
				else if(Z_TYPE_P(size1) == IS_LONG)
				{
					object_pointer1_0 = Z_LVAL_P(size1);
				}
				else if(Z_TYPE_P(size1) != IS_NULL)
				{
						goto overload2;
				}
			}

			overload1_called = true;
			already_called = true;
		}
	}

	//Overload 2
	overload2:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&rect2, php_wxRect_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &rect2, php_wxRect_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(rect2) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(rect2), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer2_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer2_0 )
					{
						goto overload3;
					}
				}
				else if(Z_TYPE_P(rect2) == IS_LONG)
				{
					object_pointer2_0 = Z_LVAL_P(rect2);
				}
				else if(Z_TYPE_P(rect2) != IS_NULL)
				{
						goto overload3;
				}
			}

			overload2_called = true;
			already_called = true;
		}
	}

	//Overload 3
	overload3:
	if(!already_called && arguments_received >= 4  && arguments_received <= 5)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'llll|l' (&x3, &y3, &width3, &height3, &sizeFlags3)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "llll|l", &x3, &y3, &width3, &height3, &sizeFlags3 ) == SUCCESS)
		{
			overload3_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetSize((int) width0, (int) height0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetSize((int) width0, (int) height0);


				return;
				break;
			}
		}
	}

	
	if(overload1_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetSize(*(wxSize*) object_pointer1_0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetSize(*(wxSize*) object_pointer1_0);

				references->AddReference(size1);

				return;
				break;
			}
		}
	}

	
	if(overload2_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetSize(*(wxRect*) object_pointer2_0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetSize(*(wxRect*) object_pointer2_0);

				references->AddReference(rect2);

				return;
				break;
			}
		}
	}

	
	if(overload3_called)
	{
		switch(arguments_received)
		{
			case 4:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetSize((int) x3, (int) y3, (int) width3, (int) height3)\n\n");
				#endif
				((wxWindow_php*)_this)->SetSize((int) x3, (int) y3, (int) width3, (int) height3);


				return;
				break;
			}
			case 5:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetSize((int) x3, (int) y3, (int) width3, (int) height3, (int) sizeFlags3)\n\n");
				#endif
				((wxWindow_php*)_this)->SetSize((int) x3, (int) y3, (int) width3, (int) height3, (int) sizeFlags3);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetScrollbar)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetScrollbar\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetScrollbar\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long orientation0;
	long position0;
	long thumbSize0;
	long range0;
	bool refresh0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 4  && arguments_received <= 5)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'llll|b' (&orientation0, &position0, &thumbSize0, &range0, &refresh0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "llll|b", &orientation0, &position0, &thumbSize0, &range0, &refresh0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 4:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetScrollbar((int) orientation0, (int) position0, (int) thumbSize0, (int) range0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetScrollbar((int) orientation0, (int) position0, (int) thumbSize0, (int) range0);


				return;
				break;
			}
			case 5:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetScrollbar((int) orientation0, (int) position0, (int) thumbSize0, (int) range0, refresh0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetScrollbar((int) orientation0, (int) position0, (int) thumbSize0, (int) range0, refresh0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetScrollPos)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetScrollPos\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetScrollPos\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long orientation0;
	long pos0;
	bool refresh0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 2  && arguments_received <= 3)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'll|b' (&orientation0, &pos0, &refresh0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "ll|b", &orientation0, &pos0, &refresh0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetScrollPos((int) orientation0, (int) pos0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetScrollPos((int) orientation0, (int) pos0);


				return;
				break;
			}
			case 3:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetScrollPos((int) orientation0, (int) pos0, refresh0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetScrollPos((int) orientation0, (int) pos0, refresh0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, AcceptsFocus)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::AcceptsFocus\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::AcceptsFocus\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::AcceptsFocus())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->AcceptsFocus());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, AcceptsFocusFromKeyboard)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::AcceptsFocusFromKeyboard\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::AcceptsFocusFromKeyboard\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::AcceptsFocusFromKeyboard())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->AcceptsFocusFromKeyboard());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, AcceptsFocusRecursively)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::AcceptsFocusRecursively\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::AcceptsFocusRecursively\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::AcceptsFocusRecursively())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->AcceptsFocusRecursively());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, AddChild)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::AddChild\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::AddChild\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* child0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'z' (&child0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "z", &child0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(child0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(child0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 || (rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(child0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(child0);
				}
				else if(Z_TYPE_P(child0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::AddChild((wxWindow*) object_pointer0_0)\n\n");
				#endif
				((wxWindow_php*)_this)->AddChild((wxWindow*) object_pointer0_0);

				references->AddReference(child0);

				return;
				break;
			}
		}
	}

		
}
void wxWindow_php::AddPendingEvent(const wxEvent& event)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking virtual wxWindow::AddPendingEvent\n");
	php_printf("===========================================\n");
	#endif
	
	zval *arguments[1];
	
	//Initilize arguments array
	for(int i=0; i<1; i++)
	{
		MAKE_STD_ZVAL(arguments[i]);
	}

	zval* return_value;
	MAKE_STD_ZVAL(return_value);
	zval function_name;
	ZVAL_STRING(&function_name, "AddPendingEvent", 0);
	char* temp_string;
	char _wxResource[] = "wxResource";
	zval **tmp;
	int id_to_find;
	void* return_object;
	int rsrc_type;
	
	//Parameters for conversion
	object_init_ex(arguments[0], php_wxEvent_entry);
	add_property_resource(arguments[0], _wxResource, zend_list_insert(&event, le_wxEvent));
		
	#ifdef USE_WXPHP_DEBUG
	php_printf("Trying to call user defined method\n");
	#endif
	
	if(call_user_function(NULL, (zval**) &this->phpObj, &function_name, return_value, 1, arguments TSRMLS_CC) == FAILURE)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Invocation of user defined method failed\n");
		#endif
		
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Returning userspace value.\n");
		#endif
		
		return;
	}
	
	#ifdef USE_WXPHP_DEBUG
	php_printf("Calling original method\n");
	php_printf("===========================================\n\n");
	#endif
	
	//Call original method
	wxWindow::AddPendingEvent(event);

}
PHP_METHOD(php_wxWindow, AlwaysShowScrollbars)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::AlwaysShowScrollbars\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::AlwaysShowScrollbars\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool hflag0;
	bool vflag0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 0  && arguments_received <= 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '|bb' (&hflag0, &vflag0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "|bb", &hflag0, &vflag0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::AlwaysShowScrollbars()\n\n");
				#endif
				((wxWindow_php*)_this)->AlwaysShowScrollbars();


				return;
				break;
			}
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::AlwaysShowScrollbars(hflag0)\n\n");
				#endif
				((wxWindow_php*)_this)->AlwaysShowScrollbars(hflag0);


				return;
				break;
			}
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::AlwaysShowScrollbars(hflag0, vflag0)\n\n");
				#endif
				((wxWindow_php*)_this)->AlwaysShowScrollbars(hflag0, vflag0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, CacheBestSize)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::CacheBestSize\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::CacheBestSize\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* size0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&size0, php_wxSize_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &size0, php_wxSize_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(size0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(size0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(size0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(size0);
				}
				else if(Z_TYPE_P(size0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::CacheBestSize(*(wxSize*) object_pointer0_0)\n\n");
				#endif
				((wxWindow_php*)_this)->CacheBestSize(*(wxSize*) object_pointer0_0);

				references->AddReference(size0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, CanScroll)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::CanScroll\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::CanScroll\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long orient0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&orient0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &orient0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::CanScroll((int) orient0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->CanScroll((int) orient0));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, CanSetTransparent)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::CanSetTransparent\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::CanSetTransparent\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::CanSetTransparent())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->CanSetTransparent());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, CaptureMouse)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::CaptureMouse\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::CaptureMouse\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::CaptureMouse()\n\n");
				#endif
				((wxWindow_php*)_this)->CaptureMouse();


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, Center)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::Center\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::Center\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long dir0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 0  && arguments_received <= 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '|l' (&dir0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "|l", &dir0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::Center()\n\n");
				#endif
				((wxWindow_php*)_this)->Center();


				return;
				break;
			}
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::Center((int) dir0)\n\n");
				#endif
				((wxWindow_php*)_this)->Center((int) dir0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, CenterOnParent)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::CenterOnParent\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::CenterOnParent\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long dir0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 0  && arguments_received <= 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '|l' (&dir0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "|l", &dir0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::CenterOnParent()\n\n");
				#endif
				((wxWindow_php*)_this)->CenterOnParent();


				return;
				break;
			}
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::CenterOnParent((int) dir0)\n\n");
				#endif
				((wxWindow_php*)_this)->CenterOnParent((int) dir0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, Centre)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::Centre\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::Centre\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long direction0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 0  && arguments_received <= 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '|l' (&direction0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "|l", &direction0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::Centre()\n\n");
				#endif
				((wxWindow_php*)_this)->Centre();


				return;
				break;
			}
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::Centre((int) direction0)\n\n");
				#endif
				((wxWindow_php*)_this)->Centre((int) direction0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, CentreOnParent)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::CentreOnParent\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::CentreOnParent\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long direction0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 0  && arguments_received <= 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '|l' (&direction0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "|l", &direction0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::CentreOnParent()\n\n");
				#endif
				((wxWindow_php*)_this)->CentreOnParent();


				return;
				break;
			}
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::CentreOnParent((int) direction0)\n\n");
				#endif
				((wxWindow_php*)_this)->CentreOnParent((int) direction0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, ClearBackground)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::ClearBackground\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::ClearBackground\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::ClearBackground()\n\n");
				#endif
				((wxWindow_php*)_this)->ClearBackground();


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, ClientToScreen)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::ClientToScreen\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::ClientToScreen\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* pt0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&pt0, php_wxPoint_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &pt0, php_wxPoint_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(pt0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(pt0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(pt0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(pt0);
				}
				else if(Z_TYPE_P(pt0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::ClientToScreen(*(wxPoint*) object_pointer0_0) to return new object\n\n");
				#endif
				wxPoint value_to_return1;
				value_to_return1 = ((wxWindow_php*)_this)->ClientToScreen(*(wxPoint*) object_pointer0_0);
				void* ptr = safe_emalloc(1, sizeof(wxPoint_php), 0);
				memcpy(ptr, &value_to_return1, sizeof(wxPoint));
				object_init_ex(return_value, php_wxPoint_entry);
				add_property_resource(return_value, "wxResource", zend_list_insert(ptr, le_wxPoint));

				references->AddReference(pt0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, ClientToWindowSize)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::ClientToWindowSize\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::ClientToWindowSize\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* size0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&size0, php_wxSize_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &size0, php_wxSize_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(size0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(size0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(size0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(size0);
				}
				else if(Z_TYPE_P(size0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::ClientToWindowSize(*(wxSize*) object_pointer0_0) to return new object\n\n");
				#endif
				wxSize value_to_return1;
				value_to_return1 = ((wxWindow_php*)_this)->ClientToWindowSize(*(wxSize*) object_pointer0_0);
				void* ptr = safe_emalloc(1, sizeof(wxSize_php), 0);
				memcpy(ptr, &value_to_return1, sizeof(wxSize));
				object_init_ex(return_value, php_wxSize_entry);
				add_property_resource(return_value, "wxResource", zend_list_insert(ptr, le_wxSize));

				references->AddReference(size0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, ConvertDialogToPixels)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::ConvertDialogToPixels\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::ConvertDialogToPixels\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* pt0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
	//Parameters for overload 1
	zval* sz1 = 0;
	void* object_pointer1_0 = 0;
	bool overload1_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&pt0, php_wxPoint_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &pt0, php_wxPoint_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(pt0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(pt0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						goto overload1;
					}
				}
				else if(Z_TYPE_P(pt0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(pt0);
				}
				else if(Z_TYPE_P(pt0) != IS_NULL)
				{
						goto overload1;
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

	//Overload 1
	overload1:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&sz1, php_wxSize_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &sz1, php_wxSize_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(sz1) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(sz1), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer1_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer1_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(sz1) == IS_LONG)
				{
					object_pointer1_0 = Z_LVAL_P(sz1);
				}
				else if(Z_TYPE_P(sz1) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload1_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::ConvertDialogToPixels(*(wxPoint*) object_pointer0_0) to return new object\n\n");
				#endif
				wxPoint value_to_return1;
				value_to_return1 = ((wxWindow_php*)_this)->ConvertDialogToPixels(*(wxPoint*) object_pointer0_0);
				void* ptr = safe_emalloc(1, sizeof(wxPoint_php), 0);
				memcpy(ptr, &value_to_return1, sizeof(wxPoint));
				object_init_ex(return_value, php_wxPoint_entry);
				add_property_resource(return_value, "wxResource", zend_list_insert(ptr, le_wxPoint));

				references->AddReference(pt0);

				return;
				break;
			}
		}
	}

	
	if(overload1_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::ConvertDialogToPixels(*(wxSize*) object_pointer1_0) to return new object\n\n");
				#endif
				wxSize value_to_return1;
				value_to_return1 = ((wxWindow_php*)_this)->ConvertDialogToPixels(*(wxSize*) object_pointer1_0);
				void* ptr = safe_emalloc(1, sizeof(wxSize_php), 0);
				memcpy(ptr, &value_to_return1, sizeof(wxSize));
				object_init_ex(return_value, php_wxSize_entry);
				add_property_resource(return_value, "wxResource", zend_list_insert(ptr, le_wxSize));

				references->AddReference(sz1);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, ConvertPixelsToDialog)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::ConvertPixelsToDialog\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::ConvertPixelsToDialog\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* pt0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
	//Parameters for overload 1
	zval* sz1 = 0;
	void* object_pointer1_0 = 0;
	bool overload1_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&pt0, php_wxPoint_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &pt0, php_wxPoint_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(pt0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(pt0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						goto overload1;
					}
				}
				else if(Z_TYPE_P(pt0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(pt0);
				}
				else if(Z_TYPE_P(pt0) != IS_NULL)
				{
						goto overload1;
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

	//Overload 1
	overload1:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&sz1, php_wxSize_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &sz1, php_wxSize_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(sz1) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(sz1), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer1_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer1_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(sz1) == IS_LONG)
				{
					object_pointer1_0 = Z_LVAL_P(sz1);
				}
				else if(Z_TYPE_P(sz1) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload1_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::ConvertPixelsToDialog(*(wxPoint*) object_pointer0_0) to return new object\n\n");
				#endif
				wxPoint value_to_return1;
				value_to_return1 = ((wxWindow_php*)_this)->ConvertPixelsToDialog(*(wxPoint*) object_pointer0_0);
				void* ptr = safe_emalloc(1, sizeof(wxPoint_php), 0);
				memcpy(ptr, &value_to_return1, sizeof(wxPoint));
				object_init_ex(return_value, php_wxPoint_entry);
				add_property_resource(return_value, "wxResource", zend_list_insert(ptr, le_wxPoint));

				references->AddReference(pt0);

				return;
				break;
			}
		}
	}

	
	if(overload1_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::ConvertPixelsToDialog(*(wxSize*) object_pointer1_0) to return new object\n\n");
				#endif
				wxSize value_to_return1;
				value_to_return1 = ((wxWindow_php*)_this)->ConvertPixelsToDialog(*(wxSize*) object_pointer1_0);
				void* ptr = safe_emalloc(1, sizeof(wxSize_php), 0);
				memcpy(ptr, &value_to_return1, sizeof(wxSize));
				object_init_ex(return_value, php_wxSize_entry);
				add_property_resource(return_value, "wxResource", zend_list_insert(ptr, le_wxSize));

				references->AddReference(sz1);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, Create)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::Create\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::Create\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* parent0 = 0;
	void* object_pointer0_0 = 0;
	long id0;
	zval* pos0 = 0;
	void* object_pointer0_2 = 0;
	zval* size0 = 0;
	void* object_pointer0_3 = 0;
	long style0;
	char* name0;
	long name_len0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 2  && arguments_received <= 6)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'zl|OOls' (&parent0, &id0, &pos0, php_wxPoint_entry, &size0, php_wxSize_entry, &style0, &name0, &name_len0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "zl|OOls", &parent0, &id0, &pos0, php_wxPoint_entry, &size0, php_wxSize_entry, &style0, &name0, &name_len0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(parent0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(parent0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 || (rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(parent0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(parent0);
				}
				else if(Z_TYPE_P(parent0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 3){
				if(Z_TYPE_P(pos0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(pos0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_2 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_2 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(pos0) == IS_LONG)
				{
					object_pointer0_2 = Z_LVAL_P(pos0);
				}
				else if(Z_TYPE_P(pos0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 4){
				if(Z_TYPE_P(size0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(size0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_3 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_3 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(size0) == IS_LONG)
				{
					object_pointer0_3 = Z_LVAL_P(size0);
				}
				else if(Z_TYPE_P(size0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::Create((wxWindow*) object_pointer0_0, (wxWindowID) id0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->Create((wxWindow*) object_pointer0_0, (wxWindowID) id0));

				references->AddReference(parent0);

				return;
				break;
			}
			case 3:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2));

				references->AddReference(parent0);
				references->AddReference(pos0);

				return;
				break;
			}
			case 4:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2, *(wxSize*) object_pointer0_3))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2, *(wxSize*) object_pointer0_3));

				references->AddReference(parent0);
				references->AddReference(pos0);
				references->AddReference(size0);

				return;
				break;
			}
			case 5:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2, *(wxSize*) object_pointer0_3, (long) style0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2, *(wxSize*) object_pointer0_3, (long) style0));

				references->AddReference(parent0);
				references->AddReference(pos0);
				references->AddReference(size0);

				return;
				break;
			}
			case 6:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2, *(wxSize*) object_pointer0_3, (long) style0, wxString(name0, wxConvUTF8)))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->Create((wxWindow*) object_pointer0_0, (wxWindowID) id0, *(wxPoint*) object_pointer0_2, *(wxSize*) object_pointer0_3, (long) style0, wxString(name0, wxConvUTF8)));

				references->AddReference(parent0);
				references->AddReference(pos0);
				references->AddReference(size0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, DragAcceptFiles)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::DragAcceptFiles\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::DragAcceptFiles\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool accept0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'b' (&accept0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "b", &accept0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::DragAcceptFiles(accept0)\n\n");
				#endif
				((wxWindow_php*)_this)->DragAcceptFiles(accept0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, DoUpdateWindowUI)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::DoUpdateWindowUI\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::DoUpdateWindowUI\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* event0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&event0, php_wxUpdateUIEvent_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &event0, php_wxUpdateUIEvent_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(event0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(event0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(event0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(event0);
				}
				else if(Z_TYPE_P(event0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::DoUpdateWindowUI(*(wxUpdateUIEvent*) object_pointer0_0)\n\n");
				#endif
				((wxWindow_php*)_this)->DoUpdateWindowUI(*(wxUpdateUIEvent*) object_pointer0_0);

				references->AddReference(event0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, FindFocus)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::FindFocus\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::FindFocus\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Static ");
				php_printf("Executing wxWindow::FindFocus() to return object pointer\n\n");
				#endif
				wxWindow_php* value_to_return0;
				value_to_return0 = (wxWindow_php*) wxWindow::FindFocus();
				if(value_to_return0 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return0->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return0->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxWindow_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return0, le_wxWindow));
				}



				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, FindWindowByLabel)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::FindWindowByLabel\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::FindWindowByLabel\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	char* label0;
	long label_len0;
	zval* parent0 = 0;
	void* object_pointer0_1 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 1  && arguments_received <= 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 's|z' (&label0, &label_len0, &parent0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "s|z", &label0, &label_len0, &parent0 ) == SUCCESS)
		{
			if(arguments_received >= 2){
				if(Z_TYPE_P(parent0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(parent0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_1 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_1 || (rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(parent0) == IS_LONG)
				{
					object_pointer0_1 = Z_LVAL_P(parent0);
				}
				else if(Z_TYPE_P(parent0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Static ");
				php_printf("Executing wxWindow::FindWindowByLabel(wxString(label0, wxConvUTF8)) to return object pointer\n\n");
				#endif
				wxWindow_php* value_to_return1;
				value_to_return1 = (wxWindow_php*) wxWindow::FindWindowByLabel(wxString(label0, wxConvUTF8));
				if(value_to_return1 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return1->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return1->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxWindow_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return1, le_wxWindow));
				}



				return;
				break;
			}
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Static ");
				php_printf("Executing wxWindow::FindWindowByLabel(wxString(label0, wxConvUTF8), (const wxWindow*) object_pointer0_1) to return object pointer\n\n");
				#endif
				wxWindow_php* value_to_return2;
				value_to_return2 = (wxWindow_php*) wxWindow::FindWindowByLabel(wxString(label0, wxConvUTF8), (const wxWindow*) object_pointer0_1);
				if(value_to_return2 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return2->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return2->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxWindow_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return2, le_wxWindow));
				}



				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, FindWindowByName)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::FindWindowByName\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::FindWindowByName\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	char* name0;
	long name_len0;
	zval* parent0 = 0;
	void* object_pointer0_1 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 1  && arguments_received <= 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 's|z' (&name0, &name_len0, &parent0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "s|z", &name0, &name_len0, &parent0 ) == SUCCESS)
		{
			if(arguments_received >= 2){
				if(Z_TYPE_P(parent0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(parent0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_1 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_1 || (rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(parent0) == IS_LONG)
				{
					object_pointer0_1 = Z_LVAL_P(parent0);
				}
				else if(Z_TYPE_P(parent0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Static ");
				php_printf("Executing wxWindow::FindWindowByName(wxString(name0, wxConvUTF8)) to return object pointer\n\n");
				#endif
				wxWindow_php* value_to_return1;
				value_to_return1 = (wxWindow_php*) wxWindow::FindWindowByName(wxString(name0, wxConvUTF8));
				if(value_to_return1 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return1->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return1->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxWindow_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return1, le_wxWindow));
				}



				return;
				break;
			}
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Static ");
				php_printf("Executing wxWindow::FindWindowByName(wxString(name0, wxConvUTF8), (const wxWindow*) object_pointer0_1) to return object pointer\n\n");
				#endif
				wxWindow_php* value_to_return2;
				value_to_return2 = (wxWindow_php*) wxWindow::FindWindowByName(wxString(name0, wxConvUTF8), (const wxWindow*) object_pointer0_1);
				if(value_to_return2 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return2->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return2->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxWindow_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return2, le_wxWindow));
				}



				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, Fit)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::Fit\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::Fit\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::Fit()\n\n");
				#endif
				((wxWindow_php*)_this)->Fit();


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, FitInside)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::FitInside\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::FitInside\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::FitInside()\n\n");
				#endif
				((wxWindow_php*)_this)->FitInside();


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, Freeze)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::Freeze\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::Freeze\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::Freeze()\n\n");
				#endif
				((wxWindow_php*)_this)->Freeze();


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetAutoLayout)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetAutoLayout\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetAutoLayout\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::GetAutoLayout())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->GetAutoLayout());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetBackgroundColour)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetBackgroundColour\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetBackgroundColour\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::GetBackgroundColour() to return new object\n\n");
				#endif
				wxColour value_to_return0;
				value_to_return0 = ((wxWindow_php*)_this)->GetBackgroundColour();
				void* ptr = safe_emalloc(1, sizeof(wxColour_php), 0);
				memcpy(ptr, &value_to_return0, sizeof(wxColour));
				object_init_ex(return_value, php_wxColour_entry);
				add_property_resource(return_value, "wxResource", zend_list_insert(ptr, le_wxColour));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetBackgroundStyle)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetBackgroundStyle\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetBackgroundStyle\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxWindow::GetBackgroundStyle())\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxWindow_php*)_this)->GetBackgroundStyle());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetBestSize)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetBestSize\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetBestSize\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::GetBestSize() to return new object\n\n");
				#endif
				wxSize value_to_return0;
				value_to_return0 = ((wxWindow_php*)_this)->GetBestSize();
				void* ptr = safe_emalloc(1, sizeof(wxSize_php), 0);
				memcpy(ptr, &value_to_return0, sizeof(wxSize));
				object_init_ex(return_value, php_wxSize_entry);
				add_property_resource(return_value, "wxResource", zend_list_insert(ptr, le_wxSize));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetBestVirtualSize)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetBestVirtualSize\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetBestVirtualSize\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::GetBestVirtualSize() to return new object\n\n");
				#endif
				wxSize value_to_return0;
				value_to_return0 = ((wxWindow_php*)_this)->GetBestVirtualSize();
				void* ptr = safe_emalloc(1, sizeof(wxSize_php), 0);
				memcpy(ptr, &value_to_return0, sizeof(wxSize));
				object_init_ex(return_value, php_wxSize_entry);
				add_property_resource(return_value, "wxResource", zend_list_insert(ptr, le_wxSize));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetBorder)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetBorder\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetBorder\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long flags0;
	bool overload0_called = false;
	//Parameters for overload 1
	bool overload1_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&flags0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &flags0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

	//Overload 1
	overload1:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload1_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxWindow::GetBorder((long) flags0))\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxWindow_php*)_this)->GetBorder((long) flags0));


				return;
				break;
			}
		}
	}

	
	if(overload1_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxWindow::GetBorder())\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxWindow_php*)_this)->GetBorder());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetCapture)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetCapture\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetCapture\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Static ");
				php_printf("Executing wxWindow::GetCapture() to return object pointer\n\n");
				#endif
				wxWindow_php* value_to_return0;
				value_to_return0 = (wxWindow_php*) wxWindow::GetCapture();
				if(value_to_return0 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return0->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return0->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxWindow_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return0, le_wxWindow));
				}



				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetCaret)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetCaret\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetCaret\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::GetCaret() to return object pointer\n\n");
				#endif
				wxCaret_php* value_to_return0;
				value_to_return0 = (wxCaret_php*) ((wxWindow_php*)_this)->GetCaret();

				if(value_to_return0 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return0->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return0->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxCaret_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return0, le_wxCaret));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return0 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetCharHeight)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetCharHeight\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetCharHeight\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxWindow::GetCharHeight())\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxWindow_php*)_this)->GetCharHeight());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetCharWidth)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetCharWidth\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetCharWidth\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxWindow::GetCharWidth())\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxWindow_php*)_this)->GetCharWidth());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, Destroy)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::Destroy\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::Destroy\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::Destroy())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->Destroy());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, DestroyChildren)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::DestroyChildren\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::DestroyChildren\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::DestroyChildren())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->DestroyChildren());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetClientAreaOrigin)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetClientAreaOrigin\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetClientAreaOrigin\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::GetClientAreaOrigin() to return new object\n\n");
				#endif
				wxPoint value_to_return0;
				value_to_return0 = ((wxWindow_php*)_this)->GetClientAreaOrigin();
				void* ptr = safe_emalloc(1, sizeof(wxPoint_php), 0);
				memcpy(ptr, &value_to_return0, sizeof(wxPoint));
				object_init_ex(return_value, php_wxPoint_entry);
				add_property_resource(return_value, "wxResource", zend_list_insert(ptr, le_wxPoint));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetClientRect)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetClientRect\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetClientRect\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::GetClientRect() to return new object\n\n");
				#endif
				wxRect value_to_return0;
				value_to_return0 = ((wxWindow_php*)_this)->GetClientRect();
				void* ptr = safe_emalloc(1, sizeof(wxRect_php), 0);
				memcpy(ptr, &value_to_return0, sizeof(wxRect));
				object_init_ex(return_value, php_wxRect_entry);
				add_property_resource(return_value, "wxResource", zend_list_insert(ptr, le_wxRect));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetClientSize)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetClientSize\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetClientSize\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::GetClientSize() to return new object\n\n");
				#endif
				wxSize value_to_return0;
				value_to_return0 = ((wxWindow_php*)_this)->GetClientSize();
				void* ptr = safe_emalloc(1, sizeof(wxSize_php), 0);
				memcpy(ptr, &value_to_return0, sizeof(wxSize));
				object_init_ex(return_value, php_wxSize_entry);
				add_property_resource(return_value, "wxResource", zend_list_insert(ptr, le_wxSize));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetContainingSizer)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetContainingSizer\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetContainingSizer\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::GetContainingSizer() to return object pointer\n\n");
				#endif
				wxSizer_php* value_to_return0;
				value_to_return0 = (wxSizer_php*) ((wxWindow_php*)_this)->GetContainingSizer();

				if(value_to_return0 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return0->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return0->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxSizer_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return0, le_wxSizer));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return0 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetCursor)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetCursor\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetCursor\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::GetCursor() to return object reference\n\n");
				#endif
				wxCursor_php* value_to_return0;
				value_to_return0 = (wxCursor_php*) &((wxWindow_php*)_this)->GetCursor();

				if(value_to_return0->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return0->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxCursor_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return0, le_wxCursor));
				}

				if(value_to_return0 != _this && return_is_user_initialized){ //Prevent adding references to it self
					references->AddReference(return_value);
				}
				references->AddReference(return_value);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetEffectiveMinSize)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetEffectiveMinSize\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetEffectiveMinSize\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::GetEffectiveMinSize() to return new object\n\n");
				#endif
				wxSize value_to_return0;
				value_to_return0 = ((wxWindow_php*)_this)->GetEffectiveMinSize();
				void* ptr = safe_emalloc(1, sizeof(wxSize_php), 0);
				memcpy(ptr, &value_to_return0, sizeof(wxSize));
				object_init_ex(return_value, php_wxSize_entry);
				add_property_resource(return_value, "wxResource", zend_list_insert(ptr, le_wxSize));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetEventHandler)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetEventHandler\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetEventHandler\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::GetEventHandler() to return object pointer\n\n");
				#endif
				wxEvtHandler_php* value_to_return0;
				value_to_return0 = (wxEvtHandler_php*) ((wxWindow_php*)_this)->GetEventHandler();

				if(value_to_return0 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return0->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return0->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxEvtHandler_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return0, le_wxEvtHandler));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return0 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetExtraStyle)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetExtraStyle\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetExtraStyle\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxWindow::GetExtraStyle())\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxWindow_php*)_this)->GetExtraStyle());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetFont)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetFont\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetFont\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::GetFont() to return new object\n\n");
				#endif
				wxFont value_to_return0;
				value_to_return0 = ((wxWindow_php*)_this)->GetFont();
				void* ptr = safe_emalloc(1, sizeof(wxFont_php), 0);
				memcpy(ptr, &value_to_return0, sizeof(wxFont));
				object_init_ex(return_value, php_wxFont_entry);
				add_property_resource(return_value, "wxResource", zend_list_insert(ptr, le_wxFont));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetForegroundColour)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetForegroundColour\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetForegroundColour\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::GetForegroundColour() to return new object\n\n");
				#endif
				wxColour value_to_return0;
				value_to_return0 = ((wxWindow_php*)_this)->GetForegroundColour();
				void* ptr = safe_emalloc(1, sizeof(wxColour_php), 0);
				memcpy(ptr, &value_to_return0, sizeof(wxColour));
				object_init_ex(return_value, php_wxColour_entry);
				add_property_resource(return_value, "wxResource", zend_list_insert(ptr, le_wxColour));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetGrandParent)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetGrandParent\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetGrandParent\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::GetGrandParent() to return object pointer\n\n");
				#endif
				wxWindow_php* value_to_return0;
				value_to_return0 = (wxWindow_php*) ((wxWindow_php*)_this)->GetGrandParent();

				if(value_to_return0 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return0->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return0->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxWindow_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return0, le_wxWindow));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return0 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetHelpText)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetHelpText\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetHelpText\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_STRING(wxWindow::GetHelpText().fn_str(), 1)\n\n");
				#endif
				wxString value_to_return0;
				value_to_return0 = ((wxWindow_php*)_this)->GetHelpText();
				char* temp_string0;
				temp_string0 = (char*)malloc(sizeof(wxChar)*(value_to_return0.size()+1));
				strcpy (temp_string0, (const char *) value_to_return0.char_str() );
				ZVAL_STRING(return_value, temp_string0, 1);
				free(temp_string0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetHelpTextAtPoint)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetHelpTextAtPoint\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetHelpTextAtPoint\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* point0 = 0;
	void* object_pointer0_0 = 0;
	long origin0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'Ol' (&point0, php_wxPoint_entry, &origin0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "Ol", &point0, php_wxPoint_entry, &origin0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(point0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(point0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(point0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(point0);
				}
				else if(Z_TYPE_P(point0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_STRING(wxWindow::GetHelpTextAtPoint(*(wxPoint*) object_pointer0_0, (wxHelpEvent::Origin) origin0).fn_str(), 1)\n\n");
				#endif
				wxString value_to_return2;
				value_to_return2 = ((wxWindow_php*)_this)->GetHelpTextAtPoint(*(wxPoint*) object_pointer0_0, (wxHelpEvent::Origin) origin0);
				char* temp_string2;
				temp_string2 = (char*)malloc(sizeof(wxChar)*(value_to_return2.size()+1));
				strcpy (temp_string2, (const char *) value_to_return2.char_str() );
				ZVAL_STRING(return_value, temp_string2, 1);
				free(temp_string2);

				references->AddReference(point0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetId)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetId\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetId\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxWindow::GetId())\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxWindow_php*)_this)->GetId());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetLabel)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetLabel\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetLabel\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_STRING(wxWindow::GetLabel().fn_str(), 1)\n\n");
				#endif
				wxString value_to_return0;
				value_to_return0 = ((wxWindow_php*)_this)->GetLabel();
				char* temp_string0;
				temp_string0 = (char*)malloc(sizeof(wxChar)*(value_to_return0.size()+1));
				strcpy (temp_string0, (const char *) value_to_return0.char_str() );
				ZVAL_STRING(return_value, temp_string0, 1);
				free(temp_string0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetMaxClientSize)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetMaxClientSize\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetMaxClientSize\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::GetMaxClientSize() to return new object\n\n");
				#endif
				wxSize value_to_return0;
				value_to_return0 = ((wxWindow_php*)_this)->GetMaxClientSize();
				void* ptr = safe_emalloc(1, sizeof(wxSize_php), 0);
				memcpy(ptr, &value_to_return0, sizeof(wxSize));
				object_init_ex(return_value, php_wxSize_entry);
				add_property_resource(return_value, "wxResource", zend_list_insert(ptr, le_wxSize));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetMaxHeight)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetMaxHeight\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetMaxHeight\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxWindow::GetMaxHeight())\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxWindow_php*)_this)->GetMaxHeight());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetMaxSize)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetMaxSize\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetMaxSize\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::GetMaxSize() to return new object\n\n");
				#endif
				wxSize value_to_return0;
				value_to_return0 = ((wxWindow_php*)_this)->GetMaxSize();
				void* ptr = safe_emalloc(1, sizeof(wxSize_php), 0);
				memcpy(ptr, &value_to_return0, sizeof(wxSize));
				object_init_ex(return_value, php_wxSize_entry);
				add_property_resource(return_value, "wxResource", zend_list_insert(ptr, le_wxSize));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetMaxWidth)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetMaxWidth\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetMaxWidth\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxWindow::GetMaxWidth())\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxWindow_php*)_this)->GetMaxWidth());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetMinClientSize)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetMinClientSize\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetMinClientSize\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::GetMinClientSize() to return new object\n\n");
				#endif
				wxSize value_to_return0;
				value_to_return0 = ((wxWindow_php*)_this)->GetMinClientSize();
				void* ptr = safe_emalloc(1, sizeof(wxSize_php), 0);
				memcpy(ptr, &value_to_return0, sizeof(wxSize));
				object_init_ex(return_value, php_wxSize_entry);
				add_property_resource(return_value, "wxResource", zend_list_insert(ptr, le_wxSize));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetMinHeight)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetMinHeight\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetMinHeight\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxWindow::GetMinHeight())\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxWindow_php*)_this)->GetMinHeight());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetMinSize)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetMinSize\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetMinSize\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::GetMinSize() to return new object\n\n");
				#endif
				wxSize value_to_return0;
				value_to_return0 = ((wxWindow_php*)_this)->GetMinSize();
				void* ptr = safe_emalloc(1, sizeof(wxSize_php), 0);
				memcpy(ptr, &value_to_return0, sizeof(wxSize));
				object_init_ex(return_value, php_wxSize_entry);
				add_property_resource(return_value, "wxResource", zend_list_insert(ptr, le_wxSize));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetMinWidth)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetMinWidth\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetMinWidth\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxWindow::GetMinWidth())\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxWindow_php*)_this)->GetMinWidth());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetName)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetName\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetName\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_STRING(wxWindow::GetName().fn_str(), 1)\n\n");
				#endif
				wxString value_to_return0;
				value_to_return0 = ((wxWindow_php*)_this)->GetName();
				char* temp_string0;
				temp_string0 = (char*)malloc(sizeof(wxChar)*(value_to_return0.size()+1));
				strcpy (temp_string0, (const char *) value_to_return0.char_str() );
				ZVAL_STRING(return_value, temp_string0, 1);
				free(temp_string0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetNextSibling)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetNextSibling\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetNextSibling\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::GetNextSibling() to return object pointer\n\n");
				#endif
				wxWindow_php* value_to_return0;
				value_to_return0 = (wxWindow_php*) ((wxWindow_php*)_this)->GetNextSibling();

				if(value_to_return0 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return0->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return0->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxWindow_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return0, le_wxWindow));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return0 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetParent)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetParent\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetParent\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::GetParent() to return object pointer\n\n");
				#endif
				wxWindow_php* value_to_return0;
				value_to_return0 = (wxWindow_php*) ((wxWindow_php*)_this)->GetParent();

				if(value_to_return0 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return0->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return0->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxWindow_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return0, le_wxWindow));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return0 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetPopupMenuSelectionFromUser)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetPopupMenuSelectionFromUser\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetPopupMenuSelectionFromUser\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* menu0 = 0;
	void* object_pointer0_0 = 0;
	zval* pos0 = 0;
	void* object_pointer0_1 = 0;
	bool overload0_called = false;
	//Parameters for overload 1
	zval* menu1 = 0;
	void* object_pointer1_0 = 0;
	long x1;
	long y1;
	bool overload1_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 1  && arguments_received <= 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O|O' (&menu0, php_wxMenu_entry, &pos0, php_wxPoint_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O|O", &menu0, php_wxMenu_entry, &pos0, php_wxPoint_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(menu0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(menu0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						goto overload1;
					}
				}
				else if(Z_TYPE_P(menu0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(menu0);
				}
				else if(Z_TYPE_P(menu0) != IS_NULL)
				{
						goto overload1;
				}
			}

			if(arguments_received >= 2){
				if(Z_TYPE_P(pos0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(pos0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_1 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_1 )
					{
						goto overload1;
					}
				}
				else if(Z_TYPE_P(pos0) == IS_LONG)
				{
					object_pointer0_1 = Z_LVAL_P(pos0);
				}
				else if(Z_TYPE_P(pos0) != IS_NULL)
				{
						goto overload1;
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

	//Overload 1
	overload1:
	if(!already_called && arguments_received == 3)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'Oll' (&menu1, php_wxMenu_entry, &x1, &y1)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "Oll", &menu1, php_wxMenu_entry, &x1, &y1 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(menu1) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(menu1), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer1_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer1_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(menu1) == IS_LONG)
				{
					object_pointer1_0 = Z_LVAL_P(menu1);
				}
				else if(Z_TYPE_P(menu1) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload1_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxWindow::GetPopupMenuSelectionFromUser(*(wxMenu*) object_pointer0_0))\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxWindow_php*)_this)->GetPopupMenuSelectionFromUser(*(wxMenu*) object_pointer0_0));

				references->AddReference(menu0);

				return;
				break;
			}
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxWindow::GetPopupMenuSelectionFromUser(*(wxMenu*) object_pointer0_0, *(wxPoint*) object_pointer0_1))\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxWindow_php*)_this)->GetPopupMenuSelectionFromUser(*(wxMenu*) object_pointer0_0, *(wxPoint*) object_pointer0_1));

				references->AddReference(menu0);
				references->AddReference(pos0);

				return;
				break;
			}
		}
	}

	
	if(overload1_called)
	{
		switch(arguments_received)
		{
			case 3:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxWindow::GetPopupMenuSelectionFromUser(*(wxMenu*) object_pointer1_0, (int) x1, (int) y1))\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxWindow_php*)_this)->GetPopupMenuSelectionFromUser(*(wxMenu*) object_pointer1_0, (int) x1, (int) y1));

				references->AddReference(menu1);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetPosition)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetPosition\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetPosition\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::GetPosition() to return new object\n\n");
				#endif
				wxPoint value_to_return0;
				value_to_return0 = ((wxWindow_php*)_this)->GetPosition();
				void* ptr = safe_emalloc(1, sizeof(wxPoint_php), 0);
				memcpy(ptr, &value_to_return0, sizeof(wxPoint));
				object_init_ex(return_value, php_wxPoint_entry);
				add_property_resource(return_value, "wxResource", zend_list_insert(ptr, le_wxPoint));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetPrevSibling)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetPrevSibling\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetPrevSibling\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::GetPrevSibling() to return object pointer\n\n");
				#endif
				wxWindow_php* value_to_return0;
				value_to_return0 = (wxWindow_php*) ((wxWindow_php*)_this)->GetPrevSibling();

				if(value_to_return0 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return0->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return0->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxWindow_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return0, le_wxWindow));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return0 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetRect)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetRect\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetRect\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::GetRect() to return new object\n\n");
				#endif
				wxRect value_to_return0;
				value_to_return0 = ((wxWindow_php*)_this)->GetRect();
				void* ptr = safe_emalloc(1, sizeof(wxRect_php), 0);
				memcpy(ptr, &value_to_return0, sizeof(wxRect));
				object_init_ex(return_value, php_wxRect_entry);
				add_property_resource(return_value, "wxResource", zend_list_insert(ptr, le_wxRect));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetScreenPosition)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetScreenPosition\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetScreenPosition\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::GetScreenPosition() to return new object\n\n");
				#endif
				wxPoint value_to_return0;
				value_to_return0 = ((wxWindow_php*)_this)->GetScreenPosition();
				void* ptr = safe_emalloc(1, sizeof(wxPoint_php), 0);
				memcpy(ptr, &value_to_return0, sizeof(wxPoint));
				object_init_ex(return_value, php_wxPoint_entry);
				add_property_resource(return_value, "wxResource", zend_list_insert(ptr, le_wxPoint));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetScreenRect)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetScreenRect\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetScreenRect\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::GetScreenRect() to return new object\n\n");
				#endif
				wxRect value_to_return0;
				value_to_return0 = ((wxWindow_php*)_this)->GetScreenRect();
				void* ptr = safe_emalloc(1, sizeof(wxRect_php), 0);
				memcpy(ptr, &value_to_return0, sizeof(wxRect));
				object_init_ex(return_value, php_wxRect_entry);
				add_property_resource(return_value, "wxResource", zend_list_insert(ptr, le_wxRect));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetScrollPos)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetScrollPos\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetScrollPos\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long orientation0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&orientation0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &orientation0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxWindow::GetScrollPos((int) orientation0))\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxWindow_php*)_this)->GetScrollPos((int) orientation0));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetScrollRange)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetScrollRange\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetScrollRange\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long orientation0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&orientation0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &orientation0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxWindow::GetScrollRange((int) orientation0))\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxWindow_php*)_this)->GetScrollRange((int) orientation0));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetScrollThumb)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetScrollThumb\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetScrollThumb\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long orientation0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&orientation0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &orientation0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxWindow::GetScrollThumb((int) orientation0))\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxWindow_php*)_this)->GetScrollThumb((int) orientation0));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetSize)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetSize\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetSize\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::GetSize() to return new object\n\n");
				#endif
				wxSize value_to_return0;
				value_to_return0 = ((wxWindow_php*)_this)->GetSize();
				void* ptr = safe_emalloc(1, sizeof(wxSize_php), 0);
				memcpy(ptr, &value_to_return0, sizeof(wxSize));
				object_init_ex(return_value, php_wxSize_entry);
				add_property_resource(return_value, "wxResource", zend_list_insert(ptr, le_wxSize));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetSizer)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetSizer\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetSizer\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::GetSizer() to return object pointer\n\n");
				#endif
				wxSizer_php* value_to_return0;
				value_to_return0 = (wxSizer_php*) ((wxWindow_php*)_this)->GetSizer();

				if(value_to_return0 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return0->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return0->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxSizer_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return0, le_wxSizer));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return0 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetTextExtent)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetTextExtent\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetTextExtent\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	char* string0;
	long string_len0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 's' (&string0, &string_len0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "s", &string0, &string_len0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::GetTextExtent(wxString(string0, wxConvUTF8)) to return new object\n\n");
				#endif
				wxSize value_to_return1;
				value_to_return1 = ((wxWindow_php*)_this)->GetTextExtent(wxString(string0, wxConvUTF8));
				void* ptr = safe_emalloc(1, sizeof(wxSize_php), 0);
				memcpy(ptr, &value_to_return1, sizeof(wxSize));
				object_init_ex(return_value, php_wxSize_entry);
				add_property_resource(return_value, "wxResource", zend_list_insert(ptr, le_wxSize));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetToolTip)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetToolTip\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetToolTip\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::GetToolTip() to return object pointer\n\n");
				#endif
				wxToolTip_php* value_to_return0;
				value_to_return0 = (wxToolTip_php*) ((wxWindow_php*)_this)->GetToolTip();

				if(value_to_return0 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return0->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return0->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxToolTip_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return0, le_wxToolTip));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return0 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetToolTipText)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetToolTipText\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetToolTipText\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_STRING(wxWindow::GetToolTipText().fn_str(), 1)\n\n");
				#endif
				wxString value_to_return0;
				value_to_return0 = ((wxWindow_php*)_this)->GetToolTipText();
				char* temp_string0;
				temp_string0 = (char*)malloc(sizeof(wxChar)*(value_to_return0.size()+1));
				strcpy (temp_string0, (const char *) value_to_return0.char_str() );
				ZVAL_STRING(return_value, temp_string0, 1);
				free(temp_string0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetUpdateClientRect)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetUpdateClientRect\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetUpdateClientRect\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::GetUpdateClientRect() to return new object\n\n");
				#endif
				wxRect value_to_return0;
				value_to_return0 = ((wxWindow_php*)_this)->GetUpdateClientRect();
				void* ptr = safe_emalloc(1, sizeof(wxRect_php), 0);
				memcpy(ptr, &value_to_return0, sizeof(wxRect));
				object_init_ex(return_value, php_wxRect_entry);
				add_property_resource(return_value, "wxResource", zend_list_insert(ptr, le_wxRect));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetUpdateRegion)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetUpdateRegion\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetUpdateRegion\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::GetUpdateRegion() to return object reference\n\n");
				#endif
				wxRegion_php* value_to_return0;
				value_to_return0 = (wxRegion_php*) &((wxWindow_php*)_this)->GetUpdateRegion();

				if(value_to_return0->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return0->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxRegion_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return0, le_wxRegion));
				}

				if(value_to_return0 != _this && return_is_user_initialized){ //Prevent adding references to it self
					references->AddReference(return_value);
				}
				references->AddReference(return_value);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetValidator)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetValidator\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetValidator\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::GetValidator() to return object pointer\n\n");
				#endif
				wxValidator_php* value_to_return0;
				value_to_return0 = (wxValidator_php*) ((wxWindow_php*)_this)->GetValidator();

				if(value_to_return0 == NULL){
					ZVAL_NULL(return_value);
				}
				else if(value_to_return0->references.IsUserInitialized()){
					if(zend_hash_find(Z_OBJPROP_P(value_to_return0->phpObj), _wxResource, sizeof(_wxResource),  (void **)&tmp) == SUCCESS){
						return_value = *tmp;
						return_is_user_initialized = true;
					}
					else{
						zend_error(E_ERROR, "Could not retreive original zval.");
					}
				}
				else{
					object_init_ex(return_value,php_wxValidator_entry);
					add_property_resource(return_value, "wxResource", zend_list_insert(value_to_return0, le_wxValidator));
				}

				if(Z_TYPE_P(return_value) != IS_NULL && value_to_return0 != _this && return_is_user_initialized){
					references->AddReference(return_value);
				}


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetVirtualSize)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetVirtualSize\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetVirtualSize\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::GetVirtualSize() to return new object\n\n");
				#endif
				wxSize value_to_return0;
				value_to_return0 = ((wxWindow_php*)_this)->GetVirtualSize();
				void* ptr = safe_emalloc(1, sizeof(wxSize_php), 0);
				memcpy(ptr, &value_to_return0, sizeof(wxSize));
				object_init_ex(return_value, php_wxSize_entry);
				add_property_resource(return_value, "wxResource", zend_list_insert(ptr, le_wxSize));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetWindowBorderSize)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetWindowBorderSize\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetWindowBorderSize\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::GetWindowBorderSize() to return new object\n\n");
				#endif
				wxSize value_to_return0;
				value_to_return0 = ((wxWindow_php*)_this)->GetWindowBorderSize();
				void* ptr = safe_emalloc(1, sizeof(wxSize_php), 0);
				memcpy(ptr, &value_to_return0, sizeof(wxSize));
				object_init_ex(return_value, php_wxSize_entry);
				add_property_resource(return_value, "wxResource", zend_list_insert(ptr, le_wxSize));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetWindowStyle)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetWindowStyle\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetWindowStyle\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxWindow::GetWindowStyle())\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxWindow_php*)_this)->GetWindowStyle());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetWindowStyleFlag)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetWindowStyleFlag\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetWindowStyleFlag\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxWindow::GetWindowStyleFlag())\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxWindow_php*)_this)->GetWindowStyleFlag());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetWindowVariant)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetWindowVariant\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetWindowVariant\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxWindow::GetWindowVariant())\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxWindow_php*)_this)->GetWindowVariant());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, HandleAsNavigationKey)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::HandleAsNavigationKey\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::HandleAsNavigationKey\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* event0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&event0, php_wxKeyEvent_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &event0, php_wxKeyEvent_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(event0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(event0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(event0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(event0);
				}
				else if(Z_TYPE_P(event0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::HandleAsNavigationKey(*(wxKeyEvent*) object_pointer0_0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->HandleAsNavigationKey(*(wxKeyEvent*) object_pointer0_0));

				references->AddReference(event0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, HandleWindowEvent)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::HandleWindowEvent\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::HandleWindowEvent\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* event0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&event0, php_wxEvent_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &event0, php_wxEvent_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(event0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(event0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(event0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(event0);
				}
				else if(Z_TYPE_P(event0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::HandleWindowEvent(*(wxEvent*) object_pointer0_0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->HandleWindowEvent(*(wxEvent*) object_pointer0_0));

				references->AddReference(event0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, HasCapture)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::HasCapture\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::HasCapture\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::HasCapture())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->HasCapture());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, HasExtraStyle)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::HasExtraStyle\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::HasExtraStyle\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long exFlag0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&exFlag0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &exFlag0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::HasExtraStyle((int) exFlag0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->HasExtraStyle((int) exFlag0));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, HasFlag)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::HasFlag\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::HasFlag\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long flag0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&flag0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &flag0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::HasFlag((int) flag0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->HasFlag((int) flag0));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, HasFocus)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::HasFocus\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::HasFocus\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::HasFocus())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->HasFocus());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, HasMultiplePages)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::HasMultiplePages\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::HasMultiplePages\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::HasMultiplePages())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->HasMultiplePages());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, HasScrollbar)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::HasScrollbar\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::HasScrollbar\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long orient0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&orient0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &orient0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::HasScrollbar((int) orient0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->HasScrollbar((int) orient0));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, HasTransparentBackground)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::HasTransparentBackground\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::HasTransparentBackground\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::HasTransparentBackground())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->HasTransparentBackground());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, Hide)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::Hide\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::Hide\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::Hide())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->Hide());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, HitTest)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::HitTest\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::HitTest\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long x0;
	long y0;
	bool overload0_called = false;
	//Parameters for overload 1
	zval* pt1 = 0;
	void* object_pointer1_0 = 0;
	bool overload1_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'll' (&x0, &y0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "ll", &x0, &y0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

	//Overload 1
	overload1:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&pt1, php_wxPoint_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &pt1, php_wxPoint_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(pt1) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(pt1), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer1_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer1_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(pt1) == IS_LONG)
				{
					object_pointer1_0 = Z_LVAL_P(pt1);
				}
				else if(Z_TYPE_P(pt1) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload1_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxWindow::HitTest((wxCoord) x0, (wxCoord) y0))\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxWindow_php*)_this)->HitTest((wxCoord) x0, (wxCoord) y0));


				return;
				break;
			}
		}
	}

	
	if(overload1_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxWindow::HitTest(*(wxPoint*) object_pointer1_0))\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxWindow_php*)_this)->HitTest(*(wxPoint*) object_pointer1_0));

				references->AddReference(pt1);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, GetLayoutDirection)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::GetLayoutDirection\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::GetLayoutDirection\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_LONG(wxWindow::GetLayoutDirection())\n\n");
				#endif
				ZVAL_LONG(return_value, ((wxWindow_php*)_this)->GetLayoutDirection());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, InitDialog)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::InitDialog\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::InitDialog\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::InitDialog()\n\n");
				#endif
				((wxWindow_php*)_this)->InitDialog();


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, InheritAttributes)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::InheritAttributes\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::InheritAttributes\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::InheritAttributes()\n\n");
				#endif
				((wxWindow_php*)_this)->InheritAttributes();


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, InformFirstDirection)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::InformFirstDirection\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::InformFirstDirection\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long direction0;
	long size0;
	long availableOtherDir0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 3)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'lll' (&direction0, &size0, &availableOtherDir0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "lll", &direction0, &size0, &availableOtherDir0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 3:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::InformFirstDirection((int) direction0, (int) size0, (int) availableOtherDir0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->InformFirstDirection((int) direction0, (int) size0, (int) availableOtherDir0));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, InvalidateBestSize)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::InvalidateBestSize\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::InvalidateBestSize\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::InvalidateBestSize()\n\n");
				#endif
				((wxWindow_php*)_this)->InvalidateBestSize();


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, IsBeingDeleted)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::IsBeingDeleted\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::IsBeingDeleted\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::IsBeingDeleted())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->IsBeingDeleted());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, IsDoubleBuffered)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::IsDoubleBuffered\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::IsDoubleBuffered\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::IsDoubleBuffered())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->IsDoubleBuffered());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, IsEnabled)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::IsEnabled\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::IsEnabled\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::IsEnabled())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->IsEnabled());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, IsExposed)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::IsExposed\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::IsExposed\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long x0;
	long y0;
	bool overload0_called = false;
	//Parameters for overload 1
	zval* pt1 = 0;
	void* object_pointer1_0 = 0;
	bool overload1_called = false;
	//Parameters for overload 2
	long x2;
	long y2;
	long w2;
	long h2;
	bool overload2_called = false;
	//Parameters for overload 3
	zval* rect3 = 0;
	void* object_pointer3_0 = 0;
	bool overload3_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'll' (&x0, &y0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "ll", &x0, &y0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

	//Overload 1
	overload1:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&pt1, php_wxPoint_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &pt1, php_wxPoint_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(pt1) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(pt1), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer1_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer1_0 )
					{
						goto overload2;
					}
				}
				else if(Z_TYPE_P(pt1) == IS_LONG)
				{
					object_pointer1_0 = Z_LVAL_P(pt1);
				}
				else if(Z_TYPE_P(pt1) != IS_NULL)
				{
						goto overload2;
				}
			}

			overload1_called = true;
			already_called = true;
		}
	}

	//Overload 2
	overload2:
	if(!already_called && arguments_received == 4)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'llll' (&x2, &y2, &w2, &h2)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "llll", &x2, &y2, &w2, &h2 ) == SUCCESS)
		{
			overload2_called = true;
			already_called = true;
		}
	}

	//Overload 3
	overload3:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&rect3, php_wxRect_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &rect3, php_wxRect_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(rect3) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(rect3), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer3_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer3_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(rect3) == IS_LONG)
				{
					object_pointer3_0 = Z_LVAL_P(rect3);
				}
				else if(Z_TYPE_P(rect3) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload3_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::IsExposed((int) x0, (int) y0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->IsExposed((int) x0, (int) y0));


				return;
				break;
			}
		}
	}

	
	if(overload1_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::IsExposed(*(wxPoint*) object_pointer1_0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->IsExposed(*(wxPoint*) object_pointer1_0));

				references->AddReference(pt1);

				return;
				break;
			}
		}
	}

	
	if(overload2_called)
	{
		switch(arguments_received)
		{
			case 4:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::IsExposed((int) x2, (int) y2, (int) w2, (int) h2))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->IsExposed((int) x2, (int) y2, (int) w2, (int) h2));


				return;
				break;
			}
		}
	}

	
	if(overload3_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::IsExposed(*(wxRect*) object_pointer3_0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->IsExposed(*(wxRect*) object_pointer3_0));

				references->AddReference(rect3);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, IsFrozen)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::IsFrozen\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::IsFrozen\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::IsFrozen())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->IsFrozen());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, IsRetained)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::IsRetained\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::IsRetained\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::IsRetained())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->IsRetained());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, IsScrollbarAlwaysShown)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::IsScrollbarAlwaysShown\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::IsScrollbarAlwaysShown\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long orient0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&orient0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &orient0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::IsScrollbarAlwaysShown((int) orient0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->IsScrollbarAlwaysShown((int) orient0));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, IsShown)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::IsShown\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::IsShown\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::IsShown())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->IsShown());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, IsShownOnScreen)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::IsShownOnScreen\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::IsShownOnScreen\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::IsShownOnScreen())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->IsShownOnScreen());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, IsThisEnabled)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::IsThisEnabled\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::IsThisEnabled\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::IsThisEnabled())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->IsThisEnabled());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, IsTopLevel)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::IsTopLevel\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::IsTopLevel\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::IsTopLevel())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->IsTopLevel());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, Layout)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::Layout\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::Layout\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::Layout())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->Layout());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, LineDown)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::LineDown\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::LineDown\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::LineDown())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->LineDown());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, LineUp)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::LineUp\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::LineUp\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::LineUp())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->LineUp());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, Lower)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::Lower\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::Lower\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::Lower()\n\n");
				#endif
				((wxWindow_php*)_this)->Lower();


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, MakeModal)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::MakeModal\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::MakeModal\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool modal0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 0  && arguments_received <= 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '|b' (&modal0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "|b", &modal0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::MakeModal()\n\n");
				#endif
				((wxWindow_php*)_this)->MakeModal();


				return;
				break;
			}
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::MakeModal(modal0)\n\n");
				#endif
				((wxWindow_php*)_this)->MakeModal(modal0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, Move)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::Move\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::Move\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long x0;
	long y0;
	long flags0;
	bool overload0_called = false;
	//Parameters for overload 1
	zval* pt1 = 0;
	void* object_pointer1_0 = 0;
	long flags1;
	bool overload1_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 2  && arguments_received <= 3)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'll|l' (&x0, &y0, &flags0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "ll|l", &x0, &y0, &flags0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

	//Overload 1
	overload1:
	if(!already_called && arguments_received >= 1  && arguments_received <= 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O|l' (&pt1, php_wxPoint_entry, &flags1)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O|l", &pt1, php_wxPoint_entry, &flags1 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(pt1) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(pt1), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer1_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer1_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(pt1) == IS_LONG)
				{
					object_pointer1_0 = Z_LVAL_P(pt1);
				}
				else if(Z_TYPE_P(pt1) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload1_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::Move((int) x0, (int) y0)\n\n");
				#endif
				((wxWindow_php*)_this)->Move((int) x0, (int) y0);


				return;
				break;
			}
			case 3:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::Move((int) x0, (int) y0, (int) flags0)\n\n");
				#endif
				((wxWindow_php*)_this)->Move((int) x0, (int) y0, (int) flags0);


				return;
				break;
			}
		}
	}

	
	if(overload1_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::Move(*(wxPoint*) object_pointer1_0)\n\n");
				#endif
				((wxWindow_php*)_this)->Move(*(wxPoint*) object_pointer1_0);

				references->AddReference(pt1);

				return;
				break;
			}
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::Move(*(wxPoint*) object_pointer1_0, (int) flags1)\n\n");
				#endif
				((wxWindow_php*)_this)->Move(*(wxPoint*) object_pointer1_0, (int) flags1);

				references->AddReference(pt1);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, MoveAfterInTabOrder)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::MoveAfterInTabOrder\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::MoveAfterInTabOrder\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* win0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'z' (&win0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "z", &win0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(win0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(win0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 || (rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(win0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(win0);
				}
				else if(Z_TYPE_P(win0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::MoveAfterInTabOrder((wxWindow*) object_pointer0_0)\n\n");
				#endif
				((wxWindow_php*)_this)->MoveAfterInTabOrder((wxWindow*) object_pointer0_0);

				references->AddReference(win0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, MoveBeforeInTabOrder)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::MoveBeforeInTabOrder\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::MoveBeforeInTabOrder\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* win0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'z' (&win0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "z", &win0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(win0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(win0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 || (rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(win0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(win0);
				}
				else if(Z_TYPE_P(win0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::MoveBeforeInTabOrder((wxWindow*) object_pointer0_0)\n\n");
				#endif
				((wxWindow_php*)_this)->MoveBeforeInTabOrder((wxWindow*) object_pointer0_0);

				references->AddReference(win0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, Navigate)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::Navigate\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::Navigate\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long flags0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 0  && arguments_received <= 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '|l' (&flags0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "|l", &flags0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::Navigate())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->Navigate());


				return;
				break;
			}
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::Navigate((int) flags0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->Navigate((int) flags0));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, NavigateIn)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::NavigateIn\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::NavigateIn\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long flags0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 0  && arguments_received <= 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '|l' (&flags0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "|l", &flags0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::NavigateIn())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->NavigateIn());


				return;
				break;
			}
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::NavigateIn((int) flags0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->NavigateIn((int) flags0));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, NewControlId)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::NewControlId\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::NewControlId\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long count0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 0  && arguments_received <= 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '|l' (&count0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "|l", &count0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Static ");
				php_printf("Executing RETURN_LONG(wxWindow::NewControlId())\n\n");
				#endif
				ZVAL_LONG(return_value, wxWindow::NewControlId());


				return;
				break;
			}
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Static ");
				php_printf("Executing RETURN_LONG(wxWindow::NewControlId((int) count0))\n\n");
				#endif
				ZVAL_LONG(return_value, wxWindow::NewControlId((int) count0));


				return;
				break;
			}
		}
	}

		
}
void wxWindow_php::OnInternalIdle()
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking virtual wxWindow::OnInternalIdle\n");
	php_printf("===========================================\n");
	#endif
	
	int arguments = NULL;

	zval* return_value;
	MAKE_STD_ZVAL(return_value);
	zval function_name;
	ZVAL_STRING(&function_name, "OnInternalIdle", 0);
	char* temp_string;
	char _wxResource[] = "wxResource";
	zval **tmp;
	int id_to_find;
	void* return_object;
	int rsrc_type;
	
	//Parameters for conversion
		
	#ifdef USE_WXPHP_DEBUG
	php_printf("Trying to call user defined method\n");
	#endif
	
	if(call_user_function(NULL, (zval**) &this->phpObj, &function_name, return_value, 0, arguments TSRMLS_CC) == FAILURE)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Invocation of user defined method failed\n");
		#endif
		
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Returning userspace value.\n");
		#endif
		
		return;
	}
	
	#ifdef USE_WXPHP_DEBUG
	php_printf("Calling original method\n");
	php_printf("===========================================\n\n");
	#endif
	
	//Call original method
	wxWindow::OnInternalIdle();

}
PHP_METHOD(php_wxWindow, PageDown)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::PageDown\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::PageDown\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::PageDown())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->PageDown());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, PageUp)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::PageUp\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::PageUp\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::PageUp())\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->PageUp());


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, PopupMenu)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::PopupMenu\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::PopupMenu\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* menu0 = 0;
	void* object_pointer0_0 = 0;
	zval* pos0 = 0;
	void* object_pointer0_1 = 0;
	bool overload0_called = false;
	//Parameters for overload 1
	zval* menu1 = 0;
	void* object_pointer1_0 = 0;
	long x1;
	long y1;
	bool overload1_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 1  && arguments_received <= 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'z|O' (&menu0, &pos0, php_wxPoint_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "z|O", &menu0, &pos0, php_wxPoint_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(menu0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(menu0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						goto overload1;
					}
				}
				else if(Z_TYPE_P(menu0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(menu0);
				}
				else if(Z_TYPE_P(menu0) != IS_NULL)
				{
						goto overload1;
				}
			}

			if(arguments_received >= 2){
				if(Z_TYPE_P(pos0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(pos0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_1 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_1 )
					{
						goto overload1;
					}
				}
				else if(Z_TYPE_P(pos0) == IS_LONG)
				{
					object_pointer0_1 = Z_LVAL_P(pos0);
				}
				else if(Z_TYPE_P(pos0) != IS_NULL)
				{
						goto overload1;
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

	//Overload 1
	overload1:
	if(!already_called && arguments_received == 3)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'zll' (&menu1, &x1, &y1)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "zll", &menu1, &x1, &y1 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(menu1) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(menu1), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer1_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer1_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(menu1) == IS_LONG)
				{
					object_pointer1_0 = Z_LVAL_P(menu1);
				}
				else if(Z_TYPE_P(menu1) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload1_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::PopupMenu((wxMenu*) object_pointer0_0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->PopupMenu((wxMenu*) object_pointer0_0));

				references->AddReference(menu0);

				return;
				break;
			}
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::PopupMenu((wxMenu*) object_pointer0_0, *(wxPoint*) object_pointer0_1))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->PopupMenu((wxMenu*) object_pointer0_0, *(wxPoint*) object_pointer0_1));

				references->AddReference(menu0);
				references->AddReference(pos0);

				return;
				break;
			}
		}
	}

	
	if(overload1_called)
	{
		switch(arguments_received)
		{
			case 3:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::PopupMenu((wxMenu*) object_pointer1_0, (int) x1, (int) y1))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->PopupMenu((wxMenu*) object_pointer1_0, (int) x1, (int) y1));

				references->AddReference(menu1);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, PostSizeEvent)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::PostSizeEvent\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::PostSizeEvent\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::PostSizeEvent()\n\n");
				#endif
				((wxWindow_php*)_this)->PostSizeEvent();


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, PostSizeEventToParent)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::PostSizeEventToParent\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::PostSizeEventToParent\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::PostSizeEventToParent()\n\n");
				#endif
				((wxWindow_php*)_this)->PostSizeEventToParent();


				return;
				break;
			}
		}
	}

		
}
bool wxWindow_php::ProcessEvent(wxEvent& event)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking virtual wxWindow::ProcessEvent\n");
	php_printf("===========================================\n");
	#endif
	
	zval *arguments[1];
	
	//Initilize arguments array
	for(int i=0; i<1; i++)
	{
		MAKE_STD_ZVAL(arguments[i]);
	}

	zval* return_value;
	MAKE_STD_ZVAL(return_value);
	zval function_name;
	ZVAL_STRING(&function_name, "ProcessEvent", 0);
	char* temp_string;
	char _wxResource[] = "wxResource";
	zval **tmp;
	int id_to_find;
	void* return_object;
	int rsrc_type;
	
	//Parameters for conversion
	object_init_ex(arguments[0], php_wxEvent_entry);
	add_property_resource(arguments[0], _wxResource, zend_list_insert(&event, le_wxEvent));
		
	#ifdef USE_WXPHP_DEBUG
	php_printf("Trying to call user defined method\n");
	#endif
	
	if(call_user_function(NULL, (zval**) &this->phpObj, &function_name, return_value, 1, arguments TSRMLS_CC) == FAILURE)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Invocation of user defined method failed\n");
		#endif
		
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Returning userspace value.\n");
		#endif
		
		return Z_BVAL_P(return_value);
	}
	
	#ifdef USE_WXPHP_DEBUG
	php_printf("Calling original method\n");
	php_printf("===========================================\n\n");
	#endif
	
	//Call original method
	return wxWindow::ProcessEvent(event);

}
PHP_METHOD(php_wxWindow, ProcessWindowEvent)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::ProcessWindowEvent\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::ProcessWindowEvent\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* event0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&event0, php_wxEvent_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &event0, php_wxEvent_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(event0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(event0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(event0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(event0);
				}
				else if(Z_TYPE_P(event0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::ProcessWindowEvent(*(wxEvent*) object_pointer0_0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->ProcessWindowEvent(*(wxEvent*) object_pointer0_0));

				references->AddReference(event0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, ProcessWindowEventLocally)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::ProcessWindowEventLocally\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::ProcessWindowEventLocally\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* event0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&event0, php_wxEvent_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &event0, php_wxEvent_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(event0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(event0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(event0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(event0);
				}
				else if(Z_TYPE_P(event0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::ProcessWindowEventLocally(*(wxEvent*) object_pointer0_0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->ProcessWindowEventLocally(*(wxEvent*) object_pointer0_0));

				references->AddReference(event0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, PushEventHandler)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::PushEventHandler\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::PushEventHandler\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* handler0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'z' (&handler0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "z", &handler0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(handler0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(handler0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 || (rsrc_type != le_wxWindow && rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow && rsrc_type != le_wxValidator && rsrc_type != le_wxTextValidator && rsrc_type != le_wxGenericValidator && rsrc_type != le_wxMenu && rsrc_type != le_wxAuiManager && rsrc_type != le_wxMouseEventsManager && rsrc_type != le_wxTimer && rsrc_type != le_wxEventBlocker && rsrc_type != le_wxProcess && rsrc_type != le_wxFileSystemWatcher && rsrc_type != le_wxTaskBarIcon && rsrc_type != le_wxNotificationMessage))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(handler0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(handler0);
				}
				else if(Z_TYPE_P(handler0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::PushEventHandler((wxEvtHandler*) object_pointer0_0)\n\n");
				#endif
				((wxWindow_php*)_this)->PushEventHandler((wxEvtHandler*) object_pointer0_0);

				references->AddReference(handler0);

				return;
				break;
			}
		}
	}

		
}
void wxWindow_php::QueueEvent(wxEvent* event)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking virtual wxWindow::QueueEvent\n");
	php_printf("===========================================\n");
	#endif
	
	zval *arguments[1];
	
	//Initilize arguments array
	for(int i=0; i<1; i++)
	{
		MAKE_STD_ZVAL(arguments[i]);
	}

	zval* return_value;
	MAKE_STD_ZVAL(return_value);
	zval function_name;
	ZVAL_STRING(&function_name, "QueueEvent", 0);
	char* temp_string;
	char _wxResource[] = "wxResource";
	zval **tmp;
	int id_to_find;
	void* return_object;
	int rsrc_type;
	
	//Parameters for conversion
	object_init_ex(arguments[0], php_wxEvent_entry);
	add_property_resource(arguments[0], _wxResource, zend_list_insert(event, le_wxEvent));
		
	#ifdef USE_WXPHP_DEBUG
	php_printf("Trying to call user defined method\n");
	#endif
	
	if(call_user_function(NULL, (zval**) &this->phpObj, &function_name, return_value, 1, arguments TSRMLS_CC) == FAILURE)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Invocation of user defined method failed\n");
		#endif
		
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Returning userspace value.\n");
		#endif
		
		return;
	}
	
	#ifdef USE_WXPHP_DEBUG
	php_printf("Calling original method\n");
	php_printf("===========================================\n\n");
	#endif
	
	//Call original method
	wxWindow::QueueEvent(event);

}
PHP_METHOD(php_wxWindow, Raise)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::Raise\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::Raise\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::Raise()\n\n");
				#endif
				((wxWindow_php*)_this)->Raise();


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, Refresh)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::Refresh\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::Refresh\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool eraseBackground0;
	zval* rect0 = 0;
	void* object_pointer0_1 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 0  && arguments_received <= 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '|bz' (&eraseBackground0, &rect0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "|bz", &eraseBackground0, &rect0 ) == SUCCESS)
		{
			if(arguments_received >= 2){
				if(Z_TYPE_P(rect0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(rect0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_1 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_1 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(rect0) == IS_LONG)
				{
					object_pointer0_1 = Z_LVAL_P(rect0);
				}
				else if(Z_TYPE_P(rect0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::Refresh()\n\n");
				#endif
				((wxWindow_php*)_this)->Refresh();


				return;
				break;
			}
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::Refresh(eraseBackground0)\n\n");
				#endif
				((wxWindow_php*)_this)->Refresh(eraseBackground0);


				return;
				break;
			}
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::Refresh(eraseBackground0, (const wxRect*) object_pointer0_1)\n\n");
				#endif
				((wxWindow_php*)_this)->Refresh(eraseBackground0, (const wxRect*) object_pointer0_1);

				references->AddReference(rect0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, RefreshRect)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::RefreshRect\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::RefreshRect\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* rect0 = 0;
	void* object_pointer0_0 = 0;
	bool eraseBackground0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 1  && arguments_received <= 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O|b' (&rect0, php_wxRect_entry, &eraseBackground0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O|b", &rect0, php_wxRect_entry, &eraseBackground0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(rect0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(rect0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(rect0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(rect0);
				}
				else if(Z_TYPE_P(rect0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::RefreshRect(*(wxRect*) object_pointer0_0)\n\n");
				#endif
				((wxWindow_php*)_this)->RefreshRect(*(wxRect*) object_pointer0_0);

				references->AddReference(rect0);

				return;
				break;
			}
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::RefreshRect(*(wxRect*) object_pointer0_0, eraseBackground0)\n\n");
				#endif
				((wxWindow_php*)_this)->RefreshRect(*(wxRect*) object_pointer0_0, eraseBackground0);

				references->AddReference(rect0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, ReleaseMouse)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::ReleaseMouse\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::ReleaseMouse\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::ReleaseMouse()\n\n");
				#endif
				((wxWindow_php*)_this)->ReleaseMouse();


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, RemoveChild)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::RemoveChild\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::RemoveChild\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* child0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'z' (&child0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "z", &child0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(child0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(child0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 || (rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(child0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(child0);
				}
				else if(Z_TYPE_P(child0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::RemoveChild((wxWindow*) object_pointer0_0)\n\n");
				#endif
				((wxWindow_php*)_this)->RemoveChild((wxWindow*) object_pointer0_0);

				references->AddReference(child0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, RemoveEventHandler)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::RemoveEventHandler\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::RemoveEventHandler\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* handler0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'z' (&handler0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "z", &handler0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(handler0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(handler0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 || (rsrc_type != le_wxWindow && rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow && rsrc_type != le_wxValidator && rsrc_type != le_wxTextValidator && rsrc_type != le_wxGenericValidator && rsrc_type != le_wxMenu && rsrc_type != le_wxAuiManager && rsrc_type != le_wxMouseEventsManager && rsrc_type != le_wxTimer && rsrc_type != le_wxEventBlocker && rsrc_type != le_wxProcess && rsrc_type != le_wxFileSystemWatcher && rsrc_type != le_wxTaskBarIcon && rsrc_type != le_wxNotificationMessage))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(handler0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(handler0);
				}
				else if(Z_TYPE_P(handler0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::RemoveEventHandler((wxEvtHandler*) object_pointer0_0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->RemoveEventHandler((wxEvtHandler*) object_pointer0_0));

				references->AddReference(handler0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, Reparent)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::Reparent\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::Reparent\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* newParent0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'z' (&newParent0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "z", &newParent0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(newParent0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(newParent0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 || (rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(newParent0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(newParent0);
				}
				else if(Z_TYPE_P(newParent0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::Reparent((wxWindow*) object_pointer0_0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->Reparent((wxWindow*) object_pointer0_0));

				references->AddReference(newParent0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, ScreenToClient)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::ScreenToClient\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::ScreenToClient\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* pt0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&pt0, php_wxPoint_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &pt0, php_wxPoint_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(pt0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(pt0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(pt0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(pt0);
				}
				else if(Z_TYPE_P(pt0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::ScreenToClient(*(wxPoint*) object_pointer0_0) to return new object\n\n");
				#endif
				wxPoint value_to_return1;
				value_to_return1 = ((wxWindow_php*)_this)->ScreenToClient(*(wxPoint*) object_pointer0_0);
				void* ptr = safe_emalloc(1, sizeof(wxPoint_php), 0);
				memcpy(ptr, &value_to_return1, sizeof(wxPoint));
				object_init_ex(return_value, php_wxPoint_entry);
				add_property_resource(return_value, "wxResource", zend_list_insert(ptr, le_wxPoint));

				references->AddReference(pt0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, ScrollLines)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::ScrollLines\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::ScrollLines\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long lines0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&lines0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &lines0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::ScrollLines((int) lines0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->ScrollLines((int) lines0));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, ScrollPages)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::ScrollPages\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::ScrollPages\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long pages0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&pages0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &pages0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::ScrollPages((int) pages0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->ScrollPages((int) pages0));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SendSizeEvent)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SendSizeEvent\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SendSizeEvent\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long flags0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 0  && arguments_received <= 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '|l' (&flags0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "|l", &flags0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SendSizeEvent()\n\n");
				#endif
				((wxWindow_php*)_this)->SendSizeEvent();


				return;
				break;
			}
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SendSizeEvent((int) flags0)\n\n");
				#endif
				((wxWindow_php*)_this)->SendSizeEvent((int) flags0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SendSizeEventToParent)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SendSizeEventToParent\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SendSizeEventToParent\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long flags0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 0  && arguments_received <= 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '|l' (&flags0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "|l", &flags0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SendSizeEventToParent()\n\n");
				#endif
				((wxWindow_php*)_this)->SendSizeEventToParent();


				return;
				break;
			}
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SendSizeEventToParent((int) flags0)\n\n");
				#endif
				((wxWindow_php*)_this)->SendSizeEventToParent((int) flags0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetAutoLayout)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetAutoLayout\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetAutoLayout\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool autoLayout0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'b' (&autoLayout0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "b", &autoLayout0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetAutoLayout(autoLayout0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetAutoLayout(autoLayout0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetBackgroundColour)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetBackgroundColour\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetBackgroundColour\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* colour0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&colour0, php_wxColour_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &colour0, php_wxColour_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(colour0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(colour0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(colour0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(colour0);
				}
				else if(Z_TYPE_P(colour0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::SetBackgroundColour(*(wxColour*) object_pointer0_0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->SetBackgroundColour(*(wxColour*) object_pointer0_0));

				references->AddReference(colour0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetBackgroundStyle)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetBackgroundStyle\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetBackgroundStyle\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long style0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&style0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &style0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::SetBackgroundStyle((wxBackgroundStyle) style0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->SetBackgroundStyle((wxBackgroundStyle) style0));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetCanFocus)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetCanFocus\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetCanFocus\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool canFocus0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'b' (&canFocus0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "b", &canFocus0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetCanFocus(canFocus0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetCanFocus(canFocus0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetCaret)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetCaret\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetCaret\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* caret0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'z' (&caret0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "z", &caret0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(caret0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(caret0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(caret0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(caret0);
				}
				else if(Z_TYPE_P(caret0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetCaret((wxCaret*) object_pointer0_0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetCaret((wxCaret*) object_pointer0_0);

				references->AddReference(caret0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetClientSize)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetClientSize\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetClientSize\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long width0;
	long height0;
	bool overload0_called = false;
	//Parameters for overload 1
	zval* size1 = 0;
	void* object_pointer1_0 = 0;
	bool overload1_called = false;
	//Parameters for overload 2
	zval* rect2 = 0;
	void* object_pointer2_0 = 0;
	bool overload2_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'll' (&width0, &height0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "ll", &width0, &height0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

	//Overload 1
	overload1:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&size1, php_wxSize_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &size1, php_wxSize_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(size1) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(size1), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer1_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer1_0 )
					{
						goto overload2;
					}
				}
				else if(Z_TYPE_P(size1) == IS_LONG)
				{
					object_pointer1_0 = Z_LVAL_P(size1);
				}
				else if(Z_TYPE_P(size1) != IS_NULL)
				{
						goto overload2;
				}
			}

			overload1_called = true;
			already_called = true;
		}
	}

	//Overload 2
	overload2:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&rect2, php_wxRect_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &rect2, php_wxRect_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(rect2) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(rect2), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer2_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer2_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(rect2) == IS_LONG)
				{
					object_pointer2_0 = Z_LVAL_P(rect2);
				}
				else if(Z_TYPE_P(rect2) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload2_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetClientSize((int) width0, (int) height0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetClientSize((int) width0, (int) height0);


				return;
				break;
			}
		}
	}

	
	if(overload1_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetClientSize(*(wxSize*) object_pointer1_0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetClientSize(*(wxSize*) object_pointer1_0);

				references->AddReference(size1);

				return;
				break;
			}
		}
	}

	
	if(overload2_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetClientSize(*(wxRect*) object_pointer2_0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetClientSize(*(wxRect*) object_pointer2_0);

				references->AddReference(rect2);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetConstraints)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetConstraints\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetConstraints\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* constraints0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'z' (&constraints0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "z", &constraints0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(constraints0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(constraints0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(constraints0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(constraints0);
				}
				else if(Z_TYPE_P(constraints0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetConstraints((wxLayoutConstraints*) object_pointer0_0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetConstraints((wxLayoutConstraints*) object_pointer0_0);

				references->AddReference(constraints0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetContainingSizer)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetContainingSizer\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetContainingSizer\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* sizer0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'z' (&sizer0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "z", &sizer0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(sizer0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(sizer0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 || (rsrc_type != le_wxBoxSizer && rsrc_type != le_wxStaticBoxSizer && rsrc_type != le_wxWrapSizer && rsrc_type != le_wxStdDialogButtonSizer && rsrc_type != le_wxGridSizer && rsrc_type != le_wxFlexGridSizer && rsrc_type != le_wxGridBagSizer))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(sizer0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(sizer0);
				}
				else if(Z_TYPE_P(sizer0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetContainingSizer((wxSizer*) object_pointer0_0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetContainingSizer((wxSizer*) object_pointer0_0);

				references->AddReference(sizer0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetCursor)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetCursor\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetCursor\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* cursor0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&cursor0, php_wxCursor_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &cursor0, php_wxCursor_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(cursor0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(cursor0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(cursor0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(cursor0);
				}
				else if(Z_TYPE_P(cursor0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::SetCursor(*(wxCursor*) object_pointer0_0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->SetCursor(*(wxCursor*) object_pointer0_0));

				references->AddReference(cursor0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetDropTarget)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetDropTarget\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetDropTarget\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* target0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'z' (&target0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "z", &target0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(target0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(target0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 || (rsrc_type != le_wxFileDropTarget && rsrc_type != le_wxTextDropTarget))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(target0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(target0);
				}
				else if(Z_TYPE_P(target0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetDropTarget((wxDropTarget*) object_pointer0_0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetDropTarget((wxDropTarget*) object_pointer0_0);

				references->AddReference(target0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetEventHandler)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetEventHandler\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetEventHandler\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* handler0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'z' (&handler0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "z", &handler0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(handler0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(handler0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 || (rsrc_type != le_wxWindow && rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow && rsrc_type != le_wxValidator && rsrc_type != le_wxTextValidator && rsrc_type != le_wxGenericValidator && rsrc_type != le_wxMenu && rsrc_type != le_wxAuiManager && rsrc_type != le_wxMouseEventsManager && rsrc_type != le_wxTimer && rsrc_type != le_wxEventBlocker && rsrc_type != le_wxProcess && rsrc_type != le_wxFileSystemWatcher && rsrc_type != le_wxTaskBarIcon && rsrc_type != le_wxNotificationMessage))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(handler0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(handler0);
				}
				else if(Z_TYPE_P(handler0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetEventHandler((wxEvtHandler*) object_pointer0_0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetEventHandler((wxEvtHandler*) object_pointer0_0);

				references->AddReference(handler0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetExtraStyle)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetExtraStyle\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetExtraStyle\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long exStyle0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&exStyle0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &exStyle0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetExtraStyle((long) exStyle0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetExtraStyle((long) exStyle0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetFocus)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetFocus\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetFocus\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetFocus()\n\n");
				#endif
				((wxWindow_php*)_this)->SetFocus();


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetFocusFromKbd)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetFocusFromKbd\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetFocusFromKbd\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetFocusFromKbd()\n\n");
				#endif
				((wxWindow_php*)_this)->SetFocusFromKbd();


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetFont)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetFont\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetFont\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* font0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&font0, php_wxFont_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &font0, php_wxFont_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(font0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(font0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(font0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(font0);
				}
				else if(Z_TYPE_P(font0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::SetFont(*(wxFont*) object_pointer0_0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->SetFont(*(wxFont*) object_pointer0_0));

				references->AddReference(font0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetForegroundColour)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetForegroundColour\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetForegroundColour\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* colour0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&colour0, php_wxColour_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &colour0, php_wxColour_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(colour0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(colour0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(colour0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(colour0);
				}
				else if(Z_TYPE_P(colour0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing RETURN_BOOL(wxWindow::SetForegroundColour(*(wxColour*) object_pointer0_0))\n\n");
				#endif
				ZVAL_BOOL(return_value, ((wxWindow_php*)_this)->SetForegroundColour(*(wxColour*) object_pointer0_0));

				references->AddReference(colour0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetHelpText)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetHelpText\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetHelpText\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	char* helpText0;
	long helpText_len0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 's' (&helpText0, &helpText_len0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "s", &helpText0, &helpText_len0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetHelpText(wxString(helpText0, wxConvUTF8))\n\n");
				#endif
				((wxWindow_php*)_this)->SetHelpText(wxString(helpText0, wxConvUTF8));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetId)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetId\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetId\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long winid0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&winid0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &winid0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetId((wxWindowID) winid0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetId((wxWindowID) winid0);


				return;
				break;
			}
		}
	}

		
}
void wxWindow_php::SetInitialBestSize(const wxSize& size)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking virtual wxWindow::SetInitialBestSize\n");
	php_printf("===========================================\n");
	#endif
	
	zval *arguments[1];
	
	//Initilize arguments array
	for(int i=0; i<1; i++)
	{
		MAKE_STD_ZVAL(arguments[i]);
	}

	zval* return_value;
	MAKE_STD_ZVAL(return_value);
	zval function_name;
	ZVAL_STRING(&function_name, "SetInitialBestSize", 0);
	char* temp_string;
	char _wxResource[] = "wxResource";
	zval **tmp;
	int id_to_find;
	void* return_object;
	int rsrc_type;
	
	//Parameters for conversion
	object_init_ex(arguments[0], php_wxSize_entry);
	add_property_resource(arguments[0], _wxResource, zend_list_insert(&size, le_wxSize));
		
	#ifdef USE_WXPHP_DEBUG
	php_printf("Trying to call user defined method\n");
	#endif
	
	if(call_user_function(NULL, (zval**) &this->phpObj, &function_name, return_value, 1, arguments TSRMLS_CC) == FAILURE)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Invocation of user defined method failed\n");
		#endif
		
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Returning userspace value.\n");
		#endif
		
		return;
	}
	
	#ifdef USE_WXPHP_DEBUG
	php_printf("Calling original method\n");
	php_printf("===========================================\n\n");
	#endif
	
	//Call original method
	wxWindow::SetInitialBestSize(size);

}
PHP_METHOD(php_wxWindow, SetInitialSize)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetInitialSize\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetInitialSize\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* size0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 0  && arguments_received <= 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '|O' (&size0, php_wxSize_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "|O", &size0, php_wxSize_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(size0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(size0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(size0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(size0);
				}
				else if(Z_TYPE_P(size0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetInitialSize()\n\n");
				#endif
				((wxWindow_php*)_this)->SetInitialSize();


				return;
				break;
			}
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetInitialSize(*(wxSize*) object_pointer0_0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetInitialSize(*(wxSize*) object_pointer0_0);

				references->AddReference(size0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetLabel)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetLabel\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetLabel\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	char* label0;
	long label_len0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 's' (&label0, &label_len0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "s", &label0, &label_len0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetLabel(wxString(label0, wxConvUTF8))\n\n");
				#endif
				((wxWindow_php*)_this)->SetLabel(wxString(label0, wxConvUTF8));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetLayoutDirection)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetLayoutDirection\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetLayoutDirection\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long dir0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&dir0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &dir0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetLayoutDirection((wxLayoutDirection) dir0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetLayoutDirection((wxLayoutDirection) dir0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetMaxClientSize)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetMaxClientSize\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetMaxClientSize\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* size0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&size0, php_wxSize_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &size0, php_wxSize_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(size0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(size0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(size0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(size0);
				}
				else if(Z_TYPE_P(size0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetMaxClientSize(*(wxSize*) object_pointer0_0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetMaxClientSize(*(wxSize*) object_pointer0_0);

				references->AddReference(size0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetMaxSize)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetMaxSize\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetMaxSize\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* size0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&size0, php_wxSize_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &size0, php_wxSize_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(size0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(size0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(size0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(size0);
				}
				else if(Z_TYPE_P(size0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetMaxSize(*(wxSize*) object_pointer0_0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetMaxSize(*(wxSize*) object_pointer0_0);

				references->AddReference(size0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetMinClientSize)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetMinClientSize\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetMinClientSize\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* size0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&size0, php_wxSize_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &size0, php_wxSize_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(size0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(size0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(size0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(size0);
				}
				else if(Z_TYPE_P(size0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetMinClientSize(*(wxSize*) object_pointer0_0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetMinClientSize(*(wxSize*) object_pointer0_0);

				references->AddReference(size0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetMinSize)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetMinSize\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetMinSize\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* size0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&size0, php_wxSize_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &size0, php_wxSize_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(size0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(size0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(size0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(size0);
				}
				else if(Z_TYPE_P(size0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetMinSize(*(wxSize*) object_pointer0_0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetMinSize(*(wxSize*) object_pointer0_0);

				references->AddReference(size0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetName)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetName\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetName\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	char* name0;
	long name_len0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 's' (&name0, &name_len0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "s", &name0, &name_len0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetName(wxString(name0, wxConvUTF8))\n\n");
				#endif
				((wxWindow_php*)_this)->SetName(wxString(name0, wxConvUTF8));


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetNextHandler)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetNextHandler\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetNextHandler\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* handler0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'z' (&handler0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "z", &handler0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(handler0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(handler0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 || (rsrc_type != le_wxWindow && rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow && rsrc_type != le_wxValidator && rsrc_type != le_wxTextValidator && rsrc_type != le_wxGenericValidator && rsrc_type != le_wxMenu && rsrc_type != le_wxAuiManager && rsrc_type != le_wxMouseEventsManager && rsrc_type != le_wxTimer && rsrc_type != le_wxEventBlocker && rsrc_type != le_wxProcess && rsrc_type != le_wxFileSystemWatcher && rsrc_type != le_wxTaskBarIcon && rsrc_type != le_wxNotificationMessage))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(handler0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(handler0);
				}
				else if(Z_TYPE_P(handler0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetNextHandler((wxEvtHandler*) object_pointer0_0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetNextHandler((wxEvtHandler*) object_pointer0_0);

				references->AddReference(handler0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetOwnBackgroundColour)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetOwnBackgroundColour\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetOwnBackgroundColour\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* colour0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&colour0, php_wxColour_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &colour0, php_wxColour_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(colour0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(colour0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(colour0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(colour0);
				}
				else if(Z_TYPE_P(colour0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetOwnBackgroundColour(*(wxColour*) object_pointer0_0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetOwnBackgroundColour(*(wxColour*) object_pointer0_0);

				references->AddReference(colour0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetOwnFont)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetOwnFont\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetOwnFont\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* font0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&font0, php_wxFont_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &font0, php_wxFont_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(font0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(font0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(font0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(font0);
				}
				else if(Z_TYPE_P(font0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetOwnFont(*(wxFont*) object_pointer0_0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetOwnFont(*(wxFont*) object_pointer0_0);

				references->AddReference(font0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetOwnForegroundColour)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetOwnForegroundColour\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetOwnForegroundColour\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* colour0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&colour0, php_wxColour_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &colour0, php_wxColour_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(colour0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(colour0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(colour0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(colour0);
				}
				else if(Z_TYPE_P(colour0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetOwnForegroundColour(*(wxColour*) object_pointer0_0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetOwnForegroundColour(*(wxColour*) object_pointer0_0);

				references->AddReference(colour0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetPalette)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetPalette\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetPalette\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* pal0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&pal0, php_wxPalette_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &pal0, php_wxPalette_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(pal0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(pal0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(pal0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(pal0);
				}
				else if(Z_TYPE_P(pal0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetPalette(*(wxPalette*) object_pointer0_0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetPalette(*(wxPalette*) object_pointer0_0);

				references->AddReference(pal0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetPosition)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetPosition\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetPosition\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* pt0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'O' (&pt0, php_wxPoint_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "O", &pt0, php_wxPoint_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(pt0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(pt0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(pt0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(pt0);
				}
				else if(Z_TYPE_P(pt0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetPosition(*(wxPoint*) object_pointer0_0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetPosition(*(wxPoint*) object_pointer0_0);

				references->AddReference(pt0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetPreviousHandler)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetPreviousHandler\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetPreviousHandler\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* handler0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'z' (&handler0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "z", &handler0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(handler0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(handler0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 || (rsrc_type != le_wxWindow && rsrc_type != le_wxNonOwnedWindow && rsrc_type != le_wxTopLevelWindow && rsrc_type != le_wxFrame && rsrc_type != le_wxSplashScreen && rsrc_type != le_wxMDIChildFrame && rsrc_type != le_wxMDIParentFrame && rsrc_type != le_wxMiniFrame && rsrc_type != le_wxPreviewFrame && rsrc_type != le_wxHtmlHelpDialog && rsrc_type != le_wxHtmlHelpFrame && rsrc_type != le_wxDialog && rsrc_type != le_wxTextEntryDialog && rsrc_type != le_wxPasswordEntryDialog && rsrc_type != le_wxMessageDialog && rsrc_type != le_wxFindReplaceDialog && rsrc_type != le_wxDirDialog && rsrc_type != le_wxSymbolPickerDialog && rsrc_type != le_wxPropertySheetDialog && rsrc_type != le_wxWizard && rsrc_type != le_wxProgressDialog && rsrc_type != le_wxColourDialog && rsrc_type != le_wxFileDialog && rsrc_type != le_wxFontDialog && rsrc_type != le_wxPageSetupDialog && rsrc_type != le_wxPrintDialog && rsrc_type != le_wxSingleChoiceDialog && rsrc_type != le_wxPopupWindow && rsrc_type != le_wxPopupTransientWindow && rsrc_type != le_wxControl && rsrc_type != le_wxStatusBar && rsrc_type != le_wxAnyButton && rsrc_type != le_wxButton && rsrc_type != le_wxBitmapButton && rsrc_type != le_wxToggleButton && rsrc_type != le_wxBitmapToggleButton && rsrc_type != le_wxTreeCtrl && rsrc_type != le_wxControlWithItems && rsrc_type != le_wxListBox && rsrc_type != le_wxCheckListBox && rsrc_type != le_wxRearrangeList && rsrc_type != le_wxChoice && rsrc_type != le_wxBookCtrlBase && rsrc_type != le_wxAuiNotebook && rsrc_type != le_wxListbook && rsrc_type != le_wxChoicebook && rsrc_type != le_wxNotebook && rsrc_type != le_wxTreebook && rsrc_type != le_wxToolbook && rsrc_type != le_wxAnimationCtrl && rsrc_type != le_wxStyledTextCtrl && rsrc_type != le_wxScrollBar && rsrc_type != le_wxStaticText && rsrc_type != le_wxStaticLine && rsrc_type != le_wxStaticBox && rsrc_type != le_wxStaticBitmap && rsrc_type != le_wxCheckBox && rsrc_type != le_wxTextCtrl && rsrc_type != le_wxSearchCtrl && rsrc_type != le_wxComboBox && rsrc_type != le_wxBitmapComboBox && rsrc_type != le_wxAuiToolBar && rsrc_type != le_wxListCtrl && rsrc_type != le_wxListView && rsrc_type != le_wxRadioBox && rsrc_type != le_wxRadioButton && rsrc_type != le_wxSlider && rsrc_type != le_wxSpinCtrl && rsrc_type != le_wxSpinButton && rsrc_type != le_wxGauge && rsrc_type != le_wxHyperlinkCtrl && rsrc_type != le_wxSpinCtrlDouble && rsrc_type != le_wxGenericDirCtrl && rsrc_type != le_wxCalendarCtrl && rsrc_type != le_wxPickerBase && rsrc_type != le_wxColourPickerCtrl && rsrc_type != le_wxFontPickerCtrl && rsrc_type != le_wxFilePickerCtrl && rsrc_type != le_wxDirPickerCtrl && rsrc_type != le_wxTimePickerCtrl && rsrc_type != le_wxToolBar && rsrc_type != le_wxDatePickerCtrl && rsrc_type != le_wxCollapsiblePane && rsrc_type != le_wxComboCtrl && rsrc_type != le_wxDataViewCtrl && rsrc_type != le_wxDataViewListCtrl && rsrc_type != le_wxDataViewTreeCtrl && rsrc_type != le_wxHeaderCtrl && rsrc_type != le_wxHeaderCtrlSimple && rsrc_type != le_wxFileCtrl && rsrc_type != le_wxInfoBar && rsrc_type != le_wxRibbonControl && rsrc_type != le_wxRibbonBar && rsrc_type != le_wxRibbonButtonBar && rsrc_type != le_wxRibbonGallery && rsrc_type != le_wxRibbonPage && rsrc_type != le_wxRibbonPanel && rsrc_type != le_wxRibbonToolBar && rsrc_type != le_wxSplitterWindow && rsrc_type != le_wxPanel && rsrc_type != le_wxWizardPage && rsrc_type != le_wxWizardPageSimple && rsrc_type != le_wxScrolledWindow && rsrc_type != le_wxHtmlWindow && rsrc_type != le_wxGrid && rsrc_type != le_wxPreviewCanvas && rsrc_type != le_wxEditableListBox && rsrc_type != le_wxHScrolledWindow && rsrc_type != le_wxPreviewControlBar && rsrc_type != le_wxMenuBar && rsrc_type != le_wxBannerWindow && rsrc_type != le_wxMDIClientWindow && rsrc_type != le_wxTreeListCtrl && rsrc_type != le_wxSashWindow && rsrc_type != le_wxSashLayoutWindow && rsrc_type != le_wxHtmlHelpWindow && rsrc_type != le_wxValidator && rsrc_type != le_wxTextValidator && rsrc_type != le_wxGenericValidator && rsrc_type != le_wxMenu && rsrc_type != le_wxAuiManager && rsrc_type != le_wxMouseEventsManager && rsrc_type != le_wxTimer && rsrc_type != le_wxEventBlocker && rsrc_type != le_wxProcess && rsrc_type != le_wxFileSystemWatcher && rsrc_type != le_wxTaskBarIcon && rsrc_type != le_wxNotificationMessage))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(handler0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(handler0);
				}
				else if(Z_TYPE_P(handler0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetPreviousHandler((wxEvtHandler*) object_pointer0_0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetPreviousHandler((wxEvtHandler*) object_pointer0_0);

				references->AddReference(handler0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetThemeEnabled)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetThemeEnabled\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetThemeEnabled\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool enable0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'b' (&enable0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "b", &enable0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetThemeEnabled(enable0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetThemeEnabled(enable0);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWindow, SetWindowVariant)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWindow::SetWindowVariant\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWindow::SetWindowVariant\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWindow)
				references = &((wxWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNonOwnedWindow)
				references = &((wxNonOwnedWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTopLevelWindow)
				references = &((wxTopLevelWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFrame)
				references = &((wxFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplashScreen)
				references = &((wxSplashScreen_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIChildFrame)
				references = &((wxMDIChildFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIParentFrame)
				references = &((wxMDIParentFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMiniFrame)
				references = &((wxMiniFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewFrame)
				references = &((wxPreviewFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpDialog)
				references = &((wxHtmlHelpDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpFrame)
				references = &((wxHtmlHelpFrame_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDialog)
				references = &((wxDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextEntryDialog)
				references = &((wxTextEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPasswordEntryDialog)
				references = &((wxPasswordEntryDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMessageDialog)
				references = &((wxMessageDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFindReplaceDialog)
				references = &((wxFindReplaceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirDialog)
				references = &((wxDirDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSymbolPickerDialog)
				references = &((wxSymbolPickerDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPropertySheetDialog)
				references = &((wxPropertySheetDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizard)
				references = &((wxWizard_php*)_this)->references;
			else if(parent_rsrc_type == le_wxProgressDialog)
				references = &((wxProgressDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourDialog)
				references = &((wxColourDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileDialog)
				references = &((wxFileDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontDialog)
				references = &((wxFontDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPageSetupDialog)
				references = &((wxPageSetupDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPrintDialog)
				references = &((wxPrintDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSingleChoiceDialog)
				references = &((wxSingleChoiceDialog_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupWindow)
				references = &((wxPopupWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPopupTransientWindow)
				references = &((wxPopupTransientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControl)
				references = &((wxControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStatusBar)
				references = &((wxStatusBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnyButton)
				references = &((wxAnyButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxButton)
				references = &((wxButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapButton)
				references = &((wxBitmapButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToggleButton)
				references = &((wxToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapToggleButton)
				references = &((wxBitmapToggleButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeCtrl)
				references = &((wxTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxControlWithItems)
				references = &((wxControlWithItems_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListBox)
				references = &((wxListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckListBox)
				references = &((wxCheckListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRearrangeList)
				references = &((wxRearrangeList_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoice)
				references = &((wxChoice_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBookCtrlBase)
				references = &((wxBookCtrlBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiNotebook)
				references = &((wxAuiNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListbook)
				references = &((wxListbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxChoicebook)
				references = &((wxChoicebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxNotebook)
				references = &((wxNotebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreebook)
				references = &((wxTreebook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolbook)
				references = &((wxToolbook_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAnimationCtrl)
				references = &((wxAnimationCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStyledTextCtrl)
				references = &((wxStyledTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrollBar)
				references = &((wxScrollBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticText)
				references = &((wxStaticText_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticLine)
				references = &((wxStaticLine_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBox)
				references = &((wxStaticBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxStaticBitmap)
				references = &((wxStaticBitmap_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCheckBox)
				references = &((wxCheckBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTextCtrl)
				references = &((wxTextCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSearchCtrl)
				references = &((wxSearchCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboBox)
				references = &((wxComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBitmapComboBox)
				references = &((wxBitmapComboBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxAuiToolBar)
				references = &((wxAuiToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListCtrl)
				references = &((wxListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxListView)
				references = &((wxListView_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioBox)
				references = &((wxRadioBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRadioButton)
				references = &((wxRadioButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSlider)
				references = &((wxSlider_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrl)
				references = &((wxSpinCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinButton)
				references = &((wxSpinButton_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGauge)
				references = &((wxGauge_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHyperlinkCtrl)
				references = &((wxHyperlinkCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSpinCtrlDouble)
				references = &((wxSpinCtrlDouble_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGenericDirCtrl)
				references = &((wxGenericDirCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCalendarCtrl)
				references = &((wxCalendarCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPickerBase)
				references = &((wxPickerBase_php*)_this)->references;
			else if(parent_rsrc_type == le_wxColourPickerCtrl)
				references = &((wxColourPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFontPickerCtrl)
				references = &((wxFontPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFilePickerCtrl)
				references = &((wxFilePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDirPickerCtrl)
				references = &((wxDirPickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTimePickerCtrl)
				references = &((wxTimePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxToolBar)
				references = &((wxToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDatePickerCtrl)
				references = &((wxDatePickerCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxCollapsiblePane)
				references = &((wxCollapsiblePane_php*)_this)->references;
			else if(parent_rsrc_type == le_wxComboCtrl)
				references = &((wxComboCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewCtrl)
				references = &((wxDataViewCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewListCtrl)
				references = &((wxDataViewListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxDataViewTreeCtrl)
				references = &((wxDataViewTreeCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrl)
				references = &((wxHeaderCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHeaderCtrlSimple)
				references = &((wxHeaderCtrlSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxFileCtrl)
				references = &((wxFileCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxInfoBar)
				references = &((wxInfoBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonControl)
				references = &((wxRibbonControl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonBar)
				references = &((wxRibbonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonButtonBar)
				references = &((wxRibbonButtonBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonGallery)
				references = &((wxRibbonGallery_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPage)
				references = &((wxRibbonPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonPanel)
				references = &((wxRibbonPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxRibbonToolBar)
				references = &((wxRibbonToolBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSplitterWindow)
				references = &((wxSplitterWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPanel)
				references = &((wxPanel_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
			else if(parent_rsrc_type == le_wxScrolledWindow)
				references = &((wxScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlWindow)
				references = &((wxHtmlWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxGrid)
				references = &((wxGrid_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewCanvas)
				references = &((wxPreviewCanvas_php*)_this)->references;
			else if(parent_rsrc_type == le_wxEditableListBox)
				references = &((wxEditableListBox_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHScrolledWindow)
				references = &((wxHScrolledWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxPreviewControlBar)
				references = &((wxPreviewControlBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMenuBar)
				references = &((wxMenuBar_php*)_this)->references;
			else if(parent_rsrc_type == le_wxBannerWindow)
				references = &((wxBannerWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxMDIClientWindow)
				references = &((wxMDIClientWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxTreeListCtrl)
				references = &((wxTreeListCtrl_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashWindow)
				references = &((wxSashWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxSashLayoutWindow)
				references = &((wxSashLayoutWindow_php*)_this)->references;
			else if(parent_rsrc_type == le_wxHtmlHelpWindow)
				references = &((wxHtmlHelpWindow_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	long variant0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'l' (&variant0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "l", &variant0 ) == SUCCESS)
		{
			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWindow::SetWindowVariant((wxWindowVariant) variant0)\n\n");
				#endif
				((wxWindow_php*)_this)->SetWindowVariant((wxWindowVariant) variant0);


				return;
				break;
			}
		}
	}

		
}
void php_wxWizardPage_destruction_handler(zend_rsrc_list_entry *rsrc TSRMLS_DC) 
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Calling php_wxWizardPage_destruction_handler on %s at line %i\n", zend_get_executed_filename(TSRMLS_C), zend_get_executed_lineno(TSRMLS_C));
	php_printf("===========================================\n");
	#endif
	
	
	wxWizardPage_php* object = (wxWizardPage_php*)rsrc->ptr;
	
	if(rsrc->ptr != NULL)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Pointer not null\n");
		php_printf("Pointer address %x\n", rsrc->ptr);
		#endif
		
		if(object->references.IsUserInitialized())
		{	
	
			#ifdef USE_WXPHP_DEBUG
			php_printf("Deleting object by calling destroy\n");
			#endif
			
			object->Destroy();
			
			rsrc->ptr = NULL;
		}
		
		#ifdef USE_WXPHP_DEBUG
		php_printf("Deletion of wxWizardPage done\n");
		php_printf("===========================================\n\n");
		#endif
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Not user space initialized\n");
		#endif
	}
}
PHP_METHOD(php_wxWizardPage, GetBitmap)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWizardPage::GetBitmap\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWizardPage::GetBitmap\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWizardPage)
				references = &((wxWizardPage_php*)_this)->references;
			else if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 0)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with '' ()\n");
		#endif
		overload0_called = true;
		already_called = true;
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 0:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWizardPage::GetBitmap() to return new object\n\n");
				#endif
				wxBitmap value_to_return0;
				value_to_return0 = ((wxWizardPage_php*)_this)->GetBitmap();
				void* ptr = safe_emalloc(1, sizeof(wxBitmap_php), 0);
				memcpy(ptr, &value_to_return0, sizeof(wxBitmap));
				object_init_ex(return_value, php_wxBitmap_entry);
				add_property_resource(return_value, "wxResource", zend_list_insert(ptr, le_wxBitmap));


				return;
				break;
			}
		}
	}

		
}
wxWizardPage* wxWizardPage_php::GetPrev()const
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking virtual wxWizardPage::GetPrev\n");
	php_printf("===========================================\n");
	#endif
	
	int arguments = NULL;

	zval* return_value;
	MAKE_STD_ZVAL(return_value);
	zval function_name;
	ZVAL_STRING(&function_name, "GetPrev", 0);
	char* temp_string;
	char _wxResource[] = "wxResource";
	zval **tmp;
	int id_to_find;
	void* return_object;
	int rsrc_type;
	
	//Parameters for conversion
		
	#ifdef USE_WXPHP_DEBUG
	php_printf("Trying to call user defined method\n");
	#endif
	
	if(call_user_function(NULL, (zval**) &this->phpObj, &function_name, return_value, 0, arguments TSRMLS_CC) == FAILURE)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Invocation of user defined method failed\n");
		#endif
		
		wxMessageBox("Failed to call virtual method 'GetPrev'!", "Error");
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Returning userspace value.\n");
		#endif
		
		if(Z_TYPE_P(return_value) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(return_value), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
		{
			id_to_find = Z_RESVAL_P(*tmp);
			return_object = zend_list_find(id_to_find, &rsrc_type);
		}
		else if(Z_TYPE_P(return_value) == IS_LONG)
		{
			return_object = Z_LVAL_P(return_value);
		}
		return (wxWizardPage*) return_object;
	}
	
	#ifdef USE_WXPHP_DEBUG
	php_printf("Calling original method\n");
	php_printf("===========================================\n\n");
	#endif
	
	//Call original method
	return wxWizardPage::GetPrev();

}
PHP_METHOD(php_wxWizardPage, __construct)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWizardPage::__construct\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	
	//Parameters for overload 0
	zval* parent0 = 0;
	void* object_pointer0_0 = 0;
	zval* bitmap0 = 0;
	void* object_pointer0_1 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 1  && arguments_received <= 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'z|O' (&parent0, &bitmap0, php_wxBitmap_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "z|O", &parent0, &bitmap0, php_wxBitmap_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(parent0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(parent0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(parent0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(parent0);
				}
				else if(Z_TYPE_P(parent0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 2){
				if(Z_TYPE_P(bitmap0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(bitmap0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_1 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_1 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(bitmap0) == IS_LONG)
				{
					object_pointer0_1 = Z_LVAL_P(bitmap0);
				}
				else if(Z_TYPE_P(bitmap0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWizard*) object_pointer0_0)\n");
				#endif
				_this = new wxWizardPage_php((wxWizard*) object_pointer0_0);

				((wxWizardPage_php*) _this)->references.Initialize();
				((wxWizardPage_php*) _this)->references.AddReference(parent0);
				break;
			}
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWizard*) object_pointer0_0, *(wxBitmap*) object_pointer0_1)\n");
				#endif
				_this = new wxWizardPage_php((wxWizard*) object_pointer0_0, *(wxBitmap*) object_pointer0_1);

				((wxWizardPage_php*) _this)->references.Initialize();
				((wxWizardPage_php*) _this)->references.AddReference(parent0);
				((wxWizardPage_php*) _this)->references.AddReference(bitmap0);
				break;
			}
		}
	}

		
	if(already_called)
	{
		long id_to_find = zend_list_insert(_this, le_wxWizardPage);
		
		add_property_resource(getThis(), _wxResource, id_to_find);
		
		MAKE_STD_ZVAL(((wxWizardPage_php*) _this)->evnArray);
		
		array_init(((wxWizardPage_php*) _this)->evnArray);
		
		((wxWizardPage_php*) _this)->phpObj = getThis();
		
		((wxWizardPage_php*) _this)->InitProperties();
		
		#ifdef ZTS 
		((wxWizardPage_php*) _this)->TSRMLS_C = TSRMLS_C;
		#endif
	}
	else
	{
		zend_error(E_ERROR, "Abstract type: failed to call a proper constructor");
	}
	
	#ifdef USE_WXPHP_DEBUG
		php_printf("===========================================\n\n");
	#endif
}
wxWizardPage* wxWizardPage_php::GetNext()const
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking virtual wxWizardPage::GetNext\n");
	php_printf("===========================================\n");
	#endif
	
	int arguments = NULL;

	zval* return_value;
	MAKE_STD_ZVAL(return_value);
	zval function_name;
	ZVAL_STRING(&function_name, "GetNext", 0);
	char* temp_string;
	char _wxResource[] = "wxResource";
	zval **tmp;
	int id_to_find;
	void* return_object;
	int rsrc_type;
	
	//Parameters for conversion
		
	#ifdef USE_WXPHP_DEBUG
	php_printf("Trying to call user defined method\n");
	#endif
	
	if(call_user_function(NULL, (zval**) &this->phpObj, &function_name, return_value, 0, arguments TSRMLS_CC) == FAILURE)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Invocation of user defined method failed\n");
		#endif
		
		wxMessageBox("Failed to call virtual method 'GetNext'!", "Error");
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Returning userspace value.\n");
		#endif
		
		if(Z_TYPE_P(return_value) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(return_value), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
		{
			id_to_find = Z_RESVAL_P(*tmp);
			return_object = zend_list_find(id_to_find, &rsrc_type);
		}
		else if(Z_TYPE_P(return_value) == IS_LONG)
		{
			return_object = Z_LVAL_P(return_value);
		}
		return (wxWizardPage*) return_object;
	}
	
	#ifdef USE_WXPHP_DEBUG
	php_printf("Calling original method\n");
	php_printf("===========================================\n\n");
	#endif
	
	//Call original method
	return wxWizardPage::GetNext();

}
void php_wxWizardPageSimple_destruction_handler(zend_rsrc_list_entry *rsrc TSRMLS_DC) 
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Calling php_wxWizardPageSimple_destruction_handler on %s at line %i\n", zend_get_executed_filename(TSRMLS_C), zend_get_executed_lineno(TSRMLS_C));
	php_printf("===========================================\n");
	#endif
	
	
	wxWizardPageSimple_php* object = (wxWizardPageSimple_php*)rsrc->ptr;
	
	if(rsrc->ptr != NULL)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Pointer not null\n");
		php_printf("Pointer address %x\n", rsrc->ptr);
		#endif
		
		if(object->references.IsUserInitialized())
		{	
	
			#ifdef USE_WXPHP_DEBUG
			php_printf("Deleting object by calling destroy\n");
			#endif
			
			object->Destroy();
			
			rsrc->ptr = NULL;
		}
		
		#ifdef USE_WXPHP_DEBUG
		php_printf("Deletion of wxWizardPageSimple done\n");
		php_printf("===========================================\n\n");
		#endif
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Not user space initialized\n");
		#endif
	}
}
PHP_METHOD(php_wxWizardPageSimple, Chain)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWizardPageSimple::Chain\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWizardPageSimple::Chain\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* first0 = 0;
	void* object_pointer0_0 = 0;
	zval* second0 = 0;
	void* object_pointer0_1 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 2)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'zz' (&first0, &second0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "zz", &first0, &second0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(first0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(first0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(first0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(first0);
				}
				else if(Z_TYPE_P(first0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 2){
				if(Z_TYPE_P(second0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(second0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_1 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_1 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(second0) == IS_LONG)
				{
					object_pointer0_1 = Z_LVAL_P(second0);
				}
				else if(Z_TYPE_P(second0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Static ");
				php_printf("Executing wxWizardPageSimple::Chain((wxWizardPageSimple*) object_pointer0_0, (wxWizardPageSimple*) object_pointer0_1)\n\n");
				#endif
				wxWizardPageSimple::Chain((wxWizardPageSimple*) object_pointer0_0, (wxWizardPageSimple*) object_pointer0_1);


				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWizardPageSimple, SetPrev)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWizardPageSimple::SetPrev\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWizardPageSimple::SetPrev\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* prev0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'z' (&prev0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "z", &prev0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(prev0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(prev0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 || (rsrc_type != le_wxWizardPageSimple))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(prev0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(prev0);
				}
				else if(Z_TYPE_P(prev0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWizardPageSimple::SetPrev((wxWizardPage*) object_pointer0_0)\n\n");
				#endif
				((wxWizardPageSimple_php*)_this)->SetPrev((wxWizardPage*) object_pointer0_0);

				references->AddReference(prev0);

				return;
				break;
			}
		}
	}

		
}
PHP_METHOD(php_wxWizardPageSimple, __construct)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWizardPageSimple::__construct\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	
	//Parameters for overload 0
	zval* parent0 = 0;
	void* object_pointer0_0 = 0;
	zval* prev0 = 0;
	void* object_pointer0_1 = 0;
	zval* next0 = 0;
	void* object_pointer0_2 = 0;
	zval* bitmap0 = 0;
	void* object_pointer0_3 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received >= 1  && arguments_received <= 4)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'z|zzO' (&parent0, &prev0, &next0, &bitmap0, php_wxBitmap_entry)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "z|zzO", &parent0, &prev0, &next0, &bitmap0, php_wxBitmap_entry ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(parent0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(parent0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(parent0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(parent0);
				}
				else if(Z_TYPE_P(parent0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 2){
				if(Z_TYPE_P(prev0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(prev0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_1 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_1 || (rsrc_type != le_wxWizardPageSimple))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(prev0) == IS_LONG)
				{
					object_pointer0_1 = Z_LVAL_P(prev0);
				}
				else if(Z_TYPE_P(prev0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 3){
				if(Z_TYPE_P(next0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(next0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_2 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_2 || (rsrc_type != le_wxWizardPageSimple))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(next0) == IS_LONG)
				{
					object_pointer0_2 = Z_LVAL_P(next0);
				}
				else if(Z_TYPE_P(next0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			if(arguments_received >= 4){
				if(Z_TYPE_P(bitmap0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(bitmap0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_3 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_3 )
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(bitmap0) == IS_LONG)
				{
					object_pointer0_3 = Z_LVAL_P(bitmap0);
				}
				else if(Z_TYPE_P(bitmap0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWizard*) object_pointer0_0)\n");
				#endif
				_this = new wxWizardPageSimple_php((wxWizard*) object_pointer0_0);

				((wxWizardPageSimple_php*) _this)->references.Initialize();
				((wxWizardPageSimple_php*) _this)->references.AddReference(parent0);
				break;
			}
			case 2:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWizard*) object_pointer0_0, (wxWizardPage*) object_pointer0_1)\n");
				#endif
				_this = new wxWizardPageSimple_php((wxWizard*) object_pointer0_0, (wxWizardPage*) object_pointer0_1);

				((wxWizardPageSimple_php*) _this)->references.Initialize();
				((wxWizardPageSimple_php*) _this)->references.AddReference(parent0);
				((wxWizardPageSimple_php*) _this)->references.AddReference(prev0);
				break;
			}
			case 3:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWizard*) object_pointer0_0, (wxWizardPage*) object_pointer0_1, (wxWizardPage*) object_pointer0_2)\n");
				#endif
				_this = new wxWizardPageSimple_php((wxWizard*) object_pointer0_0, (wxWizardPage*) object_pointer0_1, (wxWizardPage*) object_pointer0_2);

				((wxWizardPageSimple_php*) _this)->references.Initialize();
				((wxWizardPageSimple_php*) _this)->references.AddReference(parent0);
				((wxWizardPageSimple_php*) _this)->references.AddReference(prev0);
				((wxWizardPageSimple_php*) _this)->references.AddReference(next0);
				break;
			}
			case 4:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing __construct((wxWizard*) object_pointer0_0, (wxWizardPage*) object_pointer0_1, (wxWizardPage*) object_pointer0_2, *(wxBitmap*) object_pointer0_3)\n");
				#endif
				_this = new wxWizardPageSimple_php((wxWizard*) object_pointer0_0, (wxWizardPage*) object_pointer0_1, (wxWizardPage*) object_pointer0_2, *(wxBitmap*) object_pointer0_3);

				((wxWizardPageSimple_php*) _this)->references.Initialize();
				((wxWizardPageSimple_php*) _this)->references.AddReference(parent0);
				((wxWizardPageSimple_php*) _this)->references.AddReference(prev0);
				((wxWizardPageSimple_php*) _this)->references.AddReference(next0);
				((wxWizardPageSimple_php*) _this)->references.AddReference(bitmap0);
				break;
			}
		}
	}

		
	if(already_called)
	{
		long id_to_find = zend_list_insert(_this, le_wxWizardPageSimple);
		
		add_property_resource(getThis(), _wxResource, id_to_find);
		
		MAKE_STD_ZVAL(((wxWizardPageSimple_php*) _this)->evnArray);
		
		array_init(((wxWizardPageSimple_php*) _this)->evnArray);
		
		((wxWizardPageSimple_php*) _this)->phpObj = getThis();
		
		((wxWizardPageSimple_php*) _this)->InitProperties();
		
		#ifdef ZTS 
		((wxWizardPageSimple_php*) _this)->TSRMLS_C = TSRMLS_C;
		#endif
	}
	else
	{
		zend_error(E_ERROR, "Abstract type: failed to call a proper constructor");
	}
	
	#ifdef USE_WXPHP_DEBUG
		php_printf("===========================================\n\n");
	#endif
}
PHP_METHOD(php_wxWizardPageSimple, SetNext)
{
	#ifdef USE_WXPHP_DEBUG
	php_printf("Invoking wxWizardPageSimple::SetNext\n");
	php_printf("===========================================\n");
	#endif
	
	//In case the constructor uses objects
	zval **tmp;
	int rsrc_type;
	int parent_rsrc_type;
	int id_to_find;
	char _wxResource[] = "wxResource";
	
	//Other variables used thru the code
	int arguments_received = ZEND_NUM_ARGS();
	void *_this;
	zval* dummy;
	bool already_called = false;
	wxPHPObjectReferences* references;
	bool return_is_user_initialized = false;
	
	//Get pointer of object that called this method if not a static method
	if (getThis() != NULL) 
	{
		if(zend_hash_find(Z_OBJPROP_P(getThis()), _wxResource, sizeof(_wxResource),  (void **)&tmp) == FAILURE)
		{
			zend_error(E_ERROR, "Failed to get the parent object that called wxWizardPageSimple::SetNext\n");
			
			return;
		}
		else
		{
			id_to_find = Z_RESVAL_P(*tmp);
			_this = zend_list_find(id_to_find, &parent_rsrc_type);
			
			if(parent_rsrc_type == le_wxWizardPageSimple)
				references = &((wxWizardPageSimple_php*)_this)->references;
		}
	}
	else
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Processing the method call as static\n");
		#endif
	}
	
	//Parameters for overload 0
	zval* next0 = 0;
	void* object_pointer0_0 = 0;
	bool overload0_called = false;
		
	//Overload 0
	overload0:
	if(!already_called && arguments_received == 1)
	{
		#ifdef USE_WXPHP_DEBUG
		php_printf("Parameters received %d\n", arguments_received);
		php_printf("Parsing parameters with 'z' (&next0)\n");
		#endif
		if(zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, arguments_received TSRMLS_CC, "z", &next0 ) == SUCCESS)
		{
			if(arguments_received >= 1){
				if(Z_TYPE_P(next0) == IS_OBJECT && zend_hash_find(Z_OBJPROP_P(next0), _wxResource , sizeof(_wxResource),  (void **)&tmp) == SUCCESS)
				{
					id_to_find = Z_RESVAL_P(*tmp);
					object_pointer0_0 = zend_list_find(id_to_find, &rsrc_type);
					if (!object_pointer0_0 || (rsrc_type != le_wxWizardPageSimple))
					{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
					}
				}
				else if(Z_TYPE_P(next0) == IS_LONG)
				{
					object_pointer0_0 = Z_LVAL_P(next0);
				}
				else if(Z_TYPE_P(next0) != IS_NULL)
				{
						zend_error(E_ERROR, "Parameter  could not be retreived correctly.");
				}
			}

			overload0_called = true;
			already_called = true;
		}
	}

		
	
	if(overload0_called)
	{
		switch(arguments_received)
		{
			case 1:
			{
				#ifdef USE_WXPHP_DEBUG
				php_printf("Executing wxWizardPageSimple::SetNext((wxWizardPage*) object_pointer0_0)\n\n");
				#endif
				((wxWizardPageSimple_php*)_this)->SetNext((wxWizardPage*) object_pointer0_0);

				references->AddReference(next0);

				return;
				break;
			}
		}
	}

		
}
